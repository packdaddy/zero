{
  "basePath": "/api_v3",
  "definitions": {
    "KalturaAccessControl": {
      "description": "",
      "properties": {
        "containsUnsuportedRestrictions": {
          "description": "Indicates that the access control profile is new and should be handled using KalturaAccessControlProfile object and accessControlProfile service",
          "readOnly": true,
          "type": "boolean"
        },
        "createdAt": {
          "description": "Creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "description": "The description of the Access Control Profile",
          "type": "string"
        },
        "id": {
          "description": "The id of the Access Control Profile",
          "readOnly": true,
          "type": "integer"
        },
        "isDefault": {
          "description": "True if this Conversion Profile is the default",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "name": {
          "description": "The name of the Access Control Profile",
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "restrictions": {
          "items": {
            "$ref": "#/definitions/KalturaBaseRestriction"
          },
          "type": "array"
        },
        "systemName": {
          "description": "System name of the Access Control Profile",
          "type": "string"
        }
      }
    },
    "KalturaAccessControlAction": {
      "abstract": true,
      "description": "",
      "properties": {
        "type": {
          "description": "The type of the access control action",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "enumLabels": [
            "BLOCK",
            "PREVIEW",
            "LIMIT_FLAVORS",
            "ADD_TO_STORAGE",
            "LIMIT_DELIVERY_PROFILES",
            "SERVE_FROM_REMOTE_SERVER"
          ],
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaAccessControlBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        }
      }
    },
    "KalturaAccessControlBlockAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRuleAction"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAccessControlContextTypeHolder": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaContextTypeHolder"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAccessControlFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAccessControlBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAccessControlLimitDeliveryProfilesAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRuleAction"
        }
      ],
      "description": "",
      "properties": {
        "deliveryProfileIds": {
          "description": "Comma separated list of delivery profile ids",
          "type": "string"
        },
        "isBlockedList": {
          "type": "boolean"
        }
      }
    },
    "KalturaAccessControlLimitFlavorsAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRuleAction"
        }
      ],
      "description": "",
      "properties": {
        "flavorParamsIds": {
          "description": "Comma separated list of flavor ids",
          "type": "string"
        },
        "isBlockedList": {
          "type": "boolean"
        }
      }
    },
    "KalturaAccessControlListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAccessControl"
          },
          "type": "array"
        }
      }
    },
    "KalturaAccessControlPreviewAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRuleAction"
        }
      ],
      "description": "",
      "properties": {
        "limit": {
          "type": "integer"
        }
      }
    },
    "KalturaAccessControlProfile": {
      "description": "",
      "properties": {
        "createdAt": {
          "description": "Creation time as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "description": "The description of the Access Control Profile",
          "type": "string"
        },
        "id": {
          "description": "The id of the Access Control Profile",
          "readOnly": true,
          "type": "integer"
        },
        "isDefault": {
          "description": "True if this access control profile is the partner default",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "name": {
          "description": "The name of the Access Control Profile",
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "rules": {
          "items": {
            "$ref": "#/definitions/KalturaRule"
          },
          "type": "array"
        },
        "systemName": {
          "description": "System name of the Access Control Profile",
          "type": "string"
        },
        "updatedAt": {
          "description": "Update time as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaAccessControlProfileBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaAccessControlProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAccessControlProfileBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAccessControlProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAccessControlProfile"
          },
          "type": "array"
        }
      }
    },
    "KalturaAccessControlScope": {
      "description": "",
      "properties": {
        "contexts": {
          "items": {
            "$ref": "#/definitions/KalturaAccessControlContextTypeHolder"
          },
          "type": "array"
        },
        "hashes": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        },
        "ip": {
          "description": "IP to be used to test geographic location conditions.",
          "type": "string"
        },
        "ks": {
          "description": "Kaltura session to be used to test session and user conditions.",
          "type": "string"
        },
        "referrer": {
          "description": "URL to be used to test domain conditions.",
          "type": "string"
        },
        "time": {
          "description": "Unix timestamp (In seconds) to be used to test entry scheduling, keep null to use now.",
          "type": "integer"
        },
        "userAgent": {
          "description": "Browser or client application to be used to test agent conditions.",
          "type": "string"
        }
      }
    },
    "KalturaAccessControlServeRemoteEdgeServerAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRuleAction"
        }
      ],
      "description": "",
      "properties": {
        "edgeServerIds": {
          "description": "Comma separated list of edge servers playBack should be done from",
          "type": "string"
        }
      }
    },
    "KalturaAdCuePoint": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCuePoint"
        }
      ],
      "description": "",
      "properties": {
        "adType": {
          "enum": [
            "1",
            "2"
          ],
          "enumLabels": [
            "VIDEO",
            "OVERLAY"
          ],
          "type": "string"
        },
        "duration": {
          "description": "Duration in milliseconds",
          "type": "integer"
        },
        "endTime": {
          "type": "integer"
        },
        "protocolType": {
          "enum": [
            "0",
            "1",
            "2",
            "3"
          ],
          "enumLabels": [
            "CUSTOM",
            "VAST",
            "VAST_2_0",
            "VPAID"
          ],
          "type": "string"
        },
        "sourceUrl": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "KalturaAdCuePointBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCuePointFilter"
        }
      ],
      "description": "",
      "properties": {
        "durationGreaterThanOrEqual": {
          "type": "integer"
        },
        "durationLessThanOrEqual": {
          "type": "integer"
        },
        "endTimeGreaterThanOrEqual": {
          "type": "integer"
        },
        "endTimeLessThanOrEqual": {
          "type": "integer"
        },
        "protocolTypeEqual": {
          "enum": [
            "0",
            "1",
            "2",
            "3"
          ],
          "enumLabels": [
            "CUSTOM",
            "VAST",
            "VAST_2_0",
            "VPAID"
          ],
          "type": "string"
        },
        "protocolTypeIn": {
          "type": "string"
        },
        "titleLike": {
          "type": "string"
        },
        "titleMultiLikeAnd": {
          "type": "string"
        },
        "titleMultiLikeOr": {
          "type": "string"
        }
      }
    },
    "KalturaAdCuePointFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAdCuePointBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAdminUser": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUser"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAdminUserBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUserFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAdminUserFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAdminUserBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAkamaiProvisionJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProvisionJobData"
        }
      ],
      "description": "",
      "properties": {
        "cpcode": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "primaryContact": {
          "type": "string"
        },
        "secondaryContact": {
          "type": "string"
        },
        "wsdlPassword": {
          "type": "string"
        },
        "wsdlUsername": {
          "type": "string"
        }
      }
    },
    "KalturaAkamaiUniversalProvisionJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProvisionJobData"
        }
      ],
      "description": "",
      "properties": {
        "domainName": {
          "type": "string"
        },
        "dvrEnabled": {
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "DISABLED",
            "ENABLED"
          ],
          "type": "integer"
        },
        "dvrWindow": {
          "type": "integer"
        },
        "notificationEmail": {
          "type": "string"
        },
        "primaryContact": {
          "type": "string"
        },
        "secondaryContact": {
          "type": "string"
        },
        "streamId": {
          "type": "integer"
        },
        "streamType": {
          "enum": [
            "HD iPhone/iPad Live",
            "Universal Streaming Live"
          ],
          "enumLabels": [
            "HD_IPHONE_IPAD_LIVE",
            "UNIVERSAL_STREAMING_LIVE"
          ],
          "type": "string"
        },
        "systemPassword": {
          "type": "string"
        },
        "systemUserName": {
          "type": "string"
        }
      }
    },
    "KalturaAmazonS3StorageExportJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStorageExportJobData"
        }
      ],
      "description": "",
      "properties": {
        "filesPermissionInS3": {
          "enum": [
            "authenticated-read",
            "private",
            "public-read",
            "public-read-write"
          ],
          "enumLabels": [
            "ACL_AUTHENTICATED_READ",
            "ACL_PRIVATE",
            "ACL_PUBLIC_READ",
            "ACL_PUBLIC_READ_WRITE"
          ],
          "type": "string"
        },
        "s3Region": {
          "type": "string"
        }
      }
    },
    "KalturaAmazonS3StorageProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStorageProfile"
        }
      ],
      "description": "",
      "properties": {
        "filesPermissionInS3": {
          "enum": [
            "authenticated-read",
            "private",
            "public-read",
            "public-read-write"
          ],
          "enumLabels": [
            "ACL_AUTHENTICATED_READ",
            "ACL_PRIVATE",
            "ACL_PUBLIC_READ",
            "ACL_PUBLIC_READ_WRITE"
          ],
          "type": "string"
        },
        "s3Region": {
          "type": "string"
        }
      }
    },
    "KalturaAmazonS3StorageProfileBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStorageProfileFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAmazonS3StorageProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAmazonS3StorageProfileBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAnnotation": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCuePoint"
        }
      ],
      "description": "",
      "properties": {
        "childrenCount": {
          "description": "Number of all descendants",
          "readOnly": true,
          "type": "integer"
        },
        "depth": {
          "description": "Depth in the tree",
          "readOnly": true,
          "type": "integer"
        },
        "directChildrenCount": {
          "description": "Number of children, first generation only.",
          "readOnly": true,
          "type": "integer"
        },
        "duration": {
          "description": "Duration in milliseconds",
          "readOnly": true,
          "type": "integer"
        },
        "endTime": {
          "description": "End time in milliseconds",
          "type": "integer"
        },
        "isPublic": {
          "description": "Is the annotation public.",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "parentId": {
          "type": "string"
        },
        "searchableOnEntry": {
          "description": "Should the cue point get indexed on the entry.",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "KalturaAnnotationBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCuePointFilter"
        }
      ],
      "description": "",
      "properties": {
        "durationGreaterThanOrEqual": {
          "type": "integer"
        },
        "durationLessThanOrEqual": {
          "type": "integer"
        },
        "endTimeGreaterThanOrEqual": {
          "type": "integer"
        },
        "endTimeLessThanOrEqual": {
          "type": "integer"
        },
        "isPublicEqual": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "parentIdEqual": {
          "type": "string"
        },
        "parentIdIn": {
          "type": "string"
        },
        "textLike": {
          "type": "string"
        },
        "textMultiLikeAnd": {
          "type": "string"
        },
        "textMultiLikeOr": {
          "type": "string"
        }
      }
    },
    "KalturaAnnotationFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAnnotationBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAnnotationListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAnnotation"
          },
          "type": "array"
        }
      }
    },
    "KalturaAnswerCuePoint": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCuePoint"
        }
      ],
      "description": "",
      "properties": {
        "answerKey": {
          "type": "string"
        },
        "correctAnswerKeys": {
          "$ref": "#/definitions/KalturaTypedArray"
        },
        "explanation": {
          "readOnly": true,
          "type": "string"
        },
        "isCorrect": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "parentId": {
          "type": "string"
        },
        "quizUserEntryId": {
          "type": "string"
        }
      }
    },
    "KalturaAnswerCuePointBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCuePointFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAnswerCuePointFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAnswerCuePointBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaApiActionPermissionItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItem"
        }
      ],
      "description": "",
      "properties": {
        "action": {
          "type": "string"
        },
        "service": {
          "type": "string"
        }
      }
    },
    "KalturaApiActionPermissionItemBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItemFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaApiActionPermissionItemFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaApiActionPermissionItemBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaApiExceptionArg": {
      "description": "",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "KalturaApiParameterPermissionItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItem"
        }
      ],
      "description": "",
      "properties": {
        "action": {
          "enum": [
            "all",
            "insert",
            "read",
            "update"
          ],
          "enumLabels": [
            "USAGE",
            "INSERT",
            "READ",
            "UPDATE"
          ],
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "parameter": {
          "type": "string"
        }
      }
    },
    "KalturaApiParameterPermissionItemBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItemFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaApiParameterPermissionItemFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaApiParameterPermissionItemBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAppToken": {
      "description": "",
      "properties": {
        "createdAt": {
          "description": "Creation time as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "expiry": {
          "description": "Expiry time of current token (unix timestamp in seconds)",
          "type": "integer"
        },
        "id": {
          "description": "The id of the application token",
          "readOnly": true,
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "sessionDuration": {
          "description": "Expiry duration of KS (Kaltura Session) that created using the current token (in seconds)",
          "type": "integer"
        },
        "sessionPrivileges": {
          "description": "Comma separated privileges to be applied on KS (Kaltura Session) that created using the current token",
          "type": "string"
        },
        "sessionType": {
          "description": "Type of KS (Kaltura Session) that created using the current token",
          "enum": [
            0,
            2
          ],
          "enumLabels": [
            "USER",
            "ADMIN"
          ],
          "type": "integer"
        },
        "sessionUserId": {
          "description": "User id of KS (Kaltura Session) that created using the current token",
          "type": "string"
        },
        "status": {
          "description": "Application token status",
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "ACTIVE",
            "DELETED"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "token": {
          "description": "The application token",
          "readOnly": true,
          "type": "string"
        },
        "updatedAt": {
          "description": "Update time as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaAppTokenBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaAppTokenFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAppTokenBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAppTokenListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAppToken"
          },
          "type": "array"
        }
      }
    },
    "KalturaAsset": {
      "description": "",
      "properties": {
        "actualSourceAssetParamsIds": {
          "description": "Comma separated list of source flavor params ids",
          "type": "string"
        },
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "deletedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "description": "System description, error message, warnings and failure cause.",
          "readOnly": true,
          "type": "string"
        },
        "entryId": {
          "description": "The entry ID of the Flavor Asset",
          "readOnly": true,
          "type": "string"
        },
        "fileExt": {
          "description": "The file extension",
          "type": "string"
        },
        "id": {
          "description": "The ID of the Flavor Asset",
          "readOnly": true,
          "type": "string"
        },
        "partnerData": {
          "description": "Partner private data",
          "type": "string"
        },
        "partnerDescription": {
          "description": "Partner friendly description",
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "size": {
          "description": "The size (in KBytes) of the Flavor Asset",
          "readOnly": true,
          "type": "integer"
        },
        "tags": {
          "description": "Tags used to identify the Flavor Asset in various scenarios",
          "type": "string"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "version": {
          "description": "The version of the Flavor Asset",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaAssetBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "deletedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "deletedAtLessThanOrEqual": {
          "type": "integer"
        },
        "entryIdEqual": {
          "type": "string"
        },
        "entryIdIn": {
          "type": "string"
        },
        "idEqual": {
          "type": "string"
        },
        "idIn": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "sizeGreaterThanOrEqual": {
          "type": "integer"
        },
        "sizeLessThanOrEqual": {
          "type": "integer"
        },
        "tagsLike": {
          "type": "string"
        },
        "tagsMultiLikeAnd": {
          "type": "string"
        },
        "tagsMultiLikeOr": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaAssetDistributionCondition": {
      "abstract": true,
      "description": "Abstract class for asset distribution condition\n ",
      "properties": {}
    },
    "KalturaAssetDistributionPropertyCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetDistributionCondition"
        }
      ],
      "description": "Defines the condition to match a property and value on core asset object (or one if its inherited objects)\n ",
      "properties": {
        "propertyName": {
          "description": "The property name to look for, this will match to a getter on the asset object.\n\t Should be camelCase naming convention (defining \"myPropertyName\" will look for getMyPropertyName())",
          "type": "string"
        },
        "propertyValue": {
          "description": "The value to compare",
          "type": "string"
        }
      }
    },
    "KalturaAssetDistributionRule": {
      "description": "",
      "properties": {
        "assetDistributionConditions": {
          "items": {
            "$ref": "#/definitions/KalturaAssetDistributionCondition"
          },
          "type": "array"
        },
        "validationError": {
          "description": "The validation error description that will be set on the \"data\" property on KalturaDistributionValidationErrorMissingAsset if rule was not fulfilled",
          "type": "string"
        }
      }
    },
    "KalturaAssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAssetParams": {
      "description": "",
      "properties": {
        "createdAt": {
          "description": "Creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "description": "The description of the Flavor Params",
          "type": "string"
        },
        "id": {
          "description": "The id of the Flavor Params",
          "readOnly": true,
          "type": "integer"
        },
        "isSystemDefault": {
          "description": "True if those Flavor Params are part of system defaults",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "mediaParserType": {
          "description": "Media parser type to be used for post-conversion validation",
          "enum": [
            "0",
            "1"
          ],
          "enumLabels": [
            "MEDIAINFO",
            "FFMPEG"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Flavor Params",
          "type": "string"
        },
        "partnerId": {
          "type": "integer"
        },
        "remoteStorageProfileIds": {
          "description": "Comma seperated ids of remote storage profiles that the flavor distributed to, the distribution done by the conversion engine",
          "type": "integer"
        },
        "requiredPermissions": {
          "items": {
            "$ref": "#/definitions/KalturaString"
          },
          "type": "array"
        },
        "sourceAssetParamsIds": {
          "description": "Comma seperated ids of source flavor params this flavor is created from",
          "type": "string"
        },
        "sourceRemoteStorageProfileId": {
          "description": "Id of remote storage profile that used to get the source, zero indicates Kaltura data center",
          "type": "integer"
        },
        "systemName": {
          "description": "System name of the Flavor Params",
          "type": "string"
        },
        "tags": {
          "description": "The Flavor Params tags are used to identify the flavor for different usage (e.g. web, hd, mobile)",
          "type": "string"
        }
      }
    },
    "KalturaAssetParamsBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "isSystemDefaultEqual": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        },
        "tagsEqual": {
          "type": "string"
        }
      }
    },
    "KalturaAssetParamsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetParamsBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAssetParamsOutput": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetParams"
        }
      ],
      "description": "",
      "properties": {
        "assetId": {
          "type": "string"
        },
        "assetParamsId": {
          "type": "integer"
        },
        "assetParamsVersion": {
          "type": "string"
        },
        "assetVersion": {
          "type": "string"
        },
        "format": {
          "description": "The container format of the Flavor Params",
          "enum": [
            "3gp",
            "applehttp",
            "avi",
            "bmp",
            "copy",
            "flv",
            "hls",
            "isma",
            "ismv",
            "jpg",
            "m2ts",
            "m4v",
            "mkv",
            "mov",
            "mp3",
            "mp4",
            "mpeg",
            "mpegts",
            "mxf",
            "ogg",
            "ogv",
            "pdf",
            "png",
            "swf",
            "wav",
            "webm",
            "wma",
            "wmv",
            "wvm"
          ],
          "enumLabels": [
            "_3GP",
            "APPLEHTTP",
            "AVI",
            "BMP",
            "COPY",
            "FLV",
            "HLS",
            "ISMA",
            "ISMV",
            "JPG",
            "M2TS",
            "M4V",
            "MKV",
            "MOV",
            "MP3",
            "MP4",
            "MPEG",
            "MPEGTS",
            "MXF",
            "OGG",
            "OGV",
            "PDF",
            "PNG",
            "SWF",
            "WAV",
            "WEBM",
            "WMA",
            "WMV",
            "WVM"
          ],
          "type": "string"
        },
        "readyBehavior": {
          "type": "integer"
        }
      }
    },
    "KalturaAssetParamsOutputBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetParamsFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAssetParamsOutputFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetParamsOutputBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAssetParamsResourceContainer": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaResource"
        }
      ],
      "description": "",
      "properties": {
        "assetParamsId": {
          "description": "The asset params to associate with the reaource",
          "type": "integer"
        },
        "resource": {
          "$ref": "#/definitions/KalturaContentResource"
        }
      }
    },
    "KalturaAssetPropertiesCompareCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "",
      "properties": {
        "properties": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        }
      }
    },
    "KalturaAssetResource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaContentResource"
        }
      ],
      "description": "Used to ingest media that is already ingested to Kaltura system as a different flavor asset in the past, the new created flavor asset will be ready immediately using a file sync of link type that will point to the existing file sync of the existing flavor asset.\n ",
      "properties": {
        "assetId": {
          "description": "ID of the source asset",
          "type": "string"
        }
      }
    },
    "KalturaAssetsParamsResourceContainers": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaResource"
        }
      ],
      "description": "",
      "properties": {
        "resources": {
          "items": {
            "$ref": "#/definitions/KalturaAssetParamsResourceContainer"
          },
          "type": "array"
        }
      }
    },
    "KalturaAttachmentAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAsset"
        }
      ],
      "description": "",
      "properties": {
        "filename": {
          "description": "The filename of the attachment asset content",
          "type": "string"
        },
        "format": {
          "description": "The attachment format",
          "enum": [
            "1",
            "2",
            "3"
          ],
          "enumLabels": [
            "TEXT",
            "MEDIA",
            "DOCUMENT"
          ],
          "type": "string"
        },
        "status": {
          "description": "The status of the asset",
          "enum": [
            -1,
            0,
            2,
            3,
            7,
            9
          ],
          "enumLabels": [
            "ERROR",
            "QUEUED",
            "READY",
            "DELETED",
            "IMPORTING",
            "EXPORTING"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "title": {
          "description": "Attachment asset title",
          "type": "string"
        }
      }
    },
    "KalturaAttachmentAssetBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "description": "",
      "properties": {
        "formatEqual": {
          "enum": [
            "1",
            "2",
            "3"
          ],
          "enumLabels": [
            "TEXT",
            "MEDIA",
            "DOCUMENT"
          ],
          "type": "string"
        },
        "formatIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            -1,
            0,
            2,
            3,
            7,
            9
          ],
          "enumLabels": [
            "ERROR",
            "QUEUED",
            "READY",
            "DELETED",
            "IMPORTING",
            "EXPORTING"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "statusNotIn": {
          "type": "string"
        }
      }
    },
    "KalturaAttachmentAssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAttachmentAssetBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaAttachmentAssetListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAttachmentAsset"
          },
          "type": "array"
        }
      }
    },
    "KalturaAuthenticatedCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "",
      "properties": {
        "privileges": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        }
      }
    },
    "KalturaBaseEntry": {
      "description": "",
      "properties": {
        "accessControlId": {
          "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
          "type": "integer"
        },
        "adminTags": {
          "description": "Entry admin tags can be updated only by administrators",
          "type": "string"
        },
        "capabilities": {
          "description": "Comma seperated string of the capabilities of the entry. Any capability needed can be added to this list.",
          "readOnly": true,
          "type": "string"
        },
        "categories": {
          "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
          "type": "string"
        },
        "categoriesIds": {
          "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
          "type": "string"
        },
        "conversionProfileId": {
          "description": "Override the default ingestion profile",
          "type": "integer"
        },
        "createdAt": {
          "description": "Entry creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "creatorId": {
          "description": "The ID of the user who created this entry",
          "type": "string"
        },
        "description": {
          "description": "Entry description",
          "type": "string"
        },
        "downloadUrl": {
          "description": "Download URL for the entry",
          "readOnly": true,
          "type": "string"
        },
        "endDate": {
          "description": "Entry scheduling end date (null when not set, send -1 to remove)",
          "type": "integer"
        },
        "entitledUsersEdit": {
          "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
          "type": "string"
        },
        "entitledUsersPublish": {
          "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
          "type": "string"
        },
        "groupId": {
          "type": "integer"
        },
        "id": {
          "description": "Auto generated 10 characters alphanumeric string",
          "readOnly": true,
          "type": "string"
        },
        "licenseType": {
          "description": "License type used for this entry",
          "enum": [
            -1,
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15
          ],
          "enumLabels": [
            "UNKNOWN",
            "NONE",
            "COPYRIGHTED",
            "PUBLIC_DOMAIN",
            "CREATIVECOMMONS_ATTRIBUTION",
            "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
            "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
            "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
            "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
            "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
            "GFDL",
            "GPL",
            "AFFERO_GPL",
            "LGPL",
            "BSD",
            "APACHE",
            "MOZILLA"
          ],
          "type": "integer"
        },
        "moderationCount": {
          "description": "Number of moderation requests waiting for this entry",
          "readOnly": true,
          "type": "integer"
        },
        "moderationStatus": {
          "description": "Entry moderation status",
          "enum": [
            1,
            2,
            3,
            5,
            6
          ],
          "enumLabels": [
            "PENDING_MODERATION",
            "APPROVED",
            "REJECTED",
            "FLAGGED_FOR_REVIEW",
            "AUTO_APPROVED"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Entry name (Min 1 chars)",
          "type": "string"
        },
        "operationAttributes": {
          "items": {
            "$ref": "#/definitions/KalturaOperationAttributes"
          },
          "type": "array"
        },
        "parentEntryId": {
          "description": "ID of source root entry, used for defining entires association",
          "type": "string"
        },
        "partnerData": {
          "description": "Can be used to store various partner related data as a string",
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "partnerSortValue": {
          "description": "Can be used to store various partner related data as a numeric value",
          "type": "integer"
        },
        "rank": {
          "description": "The calculated average rank. rank = totalRank / votes",
          "readOnly": true,
          "type": "number"
        },
        "redirectEntryId": {
          "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
          "type": "string"
        },
        "referenceId": {
          "description": "Entry external reference id",
          "type": "string"
        },
        "replacedEntryId": {
          "description": "ID of the entry that will be replaced when the replacement approved and this entry is ready",
          "readOnly": true,
          "type": "string"
        },
        "replacementStatus": {
          "description": "Status of the replacement readiness and approval",
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4"
          ],
          "enumLabels": [
            "NONE",
            "APPROVED_BUT_NOT_READY",
            "READY_BUT_NOT_APPROVED",
            "NOT_READY_AND_NOT_APPROVED",
            "FAILED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "replacingEntryId": {
          "description": "ID of temporary entry that will replace this entry when it's approved and ready for replacement",
          "readOnly": true,
          "type": "string"
        },
        "rootEntryId": {
          "description": "ID of source root entry, used for clipped, skipped and cropped entries that created from another entry",
          "readOnly": true,
          "type": "string"
        },
        "searchText": {
          "description": "Indexed search text for full text search",
          "readOnly": true,
          "type": "string"
        },
        "startDate": {
          "description": "Entry scheduling start date (null when not set, send -1 to remove)",
          "type": "integer"
        },
        "status": {
          "enum": [
            "-2",
            "-1",
            "virusScan.ScanFailure",
            "0",
            "virusScan.Infected",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ],
          "enumLabels": [
            "ERROR_IMPORTING",
            "ERROR_CONVERTING",
            "SCAN_FAILURE",
            "IMPORT",
            "INFECTED",
            "PRECONVERT",
            "READY",
            "DELETED",
            "PENDING",
            "MODERATE",
            "BLOCKED",
            "NO_CONTENT"
          ],
          "readOnly": true,
          "type": "string"
        },
        "tags": {
          "description": "Entry tags",
          "type": "string"
        },
        "thumbnailUrl": {
          "description": "Thumbnail URL",
          "readOnly": true,
          "type": "string"
        },
        "totalRank": {
          "description": "The sum of all rank values submitted to the baseEntry.anonymousRank action",
          "readOnly": true,
          "type": "integer"
        },
        "type": {
          "description": "The type of the entry, this is auto filled by the derived entry object",
          "enum": [
            "-1",
            "externalMedia.externalMedia",
            "1",
            "2",
            "5",
            "6",
            "7",
            "8",
            "10"
          ],
          "enumLabels": [
            "AUTOMATIC",
            "EXTERNAL_MEDIA",
            "MEDIA_CLIP",
            "MIX",
            "PLAYLIST",
            "DATA",
            "LIVE_STREAM",
            "LIVE_CHANNEL",
            "DOCUMENT"
          ],
          "type": "string"
        },
        "updatedAt": {
          "description": "Entry update date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "userId": {
          "description": "The ID of the user who is the owner of this entry",
          "type": "string"
        },
        "version": {
          "description": "Version of the entry data",
          "readOnly": true,
          "type": "integer"
        },
        "votes": {
          "description": "A count of all requests made to the baseEntry.anonymousRank action",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaBaseEntryBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "accessControlIdEqual": {
          "type": "integer"
        },
        "accessControlIdIn": {
          "type": "string"
        },
        "adminTagsLike": {
          "description": "This filter should be in use for retrieving specific entries. It should include only one string to search for in entry tags set by an ADMIN user (no wildcards, spaces are treated as part of the string).",
          "type": "string"
        },
        "adminTagsMultiLikeAnd": {
          "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, set by an ADMIN user, while applying an AND logic to retrieve entries that contain all input strings (no wildcards, spaces are treated as part of the string).",
          "type": "string"
        },
        "adminTagsMultiLikeOr": {
          "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, set by an ADMIN user, while applying an OR logic to retrieve entries that contain at least one input string (no wildcards, spaces are treated as part of the string).",
          "type": "string"
        },
        "categoriesIdsEmpty": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "categoriesIdsMatchAnd": {
          "type": "string"
        },
        "categoriesIdsMatchOr": {
          "description": "All entries of the categories, excluding their child categories.\n\t To include entries of the child categories, use categoryAncestorIdIn, or categoriesMatchOr.",
          "type": "string"
        },
        "categoriesIdsNotContains": {
          "type": "string"
        },
        "categoriesMatchAnd": {
          "type": "string"
        },
        "categoriesMatchOr": {
          "description": "All entries within these categories or their child categories.",
          "type": "string"
        },
        "categoriesNotContains": {
          "type": "string"
        },
        "createdAtGreaterThanOrEqual": {
          "description": "This filter parameter should be in use for retrieving only entries which were created at Kaltura system after a specific time/date (standard timestamp format).",
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "description": "This filter parameter should be in use for retrieving only entries which were created at Kaltura system before a specific time/date (standard timestamp format).",
          "type": "integer"
        },
        "creatorIdEqual": {
          "type": "string"
        },
        "endDateGreaterThanOrEqual": {
          "type": "integer"
        },
        "endDateGreaterThanOrEqualOrNull": {
          "type": "integer"
        },
        "endDateLessThanOrEqual": {
          "type": "integer"
        },
        "endDateLessThanOrEqualOrNull": {
          "type": "integer"
        },
        "entitledUsersEditMatchAnd": {
          "type": "string"
        },
        "entitledUsersPublishMatchAnd": {
          "type": "string"
        },
        "groupIdEqual": {
          "type": "integer"
        },
        "idEqual": {
          "description": "This filter should be in use for retrieving only a specific entry (identified by its entryId).",
          "type": "string"
        },
        "idIn": {
          "description": "This filter should be in use for retrieving few specific entries (string should include comma separated list of entryId strings).",
          "type": "string"
        },
        "idNotIn": {
          "type": "string"
        },
        "moderationStatusEqual": {
          "enum": [
            1,
            2,
            3,
            5,
            6
          ],
          "enumLabels": [
            "PENDING_MODERATION",
            "APPROVED",
            "REJECTED",
            "FLAGGED_FOR_REVIEW",
            "AUTO_APPROVED"
          ],
          "type": "integer"
        },
        "moderationStatusIn": {
          "type": "string"
        },
        "moderationStatusNotEqual": {
          "enum": [
            1,
            2,
            3,
            5,
            6
          ],
          "enumLabels": [
            "PENDING_MODERATION",
            "APPROVED",
            "REJECTED",
            "FLAGGED_FOR_REVIEW",
            "AUTO_APPROVED"
          ],
          "type": "integer"
        },
        "moderationStatusNotIn": {
          "type": "string"
        },
        "nameEqual": {
          "description": "This filter should be in use for retrieving entries with a specific name.",
          "type": "string"
        },
        "nameLike": {
          "description": "This filter should be in use for retrieving specific entries. It should include only one string to search for in entry names (no wildcards, spaces are treated as part of the string).",
          "type": "string"
        },
        "nameMultiLikeAnd": {
          "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry names, while applying an AND logic to retrieve entries that contain all input strings (no wildcards, spaces are treated as part of the string).",
          "type": "string"
        },
        "nameMultiLikeOr": {
          "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry names, while applying an OR logic to retrieve entries that contain at least one input string (no wildcards, spaces are treated as part of the string).",
          "type": "string"
        },
        "parentEntryIdEqual": {
          "type": "string"
        },
        "partnerIdEqual": {
          "description": "This filter should be in use for retrieving only entries which were uploaded by/assigned to users of a specific Kaltura Partner (identified by Partner ID).",
          "type": "integer"
        },
        "partnerIdIn": {
          "description": "This filter should be in use for retrieving only entries within Kaltura network which were uploaded by/assigned to users of few Kaltura Partners  (string should include comma separated list of PartnerIDs)",
          "type": "string"
        },
        "partnerSortValueGreaterThanOrEqual": {
          "type": "integer"
        },
        "partnerSortValueLessThanOrEqual": {
          "type": "integer"
        },
        "referenceIdEqual": {
          "type": "string"
        },
        "referenceIdIn": {
          "type": "string"
        },
        "replacedEntryIdEqual": {
          "type": "string"
        },
        "replacedEntryIdIn": {
          "type": "string"
        },
        "replacementStatusEqual": {
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4"
          ],
          "enumLabels": [
            "NONE",
            "APPROVED_BUT_NOT_READY",
            "READY_BUT_NOT_APPROVED",
            "NOT_READY_AND_NOT_APPROVED",
            "FAILED"
          ],
          "type": "string"
        },
        "replacementStatusIn": {
          "type": "string"
        },
        "replacingEntryIdEqual": {
          "type": "string"
        },
        "replacingEntryIdIn": {
          "type": "string"
        },
        "rootEntryIdEqual": {
          "type": "string"
        },
        "rootEntryIdIn": {
          "type": "string"
        },
        "searchTextMatchAnd": {
          "description": "This filter should be in use for retrieving specific entries while search match the input string within all of the following metadata attributes: name, description, tags, adminTags.",
          "type": "string"
        },
        "searchTextMatchOr": {
          "description": "This filter should be in use for retrieving specific entries while search match the input string within at least one of the following metadata attributes: name, description, tags, adminTags.",
          "type": "string"
        },
        "startDateGreaterThanOrEqual": {
          "type": "integer"
        },
        "startDateGreaterThanOrEqualOrNull": {
          "type": "integer"
        },
        "startDateLessThanOrEqual": {
          "type": "integer"
        },
        "startDateLessThanOrEqualOrNull": {
          "type": "integer"
        },
        "statusEqual": {
          "description": "This filter should be in use for retrieving only entries, at a specific {",
          "enum": [
            "-2",
            "-1",
            "virusScan.ScanFailure",
            "0",
            "virusScan.Infected",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ],
          "enumLabels": [
            "ERROR_IMPORTING",
            "ERROR_CONVERTING",
            "SCAN_FAILURE",
            "IMPORT",
            "INFECTED",
            "PRECONVERT",
            "READY",
            "DELETED",
            "PENDING",
            "MODERATE",
            "BLOCKED",
            "NO_CONTENT"
          ],
          "type": "string"
        },
        "statusIn": {
          "description": "This filter should be in use for retrieving only entries, at few specific {",
          "type": "string"
        },
        "statusNotEqual": {
          "description": "This filter should be in use for retrieving only entries, not at a specific {",
          "enum": [
            "-2",
            "-1",
            "virusScan.ScanFailure",
            "0",
            "virusScan.Infected",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ],
          "enumLabels": [
            "ERROR_IMPORTING",
            "ERROR_CONVERTING",
            "SCAN_FAILURE",
            "IMPORT",
            "INFECTED",
            "PRECONVERT",
            "READY",
            "DELETED",
            "PENDING",
            "MODERATE",
            "BLOCKED",
            "NO_CONTENT"
          ],
          "type": "string"
        },
        "statusNotIn": {
          "description": "This filter should be in use for retrieving only entries, not at few specific {",
          "type": "string"
        },
        "tagsAdminTagsMultiLikeAnd": {
          "type": "string"
        },
        "tagsAdminTagsMultiLikeOr": {
          "type": "string"
        },
        "tagsAdminTagsNameMultiLikeAnd": {
          "type": "string"
        },
        "tagsAdminTagsNameMultiLikeOr": {
          "type": "string"
        },
        "tagsLike": {
          "description": "This filter should be in use for retrieving specific entries. It should include only one string to search for in entry tags (no wildcards, spaces are treated as part of the string).",
          "type": "string"
        },
        "tagsMultiLikeAnd": {
          "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, while applying an AND logic to retrieve entries that contain all input strings (no wildcards, spaces are treated as part of the string).",
          "type": "string"
        },
        "tagsMultiLikeOr": {
          "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, while applying an OR logic to retrieve entries that contain at least one input string (no wildcards, spaces are treated as part of the string).",
          "type": "string"
        },
        "tagsNameMultiLikeAnd": {
          "type": "string"
        },
        "tagsNameMultiLikeOr": {
          "type": "string"
        },
        "totalRankGreaterThanOrEqual": {
          "type": "integer"
        },
        "totalRankLessThanOrEqual": {
          "type": "integer"
        },
        "typeEqual": {
          "enum": [
            "-1",
            "externalMedia.externalMedia",
            "1",
            "2",
            "5",
            "6",
            "7",
            "8",
            "10"
          ],
          "enumLabels": [
            "AUTOMATIC",
            "EXTERNAL_MEDIA",
            "MEDIA_CLIP",
            "MIX",
            "PLAYLIST",
            "DATA",
            "LIVE_STREAM",
            "LIVE_CHANNEL",
            "DOCUMENT"
          ],
          "type": "string"
        },
        "typeIn": {
          "description": "This filter should be in use for retrieving entries of few {",
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        },
        "userIdEqual": {
          "description": "This filter parameter should be in use for retrieving only entries, uploaded by/assigned to a specific user (identified by user Id).",
          "type": "string"
        },
        "userIdIn": {
          "type": "string"
        }
      }
    },
    "KalturaBaseEntryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseEntryBaseFilter"
        }
      ],
      "description": "",
      "properties": {
        "categoriesFullNameIn": {
          "type": "string"
        },
        "categoryAncestorIdIn": {
          "description": "All entries within this categoy or in child categories",
          "type": "string"
        },
        "freeText": {
          "type": "string"
        },
        "isRoot": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "redirectFromEntryId": {
          "description": "The id of the original entry",
          "type": "string"
        }
      }
    },
    "KalturaBaseEntryListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaBaseEntry"
          },
          "type": "array"
        }
      }
    },
    "KalturaBaseResponseProfile": {
      "abstract": true,
      "description": "",
      "properties": {}
    },
    "KalturaBaseRestriction": {
      "abstract": true,
      "description": "",
      "properties": {}
    },
    "KalturaBaseSyndicationFeed": {
      "abstract": true,
      "description": "",
      "properties": {
        "addToDefaultConversionProfile": {
          "type": "boolean"
        },
        "allowEmbed": {
          "description": "allow_embed tells google OR yahoo weather to allow embedding the video on google OR yahoo video results\n\t or just to provide a link to the landing page.\n\t it is applied on the video-player_loc property in the XML (google)\n\t and addes media-player tag (yahoo)",
          "type": "boolean"
        },
        "categories": {
          "type": "string"
        },
        "createdAt": {
          "description": "Creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "enforceEntitlement": {
          "description": "Should enforce entitlement on feed entries",
          "type": "boolean"
        },
        "entriesOrderBy": {
          "enum": [
            "-createdAt",
            "recent"
          ],
          "enumLabels": [
            "CREATED_AT_DESC",
            "RECENT"
          ],
          "type": "string"
        },
        "feedUrl": {
          "readOnly": true,
          "type": "string"
        },
        "flavorParamId": {
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "landingPage": {
          "description": "Base URL for each video, on the partners site\n\t This is required by all syndication types.",
          "type": "string"
        },
        "name": {
          "description": "feed name",
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "playerUiconfId": {
          "description": "Select a uiconf ID as player skin to include in the kwidget url",
          "type": "integer"
        },
        "playlistId": {
          "description": "link a playlist that will set what content the feed will include\n\t if empty, all content will be included in feed",
          "type": "string"
        },
        "privacyContext": {
          "description": "Set privacy context for search entries that assiged to private and public categories within a category privacy context.",
          "type": "string"
        },
        "status": {
          "description": "feed status",
          "enum": [
            -1,
            1
          ],
          "enumLabels": [
            "DELETED",
            "ACTIVE"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "storageId": {
          "type": "integer"
        },
        "transcodeExistingContent": {
          "type": "boolean"
        },
        "type": {
          "description": "feed type",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "enumLabels": [
            "GOOGLE_VIDEO",
            "YAHOO",
            "ITUNES",
            "TUBE_MOGUL",
            "KALTURA",
            "KALTURA_XSLT"
          ],
          "type": "integer"
        },
        "updatedAt": {
          "description": "Update date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaBaseSyndicationFeedBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaBaseSyndicationFeedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSyndicationFeedBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaBaseSyndicationFeedListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaBaseSyndicationFeed"
          },
          "type": "array"
        }
      }
    },
    "KalturaBatchHistoryData": {
      "description": "",
      "properties": {
        "batchIndex": {
          "type": "integer"
        },
        "errNumber": {
          "type": "integer"
        },
        "errType": {
          "type": "integer"
        },
        "hostName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "schedulerId": {
          "type": "integer"
        },
        "sessionId": {
          "type": "string"
        },
        "timeStamp": {
          "type": "integer"
        },
        "workerId": {
          "type": "integer"
        }
      }
    },
    "KalturaBatchJob": {
      "description": "",
      "properties": {
        "abort": {
          "type": "integer"
        },
        "batchIndex": {
          "type": "integer"
        },
        "batchVersion": {
          "type": "integer"
        },
        "bulkJobId": {
          "description": "The id of the bulk upload job that initiated this job",
          "type": "integer"
        },
        "checkAgainTimeout": {
          "type": "integer"
        },
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/KalturaJobData"
        },
        "dc": {
          "type": "integer"
        },
        "deletedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "entryId": {
          "type": "string"
        },
        "entryName": {
          "type": "string"
        },
        "errNumber": {
          "type": "integer"
        },
        "errType": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "enumLabels": [
            "APP",
            "RUNTIME",
            "HTTP",
            "CURL",
            "KALTURA_API",
            "KALTURA_CLIENT"
          ],
          "type": "integer"
        },
        "estimatedEffort": {
          "type": "integer"
        },
        "executionAttempts": {
          "readOnly": true,
          "type": "integer"
        },
        "finishTime": {
          "description": "The time that the job was finished or closed as failed",
          "type": "integer"
        },
        "history": {
          "items": {
            "$ref": "#/definitions/KalturaBatchHistoryData"
          },
          "type": "array"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "jobObjectId": {
          "type": "string"
        },
        "jobObjectType": {
          "type": "integer"
        },
        "jobSubType": {
          "type": "integer"
        },
        "jobType": {
          "enum": [
            "0",
            "caption.parsemultilanguagecaptionasset",
            "captionSearch.parseCaptionAsset",
            "contentDistribution.DistributionDelete",
            "contentDistribution.DistributionDisable",
            "contentDistribution.DistributionEnable",
            "contentDistribution.DistributionFetchReport",
            "contentDistribution.DistributionSubmit",
            "contentDistribution.DistributionSync",
            "contentDistribution.DistributionUpdate",
            "dropFolder.DropFolderContentProcessor",
            "dropFolder.DropFolderWatcher",
            "eventNotification.EventNotificationHandler",
            "scheduledTask.ScheduledTask",
            "tagSearch.IndexTagsByPrivacyContext",
            "tagSearch.TagResolve",
            "virusScan.VirusScan",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "10",
            "11",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41"
          ],
          "enumLabels": [
            "CONVERT",
            "PARSE_MULTI_LANGUAGE_CAPTION_ASSET",
            "PARSE_CAPTION_ASSET",
            "DISTRIBUTION_DELETE",
            "DISTRIBUTION_DISABLE",
            "DISTRIBUTION_ENABLE",
            "DISTRIBUTION_FETCH_REPORT",
            "DISTRIBUTION_SUBMIT",
            "DISTRIBUTION_SYNC",
            "DISTRIBUTION_UPDATE",
            "DROP_FOLDER_CONTENT_PROCESSOR",
            "DROP_FOLDER_WATCHER",
            "EVENT_NOTIFICATION_HANDLER",
            "SCHEDULED_TASK",
            "INDEX_TAGS",
            "TAG_RESOLVE",
            "VIRUS_SCAN",
            "IMPORT",
            "DELETE",
            "FLATTEN",
            "BULKUPLOAD",
            "DVDCREATOR",
            "DOWNLOAD",
            "OOCONVERT",
            "CONVERT_PROFILE",
            "POSTCONVERT",
            "EXTRACT_MEDIA",
            "MAIL",
            "NOTIFICATION",
            "CLEANUP",
            "SCHEDULER_HELPER",
            "BULKDOWNLOAD",
            "DB_CLEANUP",
            "PROVISION_PROVIDE",
            "CONVERT_COLLECTION",
            "STORAGE_EXPORT",
            "PROVISION_DELETE",
            "STORAGE_DELETE",
            "EMAIL_INGESTION",
            "METADATA_IMPORT",
            "METADATA_TRANSFORM",
            "FILESYNC_IMPORT",
            "CAPTURE_THUMB",
            "DELETE_FILE",
            "INDEX",
            "MOVE_CATEGORY_ENTRIES",
            "COPY",
            "CONCAT",
            "CONVERT_LIVE_SEGMENT",
            "COPY_PARTNER",
            "VALIDATE_LIVE_MEDIA_SERVERS",
            "SYNC_CATEGORY_PRIVACY_CONTEXT",
            "LIVE_REPORT_EXPORT",
            "RECALCULATE_CACHE"
          ],
          "readOnly": true,
          "type": "string"
        },
        "lastSchedulerId": {
          "type": "integer"
        },
        "lastWorkerId": {
          "type": "integer"
        },
        "lockExpiration": {
          "readOnly": true,
          "type": "integer"
        },
        "lockVersion": {
          "readOnly": true,
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "parentJobId": {
          "description": "When one job creates another - the parent should set this parentJobId to be its own id.",
          "type": "integer"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "priority": {
          "type": "integer"
        },
        "queueTime": {
          "description": "The time that the job was pulled from the queue",
          "type": "integer"
        },
        "rootJobId": {
          "description": "The id of the root parent job",
          "type": "integer"
        },
        "schedulerId": {
          "type": "integer"
        },
        "status": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "enumLabels": [
            "PENDING",
            "QUEUED",
            "PROCESSING",
            "PROCESSED",
            "MOVEFILE",
            "FINISHED",
            "FAILED",
            "ABORTED",
            "ALMOST_DONE",
            "RETRY",
            "FATAL",
            "DONT_PROCESS",
            "FINISHED_PARTIALLY"
          ],
          "type": "integer"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "urgency": {
          "type": "integer"
        },
        "workerId": {
          "type": "integer"
        }
      }
    },
    "KalturaBatchJobBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "batchVersionEqual": {
          "type": "integer"
        },
        "batchVersionGreaterThanOrEqual": {
          "type": "integer"
        },
        "batchVersionLessThanOrEqual": {
          "type": "integer"
        },
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "entryIdEqual": {
          "type": "string"
        },
        "errNumberEqual": {
          "type": "integer"
        },
        "errNumberIn": {
          "type": "string"
        },
        "errNumberNotIn": {
          "type": "string"
        },
        "errTypeEqual": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "enumLabels": [
            "APP",
            "RUNTIME",
            "HTTP",
            "CURL",
            "KALTURA_API",
            "KALTURA_CLIENT"
          ],
          "type": "integer"
        },
        "errTypeIn": {
          "type": "string"
        },
        "errTypeNotIn": {
          "type": "string"
        },
        "estimatedEffortGreaterThan": {
          "type": "integer"
        },
        "estimatedEffortLessThan": {
          "type": "integer"
        },
        "executionAttemptsGreaterThanOrEqual": {
          "type": "integer"
        },
        "executionAttemptsLessThanOrEqual": {
          "type": "integer"
        },
        "finishTimeGreaterThanOrEqual": {
          "type": "integer"
        },
        "finishTimeLessThanOrEqual": {
          "type": "integer"
        },
        "idEqual": {
          "type": "integer"
        },
        "idGreaterThanOrEqual": {
          "type": "integer"
        },
        "jobSubTypeEqual": {
          "type": "integer"
        },
        "jobSubTypeIn": {
          "type": "string"
        },
        "jobSubTypeNotIn": {
          "type": "string"
        },
        "jobTypeEqual": {
          "enum": [
            "0",
            "caption.parsemultilanguagecaptionasset",
            "captionSearch.parseCaptionAsset",
            "contentDistribution.DistributionDelete",
            "contentDistribution.DistributionDisable",
            "contentDistribution.DistributionEnable",
            "contentDistribution.DistributionFetchReport",
            "contentDistribution.DistributionSubmit",
            "contentDistribution.DistributionSync",
            "contentDistribution.DistributionUpdate",
            "dropFolder.DropFolderContentProcessor",
            "dropFolder.DropFolderWatcher",
            "eventNotification.EventNotificationHandler",
            "scheduledTask.ScheduledTask",
            "tagSearch.IndexTagsByPrivacyContext",
            "tagSearch.TagResolve",
            "virusScan.VirusScan",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "10",
            "11",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41"
          ],
          "enumLabels": [
            "CONVERT",
            "PARSE_MULTI_LANGUAGE_CAPTION_ASSET",
            "PARSE_CAPTION_ASSET",
            "DISTRIBUTION_DELETE",
            "DISTRIBUTION_DISABLE",
            "DISTRIBUTION_ENABLE",
            "DISTRIBUTION_FETCH_REPORT",
            "DISTRIBUTION_SUBMIT",
            "DISTRIBUTION_SYNC",
            "DISTRIBUTION_UPDATE",
            "DROP_FOLDER_CONTENT_PROCESSOR",
            "DROP_FOLDER_WATCHER",
            "EVENT_NOTIFICATION_HANDLER",
            "SCHEDULED_TASK",
            "INDEX_TAGS",
            "TAG_RESOLVE",
            "VIRUS_SCAN",
            "IMPORT",
            "DELETE",
            "FLATTEN",
            "BULKUPLOAD",
            "DVDCREATOR",
            "DOWNLOAD",
            "OOCONVERT",
            "CONVERT_PROFILE",
            "POSTCONVERT",
            "EXTRACT_MEDIA",
            "MAIL",
            "NOTIFICATION",
            "CLEANUP",
            "SCHEDULER_HELPER",
            "BULKDOWNLOAD",
            "DB_CLEANUP",
            "PROVISION_PROVIDE",
            "CONVERT_COLLECTION",
            "STORAGE_EXPORT",
            "PROVISION_DELETE",
            "STORAGE_DELETE",
            "EMAIL_INGESTION",
            "METADATA_IMPORT",
            "METADATA_TRANSFORM",
            "FILESYNC_IMPORT",
            "CAPTURE_THUMB",
            "DELETE_FILE",
            "INDEX",
            "MOVE_CATEGORY_ENTRIES",
            "COPY",
            "CONCAT",
            "CONVERT_LIVE_SEGMENT",
            "COPY_PARTNER",
            "VALIDATE_LIVE_MEDIA_SERVERS",
            "SYNC_CATEGORY_PRIVACY_CONTEXT",
            "LIVE_REPORT_EXPORT",
            "RECALCULATE_CACHE"
          ],
          "type": "string"
        },
        "jobTypeIn": {
          "type": "string"
        },
        "jobTypeNotIn": {
          "type": "string"
        },
        "lockVersionGreaterThanOrEqual": {
          "type": "integer"
        },
        "lockVersionLessThanOrEqual": {
          "type": "integer"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "partnerIdNotIn": {
          "type": "string"
        },
        "priorityEqual": {
          "type": "integer"
        },
        "priorityGreaterThanOrEqual": {
          "type": "integer"
        },
        "priorityIn": {
          "type": "string"
        },
        "priorityLessThanOrEqual": {
          "type": "integer"
        },
        "priorityNotIn": {
          "type": "string"
        },
        "queueTimeGreaterThanOrEqual": {
          "type": "integer"
        },
        "queueTimeLessThanOrEqual": {
          "type": "integer"
        },
        "statusEqual": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "enumLabels": [
            "PENDING",
            "QUEUED",
            "PROCESSING",
            "PROCESSED",
            "MOVEFILE",
            "FINISHED",
            "FAILED",
            "ABORTED",
            "ALMOST_DONE",
            "RETRY",
            "FATAL",
            "DONT_PROCESS",
            "FINISHED_PARTIALLY"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "statusNotIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        },
        "urgencyGreaterThanOrEqual": {
          "type": "integer"
        },
        "urgencyLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaBatchJobFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBatchJobBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaBatchJobFilterExt": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBatchJobFilter"
        }
      ],
      "description": "",
      "properties": {
        "jobTypeAndSubTypeIn": {
          "type": "string"
        }
      }
    },
    "KalturaBatchJobListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaBatchJob"
          },
          "type": "array"
        }
      }
    },
    "KalturaBatchQueuesStatus": {
      "description": "",
      "properties": {
        "jobType": {
          "enum": [
            "0",
            "caption.parsemultilanguagecaptionasset",
            "captionSearch.parseCaptionAsset",
            "contentDistribution.DistributionDelete",
            "contentDistribution.DistributionDisable",
            "contentDistribution.DistributionEnable",
            "contentDistribution.DistributionFetchReport",
            "contentDistribution.DistributionSubmit",
            "contentDistribution.DistributionSync",
            "contentDistribution.DistributionUpdate",
            "dropFolder.DropFolderContentProcessor",
            "dropFolder.DropFolderWatcher",
            "eventNotification.EventNotificationHandler",
            "scheduledTask.ScheduledTask",
            "tagSearch.IndexTagsByPrivacyContext",
            "tagSearch.TagResolve",
            "virusScan.VirusScan",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "10",
            "11",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41"
          ],
          "enumLabels": [
            "CONVERT",
            "PARSE_MULTI_LANGUAGE_CAPTION_ASSET",
            "PARSE_CAPTION_ASSET",
            "DISTRIBUTION_DELETE",
            "DISTRIBUTION_DISABLE",
            "DISTRIBUTION_ENABLE",
            "DISTRIBUTION_FETCH_REPORT",
            "DISTRIBUTION_SUBMIT",
            "DISTRIBUTION_SYNC",
            "DISTRIBUTION_UPDATE",
            "DROP_FOLDER_CONTENT_PROCESSOR",
            "DROP_FOLDER_WATCHER",
            "EVENT_NOTIFICATION_HANDLER",
            "SCHEDULED_TASK",
            "INDEX_TAGS",
            "TAG_RESOLVE",
            "VIRUS_SCAN",
            "IMPORT",
            "DELETE",
            "FLATTEN",
            "BULKUPLOAD",
            "DVDCREATOR",
            "DOWNLOAD",
            "OOCONVERT",
            "CONVERT_PROFILE",
            "POSTCONVERT",
            "EXTRACT_MEDIA",
            "MAIL",
            "NOTIFICATION",
            "CLEANUP",
            "SCHEDULER_HELPER",
            "BULKDOWNLOAD",
            "DB_CLEANUP",
            "PROVISION_PROVIDE",
            "CONVERT_COLLECTION",
            "STORAGE_EXPORT",
            "PROVISION_DELETE",
            "STORAGE_DELETE",
            "EMAIL_INGESTION",
            "METADATA_IMPORT",
            "METADATA_TRANSFORM",
            "FILESYNC_IMPORT",
            "CAPTURE_THUMB",
            "DELETE_FILE",
            "INDEX",
            "MOVE_CATEGORY_ENTRIES",
            "COPY",
            "CONCAT",
            "CONVERT_LIVE_SEGMENT",
            "COPY_PARTNER",
            "VALIDATE_LIVE_MEDIA_SERVERS",
            "SYNC_CATEGORY_PRIVACY_CONTEXT",
            "LIVE_REPORT_EXPORT",
            "RECALCULATE_CACHE"
          ],
          "type": "string"
        },
        "size": {
          "description": "The size of the queue",
          "type": "integer"
        },
        "typeName": {
          "description": "The friendly name of the type",
          "type": "string"
        },
        "waitTime": {
          "description": "The avarage wait time",
          "type": "integer"
        },
        "workerId": {
          "description": "The worker configured id",
          "type": "integer"
        }
      }
    },
    "KalturaBooleanField": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBooleanValue"
        }
      ],
      "description": "A boolean representation to return evaluated dynamic value\n ",
      "properties": {}
    },
    "KalturaBooleanValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A boolean representation to return an array of booleans\n ",
      "properties": {
        "value": {
          "type": "boolean"
        }
      }
    },
    "KalturaBulkDownloadJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "entryIds": {
          "description": "Comma separated list of entry ids",
          "type": "string"
        },
        "flavorParamsId": {
          "description": "Flavor params id to use for conversion",
          "type": "integer"
        },
        "puserId": {
          "description": "The id of the requesting user",
          "type": "string"
        }
      }
    },
    "KalturaBulkServiceData": {
      "abstract": true,
      "description": "This class represents object-specific data passed to the \n bulk upload job.\n ",
      "properties": {}
    },
    "KalturaBulkServiceFilterData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkServiceData"
        }
      ],
      "description": "Represents the Bulk service input for filter bulk upload\n ",
      "properties": {
        "filter": {
          "$ref": "#/definitions/KalturaFilter"
        },
        "templateObject": {
          "$ref": "#/definitions/KalturaObjectBase"
        }
      }
    },
    "KalturaBulkUpload": {
      "description": "",
      "properties": {
        "bulkFileUrl": {
          "type": "string"
        },
        "bulkUploadObjectType": {
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5"
          ],
          "enumLabels": [
            "ENTRY",
            "CATEGORY",
            "USER",
            "CATEGORY_USER",
            "CATEGORY_ENTRY"
          ],
          "type": "string"
        },
        "bulkUploadType": {
          "enum": [
            "bulkUploadCsv.CSV",
            "bulkUploadFilter.FILTER",
            "bulkUploadXml.XML",
            "dropFolderXmlBulkUpload.DROP_FOLDER_XML"
          ],
          "enumLabels": [
            "CSV",
            "FILTER",
            "XML",
            "DROP_FOLDER_XML"
          ],
          "type": "string"
        },
        "csvFileUrl": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "errorNumber": {
          "type": "integer"
        },
        "errorType": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "enumLabels": [
            "APP",
            "RUNTIME",
            "HTTP",
            "CURL",
            "KALTURA_API",
            "KALTURA_CLIENT"
          ],
          "type": "integer"
        },
        "fileName": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "logFileUrl": {
          "type": "string"
        },
        "numOfEntries": {
          "type": "integer"
        },
        "numOfObjects": {
          "type": "integer"
        },
        "results": {
          "items": {
            "$ref": "#/definitions/KalturaBulkUploadResult"
          },
          "type": "array"
        },
        "status": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "enumLabels": [
            "PENDING",
            "QUEUED",
            "PROCESSING",
            "PROCESSED",
            "MOVEFILE",
            "FINISHED",
            "FAILED",
            "ABORTED",
            "ALMOST_DONE",
            "RETRY",
            "FATAL",
            "DONT_PROCESS",
            "FINISHED_PARTIALLY"
          ],
          "type": "integer"
        },
        "uploadedBy": {
          "type": "string"
        },
        "uploadedByUserId": {
          "type": "string"
        },
        "uploadedOn": {
          "type": "integer"
        }
      }
    },
    "KalturaBulkUploadBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "bulkUploadObjectTypeEqual": {
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5"
          ],
          "enumLabels": [
            "ENTRY",
            "CATEGORY",
            "USER",
            "CATEGORY_USER",
            "CATEGORY_ENTRY"
          ],
          "type": "string"
        },
        "bulkUploadObjectTypeIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "enumLabels": [
            "PENDING",
            "QUEUED",
            "PROCESSING",
            "PROCESSED",
            "MOVEFILE",
            "FINISHED",
            "FAILED",
            "ABORTED",
            "ALMOST_DONE",
            "RETRY",
            "FATAL",
            "DONT_PROCESS",
            "FINISHED_PARTIALLY"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "uploadedOnEqual": {
          "type": "integer"
        },
        "uploadedOnGreaterThanOrEqual": {
          "type": "integer"
        },
        "uploadedOnLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaBulkUploadCategoryData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadObjectData"
        }
      ],
      "description": "This class represents object-specific data passed to the \n bulk upload job.\n ",
      "properties": {}
    },
    "KalturaBulkUploadCategoryEntryData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadObjectData"
        }
      ],
      "description": "This class represents object-specific data passed to the \n bulk upload job.\n ",
      "properties": {}
    },
    "KalturaBulkUploadCategoryUserData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadObjectData"
        }
      ],
      "description": "This class represents object-specific data passed to the \n bulk upload job.\n ",
      "properties": {}
    },
    "KalturaBulkUploadCsvJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadJobData"
        }
      ],
      "description": "Represents the Bulk upload job data for xml bulk upload\n ",
      "properties": {
        "columns": {
          "items": {
            "$ref": "#/definitions/KalturaString"
          },
          "type": "array"
        },
        "csvVersion": {
          "description": "The version of the csv file",
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "V1",
            "V2",
            "V3"
          ],
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaBulkUploadEntryData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadObjectData"
        }
      ],
      "description": "This class represents object-specific data passed to the \n bulk upload job.\n ",
      "properties": {
        "conversionProfileId": {
          "description": "Selected profile id for all bulk entries",
          "type": "integer"
        }
      }
    },
    "KalturaBulkUploadFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaBulkUploadFilterJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadJobData"
        }
      ],
      "description": "Represents the Bulk upload job data for filter bulk upload\n ",
      "properties": {
        "filter": {
          "$ref": "#/definitions/KalturaFilter"
        },
        "templateObject": {
          "$ref": "#/definitions/KalturaObjectBase"
        }
      }
    },
    "KalturaBulkUploadJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "bulkUploadObjectType": {
          "description": "Type of object for bulk upload",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5"
          ],
          "enumLabels": [
            "ENTRY",
            "CATEGORY",
            "USER",
            "CATEGORY_USER",
            "CATEGORY_ENTRY"
          ],
          "readOnly": true,
          "type": "string"
        },
        "conversionProfileId": {
          "description": "Selected profile id for all bulk entries",
          "readOnly": true,
          "type": "integer"
        },
        "emailRecipients": {
          "description": "Recipients of the email for bulk upload success/failure",
          "type": "string"
        },
        "fileName": {
          "description": "Friendly name of the file, used to be recognized later in the logs.",
          "type": "string"
        },
        "filePath": {
          "description": "The bulk upload file path",
          "readOnly": true,
          "type": "string"
        },
        "numOfEntries": {
          "description": "Number of created entries",
          "readOnly": true,
          "type": "integer"
        },
        "numOfErrorObjects": {
          "description": "Number of objects that finished on error status",
          "type": "integer"
        },
        "numOfObjects": {
          "description": "Number of created objects",
          "readOnly": true,
          "type": "integer"
        },
        "objectData": {
          "$ref": "#/definitions/KalturaBulkUploadObjectData"
        },
        "resultsFileLocalPath": {
          "description": "Created by the API",
          "readOnly": true,
          "type": "string"
        },
        "resultsFileUrl": {
          "description": "Created by the API",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "Type of bulk upload",
          "enum": [
            "bulkUploadCsv.CSV",
            "bulkUploadFilter.FILTER",
            "bulkUploadXml.XML",
            "dropFolderXmlBulkUpload.DROP_FOLDER_XML"
          ],
          "enumLabels": [
            "CSV",
            "FILTER",
            "XML",
            "DROP_FOLDER_XML"
          ],
          "readOnly": true,
          "type": "string"
        },
        "uploadedBy": {
          "description": "The screen name of the user",
          "readOnly": true,
          "type": "string"
        },
        "userId": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaBulkUploadListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaBulkUpload"
          },
          "type": "array"
        }
      }
    },
    "KalturaBulkUploadObjectData": {
      "abstract": true,
      "description": "This class represents object-specific data passed to the \n bulk upload job.\n ",
      "properties": {}
    },
    "KalturaBulkUploadPluginData": {
      "description": "",
      "properties": {
        "field": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "KalturaBulkUploadResult": {
      "description": "",
      "properties": {
        "action": {
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "enumLabels": [
            "ADD",
            "UPDATE",
            "DELETE",
            "REPLACE",
            "TRANSFORM_XSLT",
            "ADD_OR_UPDATE"
          ],
          "type": "string"
        },
        "bulkUploadJobId": {
          "description": "The id of the parent job",
          "type": "integer"
        },
        "bulkUploadResultObjectType": {
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5"
          ],
          "enumLabels": [
            "ENTRY",
            "CATEGORY",
            "USER",
            "CATEGORY_USER",
            "CATEGORY_ENTRY"
          ],
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        },
        "errorDescription": {
          "type": "string"
        },
        "errorType": {
          "type": "integer"
        },
        "id": {
          "description": "The id of the result",
          "readOnly": true,
          "type": "integer"
        },
        "lineIndex": {
          "description": "The index of the line in the CSV",
          "type": "integer"
        },
        "objectErrorDescription": {
          "type": "string"
        },
        "objectId": {
          "type": "string"
        },
        "objectStatus": {
          "type": "integer"
        },
        "partnerData": {
          "type": "string"
        },
        "partnerId": {
          "type": "integer"
        },
        "pluginsData": {
          "items": {
            "$ref": "#/definitions/KalturaBulkUploadPluginData"
          },
          "type": "array"
        },
        "rowData": {
          "description": "The data as recieved in the csv",
          "type": "string"
        },
        "status": {
          "enum": [
            "1",
            "2",
            "3"
          ],
          "enumLabels": [
            "ERROR",
            "OK",
            "IN_PROGRESS"
          ],
          "type": "string"
        }
      }
    },
    "KalturaBulkUploadResultCategory": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadResult"
        }
      ],
      "description": "",
      "properties": {
        "appearInList": {
          "type": "integer"
        },
        "contributionPolicy": {
          "type": "integer"
        },
        "defaultPermissionLevel": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "inheritanceType": {
          "type": "integer"
        },
        "moderation": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "partnerSortValue": {
          "type": "integer"
        },
        "privacy": {
          "type": "integer"
        },
        "referenceId": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "userJoinPolicy": {
          "type": "integer"
        }
      }
    },
    "KalturaBulkUploadResultCategoryEntry": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadResult"
        }
      ],
      "description": "",
      "properties": {
        "categoryId": {
          "type": "integer"
        },
        "entryId": {
          "type": "string"
        }
      }
    },
    "KalturaBulkUploadResultCategoryUser": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadResult"
        }
      ],
      "description": "",
      "properties": {
        "categoryId": {
          "type": "integer"
        },
        "categoryReferenceId": {
          "type": "string"
        },
        "permissionLevel": {
          "type": "integer"
        },
        "requiredObjectStatus": {
          "type": "integer"
        },
        "updateMethod": {
          "type": "integer"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "KalturaBulkUploadResultEntry": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadResult"
        }
      ],
      "description": "",
      "properties": {
        "accessControlProfileId": {
          "type": "integer"
        },
        "category": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "conversionProfileId": {
          "type": "integer"
        },
        "creatorId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "entitledUsersEdit": {
          "type": "string"
        },
        "entitledUsersPublish": {
          "type": "string"
        },
        "entryId": {
          "type": "string"
        },
        "entryStatus": {
          "type": "integer"
        },
        "ownerId": {
          "type": "string"
        },
        "scheduleEndDate": {
          "type": "integer"
        },
        "scheduleStartDate": {
          "type": "integer"
        },
        "sshKeyPassphrase": {
          "type": "string"
        },
        "sshPrivateKey": {
          "type": "string"
        },
        "sshPublicKey": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "thumbnailSaved": {
          "type": "boolean"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "KalturaBulkUploadResultUser": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadResult"
        }
      ],
      "description": "",
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "gender": {
          "type": "integer"
        },
        "lastName": {
          "type": "string"
        },
        "screenName": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      }
    },
    "KalturaBulkUploadUserData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadObjectData"
        }
      ],
      "description": "This class represents object-specific data passed to the \n bulk upload job.\n ",
      "properties": {}
    },
    "KalturaBulkUploadXmlJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadJobData"
        }
      ],
      "description": "Represents the Bulk upload job data for xml bulk upload\n ",
      "properties": {}
    },
    "KalturaCEError": {
      "description": "",
      "properties": {
        "browser": {
          "type": "string"
        },
        "ceAdminEmail": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "partnerId": {
          "type": "integer"
        },
        "phpVersion": {
          "type": "string"
        },
        "serverIp": {
          "type": "string"
        },
        "serverOs": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "KalturaCaptionAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAsset"
        }
      ],
      "description": "",
      "properties": {
        "captionParamsId": {
          "description": "The Caption Params used to create this Caption Asset",
          "type": "integer"
        },
        "format": {
          "description": "The caption format",
          "enum": [
            "1",
            "2",
            "3"
          ],
          "enumLabels": [
            "SRT",
            "DFXP",
            "WEBVTT"
          ],
          "type": "string"
        },
        "isDefault": {
          "description": "Is default caption asset of the entry",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "label": {
          "description": "Friendly label",
          "type": "string"
        },
        "language": {
          "description": "The language of the caption asset content",
          "enum": [
            "Abkhazian",
            "Afar",
            "Afrikaans",
            "Albanian",
            "Amharic",
            "Arabic",
            "Armenian",
            "Assamese",
            "Aymara",
            "Azerbaijani",
            "Bashkir",
            "Basque",
            "Bengali (Bangla)",
            "Bhutani",
            "Bihari",
            "Bislama",
            "Breton",
            "Bulgarian",
            "Burmese",
            "Byelorussian (Belarusian)",
            "Cambodian",
            "Catalan",
            "Chinese",
            "Corsican",
            "Croatian",
            "Czech",
            "Danish",
            "Dutch",
            "English",
            "Esperanto",
            "Estonian",
            "Faeroese",
            "Farsi",
            "Fiji",
            "Finnish",
            "French",
            "Frisian",
            "Gaelic (Manx)",
            "Gaelic (Scottish)",
            "Galician",
            "Georgian",
            "German",
            "Greek",
            "Greenlandic",
            "Guarani",
            "Gujarati",
            "Hausa",
            "Hebrew",
            "Hebrew",
            "Hindi",
            "Hungarian",
            "Icelandic",
            "Indonesian",
            "Indonesian",
            "Interlingua",
            "Interlingue",
            "Inuktitut",
            "Inupiak",
            "Irish",
            "Italian",
            "Japanese",
            "Javanese",
            "Kannada",
            "Kashmiri",
            "Kazakh",
            "Kinyarwanda (Ruanda)",
            "Kirghiz",
            "Kirundi (Rundi)",
            "Korean",
            "Kurdish",
            "Laothian",
            "Latin",
            "Latvian (Lettish)",
            "Limburgish ( Limburger)",
            "Lingala",
            "Lithuanian",
            "Macedonian",
            "Malagasy",
            "Malay",
            "Malayalam",
            "Maltese",
            "Maori",
            "Marathi",
            "Moldavian",
            "Mongolian",
            "Multilingual",
            "Nauru",
            "Nepali",
            "Norwegian",
            "Occitan",
            "Oriya",
            "Oromo (Afan, Galla)",
            "Pashto (Pushto)",
            "Polish",
            "Portuguese",
            "Punjabi",
            "Quechua",
            "Rhaeto-Romance",
            "Romanian",
            "Russian",
            "Samoan",
            "Sangro",
            "Sanskrit",
            "Serbian",
            "Serbo-Croatian",
            "Sesotho",
            "Setswana",
            "Shona",
            "Sindhi",
            "Sinhalese",
            "Siswati",
            "Slovak",
            "Slovenian",
            "Somali",
            "Spanish",
            "Sundanese",
            "Swahili (Kiswahili)",
            "Swedish",
            "Tagalog",
            "Tajik",
            "Tamil",
            "Tatar",
            "Telugu",
            "Thai",
            "Tibetan",
            "Tigrinya",
            "Tonga",
            "Tsonga",
            "Turkish",
            "Turkmen",
            "Twi",
            "Uighur",
            "Ukrainian",
            "Urdu",
            "Uzbek",
            "Vietnamese",
            "Volapuk",
            "Welsh",
            "Wolof",
            "Xhosa",
            "Yiddish",
            "Yiddish",
            "Yoruba",
            "Zulu"
          ],
          "enumLabels": [
            "AB",
            "AA",
            "AF",
            "SQ",
            "AM",
            "AR",
            "HY",
            "AS_",
            "AY",
            "AZ",
            "BA",
            "EU",
            "BN",
            "DZ",
            "BH",
            "BI",
            "BR",
            "BG",
            "MY",
            "BE",
            "KM",
            "CA",
            "ZH",
            "CO",
            "HR",
            "CS",
            "DA",
            "NL",
            "EN",
            "EO",
            "ET",
            "FO",
            "FA",
            "FJ",
            "FI",
            "FR",
            "FY",
            "GV",
            "GD",
            "GL",
            "KA",
            "DE",
            "EL",
            "KL",
            "GN",
            "GU",
            "HA",
            "IW",
            "HE",
            "HI",
            "HU",
            "IS",
            "IN",
            "ID",
            "IA",
            "IE",
            "IU",
            "IK",
            "GA",
            "IT",
            "JA",
            "JV",
            "KN",
            "KS",
            "KK",
            "RW",
            "KY",
            "RN",
            "KO",
            "KU",
            "LO",
            "LA",
            "LV",
            "LI",
            "LN",
            "LT",
            "MK",
            "MG",
            "MS",
            "ML",
            "MT",
            "MI",
            "MR",
            "MO",
            "MN",
            "MU",
            "NA",
            "NE",
            "NO",
            "OC",
            "OR_",
            "OM",
            "PS",
            "PL",
            "PT",
            "PA",
            "QU",
            "RM",
            "RO",
            "RU",
            "SM",
            "SG",
            "SA",
            "SR",
            "SH",
            "ST",
            "TN",
            "SN",
            "SD",
            "SI",
            "SS",
            "SK",
            "SL",
            "SO",
            "ES",
            "SU",
            "SW",
            "SV",
            "TL",
            "TG",
            "TA",
            "TT",
            "TE",
            "TH",
            "BO",
            "TI",
            "TO",
            "TS",
            "TR",
            "TK",
            "TW",
            "UG",
            "UK",
            "UR",
            "UZ",
            "VI",
            "VO",
            "CY",
            "WO",
            "XH",
            "JI",
            "YI",
            "YO",
            "ZU"
          ],
          "type": "string"
        },
        "languageCode": {
          "description": "The language of the caption asset content",
          "enum": [
            "aa",
            "ab",
            "af",
            "am",
            "ar",
            "as",
            "ay",
            "az",
            "ba",
            "be",
            "bg",
            "bh",
            "bi",
            "bn",
            "bo",
            "br",
            "ca",
            "co",
            "cs",
            "cy",
            "da",
            "de",
            "dz",
            "el",
            "en",
            "eo",
            "es",
            "et",
            "eu",
            "fa",
            "fi",
            "fj",
            "fo",
            "fr",
            "fy",
            "ga",
            "gd",
            "gl",
            "gn",
            "gu",
            "gv",
            "ha",
            "he",
            "hi",
            "hr",
            "hu",
            "hy",
            "ia",
            "id",
            "ie",
            "ik",
            "in",
            "is",
            "it",
            "iu",
            "iw",
            "ja",
            "ji",
            "jv",
            "ka",
            "kk",
            "kl",
            "km",
            "kn",
            "ko",
            "ks",
            "ku",
            "ky",
            "la",
            "li",
            "ln",
            "lo",
            "lt",
            "lv",
            "mg",
            "mi",
            "mk",
            "ml",
            "mn",
            "mo",
            "mr",
            "ms",
            "mt",
            "multilingual",
            "my",
            "na",
            "ne",
            "nl",
            "no",
            "oc",
            "om",
            "or",
            "pa",
            "pl",
            "ps",
            "pt",
            "qu",
            "rm",
            "rn",
            "ro",
            "ru",
            "rw",
            "sa",
            "sd",
            "sg",
            "sh",
            "si",
            "sk",
            "sl",
            "sm",
            "sn",
            "so",
            "sq",
            "sr",
            "ss",
            "st",
            "su",
            "sv",
            "sw",
            "ta",
            "te",
            "tg",
            "th",
            "ti",
            "tk",
            "tl",
            "tn",
            "to",
            "tr",
            "ts",
            "tt",
            "tw",
            "ug",
            "uk",
            "ur",
            "uz",
            "vi",
            "vo",
            "wo",
            "xh",
            "yi",
            "yo",
            "zh",
            "zu"
          ],
          "enumLabels": [
            "AA",
            "AB",
            "AF",
            "AM",
            "AR",
            "AS_",
            "AY",
            "AZ",
            "BA",
            "BE",
            "BG",
            "BH",
            "BI",
            "BN",
            "BO",
            "BR",
            "CA",
            "CO",
            "CS",
            "CY",
            "DA",
            "DE",
            "DZ",
            "EL",
            "EN",
            "EO",
            "ES",
            "ET",
            "EU",
            "FA",
            "FI",
            "FJ",
            "FO",
            "FR",
            "FY",
            "GA",
            "GD",
            "GL",
            "GN",
            "GU",
            "GV",
            "HA",
            "HE",
            "HI",
            "HR",
            "HU",
            "HY",
            "IA",
            "ID",
            "IE",
            "IK",
            "IN",
            "IS",
            "IT",
            "IU",
            "IW",
            "JA",
            "JI",
            "JV",
            "KA",
            "KK",
            "KL",
            "KM",
            "KN",
            "KO",
            "KS",
            "KU",
            "KY",
            "LA",
            "LI",
            "LN",
            "LO",
            "LT",
            "LV",
            "MG",
            "MI",
            "MK",
            "ML",
            "MN",
            "MO",
            "MR",
            "MS",
            "MT",
            "MU",
            "MY",
            "NA",
            "NE",
            "NL",
            "NO",
            "OC",
            "OM",
            "OR_",
            "PA",
            "PL",
            "PS",
            "PT",
            "QU",
            "RM",
            "RN",
            "RO",
            "RU",
            "RW",
            "SA",
            "SD",
            "SG",
            "SH",
            "SI",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SQ",
            "SR",
            "SS",
            "ST",
            "SU",
            "SV",
            "SW",
            "TA",
            "TE",
            "TG",
            "TH",
            "TI",
            "TK",
            "TL",
            "TN",
            "TO",
            "TR",
            "TS",
            "TT",
            "TW",
            "UG",
            "UK",
            "UR",
            "UZ",
            "VI",
            "VO",
            "WO",
            "XH",
            "YI",
            "YO",
            "ZH",
            "ZU"
          ],
          "readOnly": true,
          "type": "string"
        },
        "parentId": {
          "description": "The parent id of the asset",
          "type": "string"
        },
        "status": {
          "description": "The status of the asset",
          "enum": [
            -1,
            0,
            2,
            3,
            7,
            9
          ],
          "enumLabels": [
            "ERROR",
            "QUEUED",
            "READY",
            "DELETED",
            "IMPORTING",
            "EXPORTING"
          ],
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaCaptionAssetBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "description": "",
      "properties": {
        "captionParamsIdEqual": {
          "type": "integer"
        },
        "captionParamsIdIn": {
          "type": "string"
        },
        "formatEqual": {
          "enum": [
            "1",
            "2",
            "3"
          ],
          "enumLabels": [
            "SRT",
            "DFXP",
            "WEBVTT"
          ],
          "type": "string"
        },
        "formatIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            -1,
            0,
            2,
            3,
            7,
            9
          ],
          "enumLabels": [
            "ERROR",
            "QUEUED",
            "READY",
            "DELETED",
            "IMPORTING",
            "EXPORTING"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "statusNotIn": {
          "type": "string"
        }
      }
    },
    "KalturaCaptionAssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCaptionAssetBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaCaptionAssetItem": {
      "description": "",
      "properties": {
        "asset": {
          "$ref": "#/definitions/KalturaCaptionAsset"
        },
        "content": {
          "type": "string"
        },
        "endTime": {
          "type": "integer"
        },
        "entry": {
          "$ref": "#/definitions/KalturaBaseEntry"
        },
        "startTime": {
          "type": "integer"
        }
      }
    },
    "KalturaCaptionAssetItemFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCaptionAssetFilter"
        }
      ],
      "description": "",
      "properties": {
        "contentLike": {
          "type": "string"
        },
        "contentMultiLikeAnd": {
          "type": "string"
        },
        "contentMultiLikeOr": {
          "type": "string"
        },
        "endTimeGreaterThanOrEqual": {
          "type": "integer"
        },
        "endTimeLessThanOrEqual": {
          "type": "integer"
        },
        "labelEqual": {
          "type": "string"
        },
        "labelIn": {
          "type": "string"
        },
        "languageEqual": {
          "enum": [
            "Abkhazian",
            "Afar",
            "Afrikaans",
            "Albanian",
            "Amharic",
            "Arabic",
            "Armenian",
            "Assamese",
            "Aymara",
            "Azerbaijani",
            "Bashkir",
            "Basque",
            "Bengali (Bangla)",
            "Bhutani",
            "Bihari",
            "Bislama",
            "Breton",
            "Bulgarian",
            "Burmese",
            "Byelorussian (Belarusian)",
            "Cambodian",
            "Catalan",
            "Chinese",
            "Corsican",
            "Croatian",
            "Czech",
            "Danish",
            "Dutch",
            "English",
            "Esperanto",
            "Estonian",
            "Faeroese",
            "Farsi",
            "Fiji",
            "Finnish",
            "French",
            "Frisian",
            "Gaelic (Manx)",
            "Gaelic (Scottish)",
            "Galician",
            "Georgian",
            "German",
            "Greek",
            "Greenlandic",
            "Guarani",
            "Gujarati",
            "Hausa",
            "Hebrew",
            "Hebrew",
            "Hindi",
            "Hungarian",
            "Icelandic",
            "Indonesian",
            "Indonesian",
            "Interlingua",
            "Interlingue",
            "Inuktitut",
            "Inupiak",
            "Irish",
            "Italian",
            "Japanese",
            "Javanese",
            "Kannada",
            "Kashmiri",
            "Kazakh",
            "Kinyarwanda (Ruanda)",
            "Kirghiz",
            "Kirundi (Rundi)",
            "Korean",
            "Kurdish",
            "Laothian",
            "Latin",
            "Latvian (Lettish)",
            "Limburgish ( Limburger)",
            "Lingala",
            "Lithuanian",
            "Macedonian",
            "Malagasy",
            "Malay",
            "Malayalam",
            "Maltese",
            "Maori",
            "Marathi",
            "Moldavian",
            "Mongolian",
            "Multilingual",
            "Nauru",
            "Nepali",
            "Norwegian",
            "Occitan",
            "Oriya",
            "Oromo (Afan, Galla)",
            "Pashto (Pushto)",
            "Polish",
            "Portuguese",
            "Punjabi",
            "Quechua",
            "Rhaeto-Romance",
            "Romanian",
            "Russian",
            "Samoan",
            "Sangro",
            "Sanskrit",
            "Serbian",
            "Serbo-Croatian",
            "Sesotho",
            "Setswana",
            "Shona",
            "Sindhi",
            "Sinhalese",
            "Siswati",
            "Slovak",
            "Slovenian",
            "Somali",
            "Spanish",
            "Sundanese",
            "Swahili (Kiswahili)",
            "Swedish",
            "Tagalog",
            "Tajik",
            "Tamil",
            "Tatar",
            "Telugu",
            "Thai",
            "Tibetan",
            "Tigrinya",
            "Tonga",
            "Tsonga",
            "Turkish",
            "Turkmen",
            "Twi",
            "Uighur",
            "Ukrainian",
            "Urdu",
            "Uzbek",
            "Vietnamese",
            "Volapuk",
            "Welsh",
            "Wolof",
            "Xhosa",
            "Yiddish",
            "Yiddish",
            "Yoruba",
            "Zulu"
          ],
          "enumLabels": [
            "AB",
            "AA",
            "AF",
            "SQ",
            "AM",
            "AR",
            "HY",
            "AS_",
            "AY",
            "AZ",
            "BA",
            "EU",
            "BN",
            "DZ",
            "BH",
            "BI",
            "BR",
            "BG",
            "MY",
            "BE",
            "KM",
            "CA",
            "ZH",
            "CO",
            "HR",
            "CS",
            "DA",
            "NL",
            "EN",
            "EO",
            "ET",
            "FO",
            "FA",
            "FJ",
            "FI",
            "FR",
            "FY",
            "GV",
            "GD",
            "GL",
            "KA",
            "DE",
            "EL",
            "KL",
            "GN",
            "GU",
            "HA",
            "IW",
            "HE",
            "HI",
            "HU",
            "IS",
            "IN",
            "ID",
            "IA",
            "IE",
            "IU",
            "IK",
            "GA",
            "IT",
            "JA",
            "JV",
            "KN",
            "KS",
            "KK",
            "RW",
            "KY",
            "RN",
            "KO",
            "KU",
            "LO",
            "LA",
            "LV",
            "LI",
            "LN",
            "LT",
            "MK",
            "MG",
            "MS",
            "ML",
            "MT",
            "MI",
            "MR",
            "MO",
            "MN",
            "MU",
            "NA",
            "NE",
            "NO",
            "OC",
            "OR_",
            "OM",
            "PS",
            "PL",
            "PT",
            "PA",
            "QU",
            "RM",
            "RO",
            "RU",
            "SM",
            "SG",
            "SA",
            "SR",
            "SH",
            "ST",
            "TN",
            "SN",
            "SD",
            "SI",
            "SS",
            "SK",
            "SL",
            "SO",
            "ES",
            "SU",
            "SW",
            "SV",
            "TL",
            "TG",
            "TA",
            "TT",
            "TE",
            "TH",
            "BO",
            "TI",
            "TO",
            "TS",
            "TR",
            "TK",
            "TW",
            "UG",
            "UK",
            "UR",
            "UZ",
            "VI",
            "VO",
            "CY",
            "WO",
            "XH",
            "JI",
            "YI",
            "YO",
            "ZU"
          ],
          "type": "string"
        },
        "languageIn": {
          "type": "string"
        },
        "partnerDescriptionLike": {
          "type": "string"
        },
        "partnerDescriptionMultiLikeAnd": {
          "type": "string"
        },
        "partnerDescriptionMultiLikeOr": {
          "type": "string"
        },
        "startTimeGreaterThanOrEqual": {
          "type": "integer"
        },
        "startTimeLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaCaptionAssetItemListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCaptionAssetItem"
          },
          "type": "array"
        }
      }
    },
    "KalturaCaptionAssetListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCaptionAsset"
          },
          "type": "array"
        }
      }
    },
    "KalturaCaptionParams": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetParams"
        }
      ],
      "description": "",
      "properties": {
        "format": {
          "description": "The caption format",
          "enum": [
            "1",
            "2",
            "3"
          ],
          "enumLabels": [
            "SRT",
            "DFXP",
            "WEBVTT"
          ],
          "type": "string"
        },
        "isDefault": {
          "description": "Is default caption asset of the entry",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "label": {
          "description": "Friendly label",
          "type": "string"
        },
        "language": {
          "description": "The language of the caption content",
          "enum": [
            "Abkhazian",
            "Afar",
            "Afrikaans",
            "Albanian",
            "Amharic",
            "Arabic",
            "Armenian",
            "Assamese",
            "Aymara",
            "Azerbaijani",
            "Bashkir",
            "Basque",
            "Bengali (Bangla)",
            "Bhutani",
            "Bihari",
            "Bislama",
            "Breton",
            "Bulgarian",
            "Burmese",
            "Byelorussian (Belarusian)",
            "Cambodian",
            "Catalan",
            "Chinese",
            "Corsican",
            "Croatian",
            "Czech",
            "Danish",
            "Dutch",
            "English",
            "Esperanto",
            "Estonian",
            "Faeroese",
            "Farsi",
            "Fiji",
            "Finnish",
            "French",
            "Frisian",
            "Gaelic (Manx)",
            "Gaelic (Scottish)",
            "Galician",
            "Georgian",
            "German",
            "Greek",
            "Greenlandic",
            "Guarani",
            "Gujarati",
            "Hausa",
            "Hebrew",
            "Hebrew",
            "Hindi",
            "Hungarian",
            "Icelandic",
            "Indonesian",
            "Indonesian",
            "Interlingua",
            "Interlingue",
            "Inuktitut",
            "Inupiak",
            "Irish",
            "Italian",
            "Japanese",
            "Javanese",
            "Kannada",
            "Kashmiri",
            "Kazakh",
            "Kinyarwanda (Ruanda)",
            "Kirghiz",
            "Kirundi (Rundi)",
            "Korean",
            "Kurdish",
            "Laothian",
            "Latin",
            "Latvian (Lettish)",
            "Limburgish ( Limburger)",
            "Lingala",
            "Lithuanian",
            "Macedonian",
            "Malagasy",
            "Malay",
            "Malayalam",
            "Maltese",
            "Maori",
            "Marathi",
            "Moldavian",
            "Mongolian",
            "Multilingual",
            "Nauru",
            "Nepali",
            "Norwegian",
            "Occitan",
            "Oriya",
            "Oromo (Afan, Galla)",
            "Pashto (Pushto)",
            "Polish",
            "Portuguese",
            "Punjabi",
            "Quechua",
            "Rhaeto-Romance",
            "Romanian",
            "Russian",
            "Samoan",
            "Sangro",
            "Sanskrit",
            "Serbian",
            "Serbo-Croatian",
            "Sesotho",
            "Setswana",
            "Shona",
            "Sindhi",
            "Sinhalese",
            "Siswati",
            "Slovak",
            "Slovenian",
            "Somali",
            "Spanish",
            "Sundanese",
            "Swahili (Kiswahili)",
            "Swedish",
            "Tagalog",
            "Tajik",
            "Tamil",
            "Tatar",
            "Telugu",
            "Thai",
            "Tibetan",
            "Tigrinya",
            "Tonga",
            "Tsonga",
            "Turkish",
            "Turkmen",
            "Twi",
            "Uighur",
            "Ukrainian",
            "Urdu",
            "Uzbek",
            "Vietnamese",
            "Volapuk",
            "Welsh",
            "Wolof",
            "Xhosa",
            "Yiddish",
            "Yiddish",
            "Yoruba",
            "Zulu"
          ],
          "enumLabels": [
            "AB",
            "AA",
            "AF",
            "SQ",
            "AM",
            "AR",
            "HY",
            "AS_",
            "AY",
            "AZ",
            "BA",
            "EU",
            "BN",
            "DZ",
            "BH",
            "BI",
            "BR",
            "BG",
            "MY",
            "BE",
            "KM",
            "CA",
            "ZH",
            "CO",
            "HR",
            "CS",
            "DA",
            "NL",
            "EN",
            "EO",
            "ET",
            "FO",
            "FA",
            "FJ",
            "FI",
            "FR",
            "FY",
            "GV",
            "GD",
            "GL",
            "KA",
            "DE",
            "EL",
            "KL",
            "GN",
            "GU",
            "HA",
            "IW",
            "HE",
            "HI",
            "HU",
            "IS",
            "IN",
            "ID",
            "IA",
            "IE",
            "IU",
            "IK",
            "GA",
            "IT",
            "JA",
            "JV",
            "KN",
            "KS",
            "KK",
            "RW",
            "KY",
            "RN",
            "KO",
            "KU",
            "LO",
            "LA",
            "LV",
            "LI",
            "LN",
            "LT",
            "MK",
            "MG",
            "MS",
            "ML",
            "MT",
            "MI",
            "MR",
            "MO",
            "MN",
            "MU",
            "NA",
            "NE",
            "NO",
            "OC",
            "OR_",
            "OM",
            "PS",
            "PL",
            "PT",
            "PA",
            "QU",
            "RM",
            "RO",
            "RU",
            "SM",
            "SG",
            "SA",
            "SR",
            "SH",
            "ST",
            "TN",
            "SN",
            "SD",
            "SI",
            "SS",
            "SK",
            "SL",
            "SO",
            "ES",
            "SU",
            "SW",
            "SV",
            "TL",
            "TG",
            "TA",
            "TT",
            "TE",
            "TH",
            "BO",
            "TI",
            "TO",
            "TS",
            "TR",
            "TK",
            "TW",
            "UG",
            "UK",
            "UR",
            "UZ",
            "VI",
            "VO",
            "CY",
            "WO",
            "XH",
            "JI",
            "YI",
            "YO",
            "ZU"
          ],
          "type": "string"
        },
        "sourceParamsId": {
          "description": "Id of the caption params or the flavor params to be used as source for the caption creation",
          "type": "integer"
        }
      }
    },
    "KalturaCaptionParamsBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetParamsFilter"
        }
      ],
      "description": "",
      "properties": {
        "formatEqual": {
          "enum": [
            "1",
            "2",
            "3"
          ],
          "enumLabels": [
            "SRT",
            "DFXP",
            "WEBVTT"
          ],
          "type": "string"
        },
        "formatIn": {
          "type": "string"
        }
      }
    },
    "KalturaCaptionParamsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCaptionParamsBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaCaptionParamsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCaptionParams"
          },
          "type": "array"
        }
      }
    },
    "KalturaCaptureThumbJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "actualSrcFileSyncLocalPath": {
          "description": "The translated path as used by the scheduler",
          "type": "string"
        },
        "srcAssetId": {
          "type": "string"
        },
        "srcAssetType": {
          "enum": [
            "attachment.Attachment",
            "caption.Caption",
            "document.Document",
            "document.Image",
            "document.PDF",
            "document.SWF",
            "thumbCuePoint.timedThumb",
            "1",
            "2",
            "3"
          ],
          "enumLabels": [
            "ATTACHMENT",
            "CAPTION",
            "DOCUMENT",
            "IMAGE",
            "PDF",
            "SWF",
            "TIMED_THUMB_ASSET",
            "FLAVOR",
            "THUMBNAIL",
            "LIVE"
          ],
          "type": "string"
        },
        "srcFileSyncLocalPath": {
          "type": "string"
        },
        "srcFileSyncRemoteUrl": {
          "type": "string"
        },
        "thumbAssetId": {
          "type": "string"
        },
        "thumbParamsOutputId": {
          "type": "integer"
        },
        "thumbPath": {
          "type": "string"
        }
      }
    },
    "KalturaCategory": {
      "description": "",
      "properties": {
        "appearInList": {
          "description": "If category will be returned for list action.",
          "enum": [
            1,
            3
          ],
          "enumLabels": [
            "PARTNER_ONLY",
            "CATEGORY_MEMBERS_ONLY"
          ],
          "type": "integer"
        },
        "contributionPolicy": {
          "description": "who can assign entries to this category",
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "ALL",
            "MEMBERS_WITH_CONTRIBUTION_PERMISSION"
          ],
          "type": "integer"
        },
        "createdAt": {
          "description": "Creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "defaultOrderBy": {
          "description": "Enable client side applications to define how to sort the category child categories",
          "enum": [
            "+createdAt",
            "+depth",
            "+directEntriesCount",
            "+directSubCategoriesCount",
            "+entriesCount",
            "+fullName",
            "+membersCount",
            "+name",
            "+partnerSortValue",
            "+updatedAt",
            "-createdAt",
            "-depth",
            "-directEntriesCount",
            "-directSubCategoriesCount",
            "-entriesCount",
            "-fullName",
            "-membersCount",
            "-name",
            "-partnerSortValue",
            "-updatedAt"
          ],
          "enumLabels": [
            "CREATED_AT_ASC",
            "DEPTH_ASC",
            "DIRECT_ENTRIES_COUNT_ASC",
            "DIRECT_SUB_CATEGORIES_COUNT_ASC",
            "ENTRIES_COUNT_ASC",
            "FULL_NAME_ASC",
            "MEMBERS_COUNT_ASC",
            "NAME_ASC",
            "PARTNER_SORT_VALUE_ASC",
            "UPDATED_AT_ASC",
            "CREATED_AT_DESC",
            "DEPTH_DESC",
            "DIRECT_ENTRIES_COUNT_DESC",
            "DIRECT_SUB_CATEGORIES_COUNT_DESC",
            "ENTRIES_COUNT_DESC",
            "FULL_NAME_DESC",
            "MEMBERS_COUNT_DESC",
            "NAME_DESC",
            "PARTNER_SORT_VALUE_DESC",
            "UPDATED_AT_DESC"
          ],
          "type": "string"
        },
        "defaultPermissionLevel": {
          "description": "Default permissionLevel for new users",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "MANAGER",
            "MODERATOR",
            "CONTRIBUTOR",
            "MEMBER",
            "NONE"
          ],
          "type": "integer"
        },
        "depth": {
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "description": "Category description",
          "type": "string"
        },
        "directEntriesCount": {
          "description": "Number of entries that belong to this category directly",
          "readOnly": true,
          "type": "integer"
        },
        "directSubCategoriesCount": {
          "description": "Number of direct children categories",
          "readOnly": true,
          "type": "integer"
        },
        "entriesCount": {
          "description": "Number of entries in this Category (including child categories)",
          "readOnly": true,
          "type": "integer"
        },
        "fullIds": {
          "description": "The full ids of the Category",
          "readOnly": true,
          "type": "string"
        },
        "fullName": {
          "description": "The full name of the Category",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the Category",
          "readOnly": true,
          "type": "integer"
        },
        "inheritanceType": {
          "description": "If Category members are inherited from parent category or set manualy.",
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "INHERIT",
            "MANUAL"
          ],
          "type": "integer"
        },
        "inheritedParentId": {
          "description": "The category id that this category inherit its members and members permission (for contribution and join)",
          "readOnly": true,
          "type": "integer"
        },
        "membersCount": {
          "description": "Number of active members for this category",
          "readOnly": true,
          "type": "integer"
        },
        "moderation": {
          "description": "Moderation to add entries to this category by users that are not of permission level Manager or Moderator.",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "name": {
          "description": "The name of the Category. \n\t The following characters are not allowed: '<', '>', ','",
          "type": "string"
        },
        "owner": {
          "description": "Category Owner (User id)",
          "type": "string"
        },
        "parentId": {
          "type": "integer"
        },
        "partnerData": {
          "description": "Can be used to store various partner related data as a string",
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "partnerSortValue": {
          "description": "Can be used to store various partner related data as a numeric value",
          "type": "integer"
        },
        "pendingEntriesCount": {
          "description": "Nunber of pending moderation entries",
          "readOnly": true,
          "type": "integer"
        },
        "pendingMembersCount": {
          "description": "Number of pending members for this category",
          "readOnly": true,
          "type": "integer"
        },
        "privacy": {
          "description": "defines the privacy of the entries that assigned to this category",
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "ALL",
            "AUTHENTICATED_USERS",
            "MEMBERS_ONLY"
          ],
          "type": "integer"
        },
        "privacyContext": {
          "description": "Set privacy context for search entries that assiged to private and public categories. the entries will be private if the search context is set with those categories.",
          "type": "string"
        },
        "privacyContexts": {
          "description": "comma separated parents that defines a privacyContext for search",
          "readOnly": true,
          "type": "string"
        },
        "referenceId": {
          "description": "Category external id, controlled and managed by the partner.",
          "type": "string"
        },
        "status": {
          "description": "Status",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "UPDATING",
            "ACTIVE",
            "DELETED",
            "PURGED"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "tags": {
          "description": "Category tags",
          "type": "string"
        },
        "updatedAt": {
          "description": "Update date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "userJoinPolicy": {
          "description": "Who can ask to join this category",
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "AUTO_JOIN",
            "REQUEST_TO_JOIN",
            "NOT_ALLOWED"
          ],
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaCategoryBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "appearInListEqual": {
          "enum": [
            1,
            3
          ],
          "enumLabels": [
            "PARTNER_ONLY",
            "CATEGORY_MEMBERS_ONLY"
          ],
          "type": "integer"
        },
        "contributionPolicyEqual": {
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "ALL",
            "MEMBERS_WITH_CONTRIBUTION_PERMISSION"
          ],
          "type": "integer"
        },
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "depthEqual": {
          "type": "integer"
        },
        "fullIdsEqual": {
          "type": "string"
        },
        "fullIdsMatchOr": {
          "type": "string"
        },
        "fullIdsStartsWith": {
          "type": "string"
        },
        "fullNameEqual": {
          "type": "string"
        },
        "fullNameIn": {
          "type": "string"
        },
        "fullNameStartsWith": {
          "type": "string"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "inheritanceTypeEqual": {
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "INHERIT",
            "MANUAL"
          ],
          "type": "integer"
        },
        "inheritanceTypeIn": {
          "type": "string"
        },
        "inheritedParentIdEqual": {
          "type": "integer"
        },
        "inheritedParentIdIn": {
          "type": "string"
        },
        "membersCountGreaterThanOrEqual": {
          "type": "integer"
        },
        "membersCountLessThanOrEqual": {
          "type": "integer"
        },
        "parentIdEqual": {
          "type": "integer"
        },
        "parentIdIn": {
          "type": "string"
        },
        "partnerSortValueGreaterThanOrEqual": {
          "type": "integer"
        },
        "partnerSortValueLessThanOrEqual": {
          "type": "integer"
        },
        "pendingMembersCountGreaterThanOrEqual": {
          "type": "integer"
        },
        "pendingMembersCountLessThanOrEqual": {
          "type": "integer"
        },
        "privacyContextEqual": {
          "type": "string"
        },
        "privacyEqual": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "ALL",
            "AUTHENTICATED_USERS",
            "MEMBERS_ONLY"
          ],
          "type": "integer"
        },
        "privacyIn": {
          "type": "string"
        },
        "referenceIdEmpty": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "referenceIdEqual": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "UPDATING",
            "ACTIVE",
            "DELETED",
            "PURGED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "tagsLike": {
          "type": "string"
        },
        "tagsMultiLikeAnd": {
          "type": "string"
        },
        "tagsMultiLikeOr": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaCategoryEntry": {
      "description": "",
      "properties": {
        "categoryFullIds": {
          "description": "The full ids of the Category",
          "readOnly": true,
          "type": "string"
        },
        "categoryId": {
          "type": "integer"
        },
        "createdAt": {
          "description": "Creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "entryId": {
          "description": "entry id",
          "type": "string"
        },
        "status": {
          "description": "CategroyEntry status",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "PENDING",
            "ACTIVE",
            "DELETED",
            "REJECTED"
          ],
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaCategoryEntryAdvancedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSearchItem"
        }
      ],
      "description": "",
      "properties": {
        "categoriesMatchOr": {
          "type": "string"
        },
        "categoryEntryStatusIn": {
          "type": "string"
        },
        "categoryIdEqual": {
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "+createdAt",
            "-createdAt"
          ],
          "enumLabels": [
            "CREATED_AT_ASC",
            "CREATED_AT_DESC"
          ],
          "type": "string"
        }
      }
    },
    "KalturaCategoryEntryBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "categoryFullIdsStartsWith": {
          "type": "string"
        },
        "categoryIdEqual": {
          "type": "integer"
        },
        "categoryIdIn": {
          "type": "string"
        },
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "entryIdEqual": {
          "type": "string"
        },
        "entryIdIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "PENDING",
            "ACTIVE",
            "DELETED",
            "REJECTED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        }
      }
    },
    "KalturaCategoryEntryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCategoryEntryBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaCategoryEntryListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCategoryEntry"
          },
          "type": "array"
        }
      }
    },
    "KalturaCategoryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCategoryBaseFilter"
        }
      ],
      "description": "",
      "properties": {
        "ancestorIdIn": {
          "description": "not includes the category itself (only sub categories)",
          "type": "string"
        },
        "freeText": {
          "type": "string"
        },
        "fullNameStartsWithIn": {
          "type": "string"
        },
        "idOrInheritedParentIdIn": {
          "type": "string"
        },
        "managerEqual": {
          "type": "string"
        },
        "memberEqual": {
          "type": "string"
        },
        "membersIn": {
          "type": "string"
        },
        "nameOrReferenceIdStartsWith": {
          "type": "string"
        }
      }
    },
    "KalturaCategoryIdentifier": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaObjectIdentifier"
        }
      ],
      "description": "",
      "properties": {
        "identifier": {
          "description": "Identifier of the object",
          "enum": [
            "fullName",
            "id",
            "referenceId"
          ],
          "enumLabels": [
            "FULL_NAME",
            "ID",
            "REFERENCE_ID"
          ],
          "type": "string"
        }
      }
    },
    "KalturaCategoryListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCategory"
          },
          "type": "array"
        }
      }
    },
    "KalturaCategoryUser": {
      "description": "",
      "properties": {
        "categoryFullIds": {
          "description": "The full ids of the Category",
          "readOnly": true,
          "type": "string"
        },
        "categoryId": {
          "type": "integer"
        },
        "createdAt": {
          "description": "CategoryUser creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "partnerId": {
          "description": "Partner id",
          "readOnly": true,
          "type": "integer"
        },
        "permissionLevel": {
          "description": "Permission level",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "MANAGER",
            "MODERATOR",
            "CONTRIBUTOR",
            "MEMBER",
            "NONE"
          ],
          "type": "integer"
        },
        "permissionNames": {
          "description": "Set of category-related permissions for the current category user.",
          "type": "string"
        },
        "status": {
          "description": "Status",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "ACTIVE",
            "PENDING",
            "NOT_ACTIVE",
            "DELETED"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "updateMethod": {
          "description": "Update method can be either manual or automatic to distinguish between manual operations (for example in KMC) on automatic - using bulk upload",
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "MANUAL",
            "AUTOMATIC"
          ],
          "type": "integer"
        },
        "updatedAt": {
          "description": "CategoryUser update date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "userId": {
          "description": "User id",
          "type": "string"
        }
      }
    },
    "KalturaCategoryUserAdvancedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSearchItem"
        }
      ],
      "description": "",
      "properties": {
        "memberIdEq": {
          "type": "string"
        },
        "memberIdIn": {
          "type": "string"
        },
        "memberPermissionsMatchAnd": {
          "type": "string"
        },
        "memberPermissionsMatchOr": {
          "type": "string"
        }
      }
    },
    "KalturaCategoryUserBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "categoryFullIdsEqual": {
          "type": "string"
        },
        "categoryFullIdsStartsWith": {
          "type": "string"
        },
        "categoryIdEqual": {
          "type": "integer"
        },
        "categoryIdIn": {
          "type": "string"
        },
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "permissionLevelEqual": {
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "MANAGER",
            "MODERATOR",
            "CONTRIBUTOR",
            "MEMBER",
            "NONE"
          ],
          "type": "integer"
        },
        "permissionLevelIn": {
          "type": "string"
        },
        "permissionNamesMatchAnd": {
          "type": "string"
        },
        "permissionNamesMatchOr": {
          "type": "string"
        },
        "permissionNamesNotContains": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "ACTIVE",
            "PENDING",
            "NOT_ACTIVE",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "updateMethodEqual": {
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "MANUAL",
            "AUTOMATIC"
          ],
          "type": "integer"
        },
        "updateMethodIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        },
        "userIdEqual": {
          "type": "string"
        },
        "userIdIn": {
          "type": "string"
        }
      }
    },
    "KalturaCategoryUserFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCategoryUserBaseFilter"
        }
      ],
      "description": "",
      "properties": {
        "categoryDirectMembers": {
          "description": "Return the list of categoryUser that are not inherited from parent category - only the direct categoryUsers.",
          "type": "boolean"
        },
        "freeText": {
          "description": "Free text search on user id or screen name",
          "type": "string"
        },
        "relatedGroupsByUserId": {
          "description": "Return a list of categoryUser that related to the userId in this field by groups",
          "type": "string"
        }
      }
    },
    "KalturaCategoryUserListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCategoryUser"
          },
          "type": "array"
        }
      }
    },
    "KalturaCategoryUserProviderFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "permissionNamesMatchAnd": {
          "type": "string"
        },
        "permissionNamesMatchOr": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "ACTIVE",
            "PENDING",
            "NOT_ACTIVE",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "updateMethodEqual": {
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "MANUAL",
            "AUTOMATIC"
          ],
          "type": "integer"
        },
        "updateMethodIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        },
        "userIdEqual": {
          "type": "string"
        },
        "userIdIn": {
          "type": "string"
        }
      }
    },
    "KalturaClientConfiguration": {
      "description": "Define client optional configurations\n /",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "clientTag": {
          "type": "string"
        }
      }
    },
    "KalturaClientNotification": {
      "description": "Client notification object to hold the notification url and the data when sending client side notifications\n ",
      "properties": {
        "data": {
          "description": "The serialized notification data to send",
          "type": "string"
        },
        "url": {
          "description": "The URL where the notification should be sent to",
          "type": "string"
        }
      }
    },
    "KalturaClipAttributes": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOperationAttributes"
        }
      ],
      "description": "Clip operation attributes\n ",
      "properties": {
        "duration": {
          "description": "Duration in milliseconds",
          "type": "integer"
        },
        "offset": {
          "description": "Offset in milliseconds",
          "type": "integer"
        }
      }
    },
    "KalturaCodeCuePoint": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCuePoint"
        }
      ],
      "description": "",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "duration": {
          "description": "Duration in milliseconds",
          "readOnly": true,
          "type": "integer"
        },
        "endTime": {
          "type": "integer"
        }
      }
    },
    "KalturaCodeCuePointBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCuePointFilter"
        }
      ],
      "description": "",
      "properties": {
        "codeEqual": {
          "type": "string"
        },
        "codeIn": {
          "type": "string"
        },
        "codeLike": {
          "type": "string"
        },
        "codeMultiLikeAnd": {
          "type": "string"
        },
        "codeMultiLikeOr": {
          "type": "string"
        },
        "descriptionLike": {
          "type": "string"
        },
        "descriptionMultiLikeAnd": {
          "type": "string"
        },
        "descriptionMultiLikeOr": {
          "type": "string"
        },
        "durationGreaterThanOrEqual": {
          "type": "integer"
        },
        "durationLessThanOrEqual": {
          "type": "integer"
        },
        "endTimeGreaterThanOrEqual": {
          "type": "integer"
        },
        "endTimeLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaCodeCuePointFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCodeCuePointBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaCompareCondition": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "",
      "properties": {
        "comparison": {
          "description": "Comparing operator",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5"
          ],
          "enumLabels": [
            "EQUAL",
            "GREATER_THAN",
            "GREATER_THAN_OR_EQUAL",
            "LESS_THAN",
            "LESS_THAN_OR_EQUAL"
          ],
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/KalturaIntegerValue"
        }
      }
    },
    "KalturaCompareMetadataCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCompareCondition"
        }
      ],
      "description": "",
      "properties": {
        "profileId": {
          "description": "Metadata profile id",
          "type": "integer"
        },
        "profileSystemName": {
          "description": "Metadata profile system name",
          "type": "string"
        },
        "xPath": {
          "description": "May contain the full xpath to the field in three formats\n\t 1. Slashed xPath, e.g. /metadata/myElementName\n\t 2. Using local-name function, e.g. /[local-name()='metadata']/[local-name()='myElementName']\n\t 3. Using only the field name, e.g. myElementName, it will be searched as //myElementName",
          "type": "string"
        }
      }
    },
    "KalturaConcatAttributes": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOperationAttributes"
        }
      ],
      "description": "Concat operation attributes\n ",
      "properties": {
        "resource": {
          "$ref": "#/definitions/KalturaDataCenterContentResource"
        }
      }
    },
    "KalturaConcatJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "destFilePath": {
          "description": "Output file",
          "type": "string"
        },
        "duration": {
          "description": "Clipping duration in seconds",
          "type": "number"
        },
        "flavorAssetId": {
          "description": "Flavor asset to be ingested with the output",
          "type": "string"
        },
        "offset": {
          "description": "Clipping offset in seconds",
          "type": "number"
        },
        "srcFiles": {
          "items": {
            "$ref": "#/definitions/KalturaString"
          },
          "type": "array"
        }
      }
    },
    "KalturaCondition": {
      "abstract": true,
      "description": "",
      "properties": {
        "description": {
          "type": "string"
        },
        "not": {
          "type": "boolean"
        },
        "type": {
          "description": "The type of the access control condition",
          "enum": [
            "eventNotification.BooleanField",
            "eventNotification.ObjectChanged",
            "metadata.FieldChanged",
            "metadata.FieldCompare",
            "metadata.FieldMatch",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13"
          ],
          "enumLabels": [
            "EVENT_NOTIFICATION_FIELD",
            "EVENT_NOTIFICATION_OBJECT_CHANGED",
            "METADATA_FIELD_CHANGED",
            "METADATA_FIELD_COMPARE",
            "METADATA_FIELD_MATCH",
            "AUTHENTICATED",
            "COUNTRY",
            "IP_ADDRESS",
            "SITE",
            "USER_AGENT",
            "FIELD_MATCH",
            "FIELD_COMPARE",
            "ASSET_PROPERTIES_COMPARE",
            "USER_ROLE",
            "GEO_DISTANCE",
            "OR_OPERATOR",
            "HASH",
            "DELIVERY_PROFILE"
          ],
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaConfigurableDistributionJobProviderData": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionJobProviderData"
        }
      ],
      "description": "",
      "properties": {
        "fieldValues": {
          "type": "string"
        }
      }
    },
    "KalturaConfigurableDistributionProfile": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionProfile"
        }
      ],
      "description": "",
      "properties": {
        "fieldConfigArray": {
          "items": {
            "$ref": "#/definitions/KalturaDistributionFieldConfig"
          },
          "type": "array"
        },
        "itemXpathsToExtend": {
          "items": {
            "$ref": "#/definitions/KalturaExtendingItemMrssParameter"
          },
          "type": "array"
        }
      }
    },
    "KalturaConfigurableDistributionProfileBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionProfileFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaConfigurableDistributionProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaConfigurableDistributionProfileBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaContentDistributionSearchItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSearchItem"
        }
      ],
      "description": "",
      "properties": {
        "distributionProfileId": {
          "type": "integer"
        },
        "distributionSunStatus": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "BEFORE_SUNRISE",
            "AFTER_SUNRISE",
            "AFTER_SUNSET"
          ],
          "type": "integer"
        },
        "entryDistributionFlag": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "enumLabels": [
            "NONE",
            "SUBMIT_REQUIRED",
            "DELETE_REQUIRED",
            "UPDATE_REQUIRED",
            "ENABLE_REQUIRED",
            "DISABLE_REQUIRED"
          ],
          "type": "integer"
        },
        "entryDistributionStatus": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "enumLabels": [
            "PENDING",
            "QUEUED",
            "READY",
            "DELETED",
            "SUBMITTING",
            "UPDATING",
            "DELETING",
            "ERROR_SUBMITTING",
            "ERROR_UPDATING",
            "ERROR_DELETING",
            "REMOVED",
            "IMPORT_SUBMITTING",
            "IMPORT_UPDATING"
          ],
          "type": "integer"
        },
        "entryDistributionValidationErrors": {
          "description": "Comma seperated validation error types",
          "type": "string"
        },
        "hasEntryDistributionValidationErrors": {
          "type": "boolean"
        },
        "noDistributionProfiles": {
          "type": "boolean"
        }
      }
    },
    "KalturaContentResource": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaResource"
        }
      ],
      "description": "Is a unified way to add content to Kaltura whether it's an uploaded file, webcam recording, imported URL or existing file sync.\n ",
      "properties": {}
    },
    "KalturaContext": {
      "abstract": true,
      "description": "",
      "properties": {}
    },
    "KalturaContextDataResult": {
      "description": "",
      "properties": {
        "actions": {
          "items": {
            "$ref": "#/definitions/KalturaRuleAction"
          },
          "type": "array"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/KalturaString"
          },
          "type": "array"
        }
      }
    },
    "KalturaContextTypeHolder": {
      "description": "",
      "properties": {
        "type": {
          "description": "The type of the condition context",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "enumLabels": [
            "PLAY",
            "DOWNLOAD",
            "THUMBNAIL",
            "METADATA",
            "EXPORT",
            "SERVE"
          ],
          "type": "string"
        }
      }
    },
    "KalturaControlPanelCommand": {
      "description": "",
      "properties": {
        "batchIndex": {
          "description": "The index of the batch process that the command refers to",
          "type": "integer"
        },
        "cause": {
          "description": "The reason for the command",
          "type": "string"
        },
        "createdAt": {
          "description": "Creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "createdBy": {
          "description": "Creator name",
          "type": "string"
        },
        "createdById": {
          "description": "Creator id",
          "type": "integer"
        },
        "description": {
          "description": "Command description",
          "type": "string"
        },
        "errorDescription": {
          "description": "Error description",
          "type": "string"
        },
        "id": {
          "description": "The id of the Category",
          "readOnly": true,
          "type": "integer"
        },
        "schedulerId": {
          "description": "The id of the scheduler that the command refers to",
          "type": "integer"
        },
        "status": {
          "description": "The command status",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "PENDING",
            "HANDLED",
            "DONE",
            "FAILED"
          ],
          "type": "integer"
        },
        "targetType": {
          "description": "The command target type - data center / scheduler / job / job type",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "enumLabels": [
            "DATA_CENTER",
            "SCHEDULER",
            "JOB_TYPE",
            "JOB",
            "BATCH"
          ],
          "type": "integer"
        },
        "type": {
          "description": "The command type - stop / start / config",
          "enum": [
            4
          ],
          "enumLabels": [
            "KILL"
          ],
          "type": "integer"
        },
        "updatedAt": {
          "description": "Update date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "updatedBy": {
          "description": "Updater name",
          "type": "string"
        },
        "workerConfiguredId": {
          "description": "The id of the scheduler worker as configured in the ini file",
          "type": "integer"
        },
        "workerId": {
          "description": "The id of the scheduler worker that the command refers to",
          "type": "integer"
        },
        "workerName": {
          "description": "The name of the scheduler worker that the command refers to",
          "type": "integer"
        }
      }
    },
    "KalturaControlPanelCommandBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "createdByIdEqual": {
          "type": "integer"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "PENDING",
            "HANDLED",
            "DONE",
            "FAILED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "targetTypeEqual": {
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "enumLabels": [
            "DATA_CENTER",
            "SCHEDULER",
            "JOB_TYPE",
            "JOB",
            "BATCH"
          ],
          "type": "integer"
        },
        "targetTypeIn": {
          "type": "string"
        },
        "typeEqual": {
          "enum": [
            4
          ],
          "enumLabels": [
            "KILL"
          ],
          "type": "integer"
        },
        "typeIn": {
          "type": "string"
        }
      }
    },
    "KalturaControlPanelCommandFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaControlPanelCommandBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaControlPanelCommandListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaControlPanelCommand"
          },
          "type": "array"
        }
      }
    },
    "KalturaConvartableJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "actualSrcFileSyncLocalPath": {
          "description": "The translated path as used by the scheduler",
          "type": "string"
        },
        "currentOperationIndex": {
          "type": "integer"
        },
        "currentOperationSet": {
          "type": "integer"
        },
        "engineVersion": {
          "type": "integer"
        },
        "flavorParamsOutput": {
          "$ref": "#/definitions/KalturaFlavorParamsOutput"
        },
        "flavorParamsOutputId": {
          "type": "integer"
        },
        "mediaInfoId": {
          "type": "integer"
        },
        "pluginData": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        },
        "srcFileSyncLocalPath": {
          "type": "string"
        },
        "srcFileSyncRemoteUrl": {
          "type": "string"
        },
        "srcFileSyncs": {
          "items": {
            "$ref": "#/definitions/KalturaSourceFileSyncDescriptor"
          },
          "type": "array"
        }
      }
    },
    "KalturaConversionAttribute": {
      "description": "",
      "properties": {
        "flavorParamsId": {
          "description": "The id of the flavor params, set to null for source flavor",
          "type": "integer"
        },
        "name": {
          "description": "Attribute name",
          "type": "string"
        },
        "value": {
          "description": "Attribute value",
          "type": "string"
        }
      }
    },
    "KalturaConversionProfile": {
      "description": "",
      "properties": {
        "clipDuration": {
          "description": "Clipping duration (in miliseconds)",
          "type": "integer"
        },
        "clipStart": {
          "description": "Clipping start position (in miliseconds)",
          "type": "integer"
        },
        "createdAt": {
          "description": "Creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "cropDimensions": {
          "$ref": "#/definitions/KalturaCropDimensions"
        },
        "defaultEntryId": {
          "description": "ID of the default entry to be used for template data",
          "type": "string"
        },
        "description": {
          "description": "The description of the Conversion Profile",
          "type": "string"
        },
        "flavorParamsIds": {
          "description": "List of included flavor ids (comma separated)",
          "type": "string"
        },
        "id": {
          "description": "The id of the Conversion Profile",
          "readOnly": true,
          "type": "integer"
        },
        "isDefault": {
          "description": "Indicates that this conversion profile is system default",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "isPartnerDefault": {
          "description": "Indicates that this conversion profile is partner default",
          "readOnly": true,
          "type": "boolean"
        },
        "mediaParserType": {
          "description": "Media parser type to be used for extract media",
          "enum": [
            "0",
            "1"
          ],
          "enumLabels": [
            "MEDIAINFO",
            "FFMPEG"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Conversion Profile",
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "enum": [
            "1",
            "2",
            "3"
          ],
          "enumLabels": [
            "DISABLED",
            "ENABLED",
            "DELETED"
          ],
          "type": "string"
        },
        "storageProfileId": {
          "description": "ID of default storage profile to be used for linked net-storage file syncs",
          "type": "integer"
        },
        "systemName": {
          "description": "System name of the Conversion Profile",
          "type": "string"
        },
        "tags": {
          "description": "Comma separated tags",
          "type": "string"
        },
        "type": {
          "enum": [
            "1",
            "2"
          ],
          "enumLabels": [
            "MEDIA",
            "LIVE_STREAM"
          ],
          "type": "string"
        },
        "xslTransformation": {
          "description": "XSL to transform ingestion MRSS XML",
          "type": "string"
        }
      }
    },
    "KalturaConversionProfileAssetParams": {
      "description": "",
      "properties": {
        "assetParamsId": {
          "description": "The id of the asset params",
          "readOnly": true,
          "type": "integer"
        },
        "conversionProfileId": {
          "description": "The id of the conversion profile",
          "readOnly": true,
          "type": "integer"
        },
        "deletePolicy": {
          "description": "Specifies how to treat the flavor after conversion is finished",
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "KEEP",
            "DELETE"
          ],
          "type": "integer"
        },
        "forceNoneComplied": {
          "description": "Starts conversion even if the decision layer reduced the configuration to comply with the source",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "origin": {
          "description": "The ingestion origin of the asset params",
          "enum": [
            0,
            1,
            2
          ],
          "enumLabels": [
            "CONVERT",
            "INGEST",
            "CONVERT_WHEN_MISSING"
          ],
          "type": "integer"
        },
        "readyBehavior": {
          "description": "The ingestion origin of the asset params",
          "enum": [
            0,
            0,
            1,
            2
          ],
          "enumLabels": [
            "NO_IMPACT",
            "INHERIT_FLAVOR_PARAMS",
            "REQUIRED",
            "OPTIONAL"
          ],
          "type": "integer"
        },
        "systemName": {
          "description": "Asset params system name",
          "type": "string"
        }
      }
    },
    "KalturaConversionProfileAssetParamsBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "assetParamsIdEqual": {
          "type": "integer"
        },
        "assetParamsIdIn": {
          "type": "string"
        },
        "conversionProfileIdEqual": {
          "type": "integer"
        },
        "conversionProfileIdIn": {
          "type": "string"
        },
        "originEqual": {
          "enum": [
            0,
            1,
            2
          ],
          "enumLabels": [
            "CONVERT",
            "INGEST",
            "CONVERT_WHEN_MISSING"
          ],
          "type": "integer"
        },
        "originIn": {
          "type": "string"
        },
        "readyBehaviorEqual": {
          "enum": [
            0,
            0,
            1,
            2
          ],
          "enumLabels": [
            "NO_IMPACT",
            "INHERIT_FLAVOR_PARAMS",
            "REQUIRED",
            "OPTIONAL"
          ],
          "type": "integer"
        },
        "readyBehaviorIn": {
          "type": "string"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        }
      }
    },
    "KalturaConversionProfileAssetParamsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaConversionProfileAssetParamsBaseFilter"
        }
      ],
      "description": "",
      "properties": {
        "assetParamsIdFilter": {
          "$ref": "#/definitions/KalturaAssetParamsFilter"
        },
        "conversionProfileIdFilter": {
          "$ref": "#/definitions/KalturaConversionProfileFilter"
        }
      }
    },
    "KalturaConversionProfileAssetParamsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaConversionProfileAssetParams"
          },
          "type": "array"
        }
      }
    },
    "KalturaConversionProfileBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "defaultEntryIdEqual": {
          "type": "string"
        },
        "defaultEntryIdIn": {
          "type": "string"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "nameEqual": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            "1",
            "2",
            "3"
          ],
          "enumLabels": [
            "DISABLED",
            "ENABLED",
            "DELETED"
          ],
          "type": "string"
        },
        "statusIn": {
          "type": "string"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        },
        "tagsMultiLikeAnd": {
          "type": "string"
        },
        "tagsMultiLikeOr": {
          "type": "string"
        },
        "typeEqual": {
          "enum": [
            "1",
            "2"
          ],
          "enumLabels": [
            "MEDIA",
            "LIVE_STREAM"
          ],
          "type": "string"
        },
        "typeIn": {
          "type": "string"
        }
      }
    },
    "KalturaConversionProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaConversionProfileBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaConversionProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaConversionProfile"
          },
          "type": "array"
        }
      }
    },
    "KalturaConvertCollectionFlavorData": {
      "description": "",
      "properties": {
        "audioBitrate": {
          "type": "integer"
        },
        "destFileSyncLocalPath": {
          "type": "string"
        },
        "destFileSyncRemoteUrl": {
          "type": "string"
        },
        "flavorAssetId": {
          "type": "string"
        },
        "flavorParamsOutputId": {
          "type": "integer"
        },
        "readyBehavior": {
          "type": "integer"
        },
        "videoBitrate": {
          "type": "integer"
        }
      }
    },
    "KalturaConvertCollectionJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaConvartableJobData"
        }
      ],
      "description": "",
      "properties": {
        "commandLinesStr": {
          "type": "string"
        },
        "destDirLocalPath": {
          "type": "string"
        },
        "destDirRemoteUrl": {
          "type": "string"
        },
        "destFileName": {
          "type": "string"
        },
        "flavors": {
          "items": {
            "$ref": "#/definitions/KalturaConvertCollectionFlavorData"
          },
          "type": "array"
        },
        "inputXmlLocalPath": {
          "type": "string"
        },
        "inputXmlRemoteUrl": {
          "type": "string"
        }
      }
    },
    "KalturaConvertEntryFlavorsObjectTask": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaObjectTask"
        }
      ],
      "description": "",
      "properties": {
        "flavorParamsIds": {
          "description": "Comma separated list of flavor param ids to convert",
          "type": "string"
        },
        "reconvert": {
          "description": "Should reconvert when flavor already exists?",
          "type": "boolean"
        }
      }
    },
    "KalturaConvertJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaConvartableJobData"
        }
      ],
      "description": "",
      "properties": {
        "customData": {
          "type": "string"
        },
        "destFileSyncLocalPath": {
          "type": "string"
        },
        "destFileSyncRemoteUrl": {
          "type": "string"
        },
        "engineMessage": {
          "type": "string"
        },
        "extraDestFileSyncs": {
          "items": {
            "$ref": "#/definitions/KalturaDestFileSyncDescriptor"
          },
          "type": "array"
        },
        "flavorAssetId": {
          "type": "string"
        },
        "logFileSyncLocalPath": {
          "type": "string"
        },
        "logFileSyncRemoteUrl": {
          "type": "string"
        },
        "remoteMediaId": {
          "type": "string"
        }
      }
    },
    "KalturaConvertLiveSegmentJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "assetId": {
          "type": "string"
        },
        "destFilePath": {
          "description": "The output file",
          "type": "string"
        },
        "endTime": {
          "description": "Duration of the live entry including all recorded segments including the current",
          "type": "number"
        },
        "entryId": {
          "description": "Live stream entry id",
          "type": "string"
        },
        "fileIndex": {
          "description": "The index of the file within the entry",
          "type": "integer"
        },
        "mediaServerIndex": {
          "description": "Primary or secondary media server",
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "PRIMARY",
            "SECONDARY"
          ],
          "type": "integer"
        },
        "srcFilePath": {
          "description": "The recorded live media",
          "type": "string"
        }
      }
    },
    "KalturaConvertProfileJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "inputFileSyncLocalPath": {
          "type": "string"
        },
        "thumbBitrate": {
          "description": "The bit rate of last created thumbnail, will be used to comapare if this thumbnail is the best we can have",
          "type": "integer"
        },
        "thumbHeight": {
          "description": "The height of last created thumbnail, will be used to comapare if this thumbnail is the best we can have",
          "type": "integer"
        }
      }
    },
    "KalturaCoordinate": {
      "description": "",
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "KalturaCoordinatesContextField": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStringField"
        }
      ],
      "description": "Represents the current request country context as calculated based on the IP address\n ",
      "properties": {
        "geoCoderType": {
          "description": "The ip geo coder engine to be used",
          "enum": [
            "1"
          ],
          "enumLabels": [
            "KALTURA"
          ],
          "type": "string"
        }
      }
    },
    "KalturaCopyPartnerJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "fromPartnerId": {
          "description": "Id of the partner to copy from",
          "type": "integer"
        },
        "toPartnerId": {
          "description": "Id of the partner to copy to",
          "type": "integer"
        }
      }
    },
    "KalturaCountryCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMatchCondition"
        }
      ],
      "description": "",
      "properties": {
        "geoCoderType": {
          "description": "The ip geo coder engine to be used",
          "enum": [
            "1"
          ],
          "enumLabels": [
            "KALTURA"
          ],
          "type": "string"
        }
      }
    },
    "KalturaCountryContextField": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStringField"
        }
      ],
      "description": "Represents the current request country context as calculated based on the IP address\n ",
      "properties": {
        "geoCoderType": {
          "description": "The ip geo coder engine to be used",
          "enum": [
            "1"
          ],
          "enumLabels": [
            "KALTURA"
          ],
          "type": "string"
        }
      }
    },
    "KalturaCountryRestriction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseRestriction"
        }
      ],
      "description": "",
      "properties": {
        "countryList": {
          "description": "Comma separated list of country codes to allow to deny",
          "type": "string"
        },
        "countryRestrictionType": {
          "description": "Country restriction type (Allow or deny)",
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "RESTRICT_COUNTRY_LIST",
            "ALLOW_COUNTRY_LIST"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaCropDimensions": {
      "description": "",
      "properties": {
        "height": {
          "description": "Crop height",
          "type": "integer"
        },
        "left": {
          "description": "Crop left point",
          "type": "integer"
        },
        "top": {
          "description": "Crop top point",
          "type": "integer"
        },
        "width": {
          "description": "Crop width",
          "type": "integer"
        }
      }
    },
    "KalturaCuePoint": {
      "abstract": true,
      "description": "",
      "properties": {
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "cuePointType": {
          "enum": [
            "adCuePoint.Ad",
            "annotation.Annotation",
            "codeCuePoint.Code",
            "eventCuePoint.Event",
            "quiz.QUIZ_ANSWER",
            "quiz.QUIZ_QUESTION",
            "thumbCuePoint.Thumb"
          ],
          "enumLabels": [
            "AD",
            "ANNOTATION",
            "CODE",
            "EVENT",
            "QUIZ_ANSWER",
            "QUIZ_QUESTION",
            "THUMB"
          ],
          "readOnly": true,
          "type": "string"
        },
        "entryId": {
          "type": "string"
        },
        "forceStop": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "partnerData": {
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "partnerSortValue": {
          "type": "integer"
        },
        "startTime": {
          "description": "Start time in milliseconds",
          "type": "integer"
        },
        "status": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "READY",
            "DELETED",
            "HANDLED",
            "PENDING"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "systemName": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "thumbOffset": {
          "type": "integer"
        },
        "triggeredAt": {
          "type": "integer"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "userId": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaCuePointBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "cuePointTypeEqual": {
          "enum": [
            "adCuePoint.Ad",
            "annotation.Annotation",
            "codeCuePoint.Code",
            "eventCuePoint.Event",
            "quiz.QUIZ_ANSWER",
            "quiz.QUIZ_QUESTION",
            "thumbCuePoint.Thumb"
          ],
          "enumLabels": [
            "AD",
            "ANNOTATION",
            "CODE",
            "EVENT",
            "QUIZ_ANSWER",
            "QUIZ_QUESTION",
            "THUMB"
          ],
          "type": "string"
        },
        "cuePointTypeIn": {
          "type": "string"
        },
        "entryIdEqual": {
          "type": "string"
        },
        "entryIdIn": {
          "type": "string"
        },
        "forceStopEqual": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "idEqual": {
          "type": "string"
        },
        "idIn": {
          "type": "string"
        },
        "partnerSortValueEqual": {
          "type": "integer"
        },
        "partnerSortValueGreaterThanOrEqual": {
          "type": "integer"
        },
        "partnerSortValueIn": {
          "type": "string"
        },
        "partnerSortValueLessThanOrEqual": {
          "type": "integer"
        },
        "startTimeGreaterThanOrEqual": {
          "type": "integer"
        },
        "startTimeLessThanOrEqual": {
          "type": "integer"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "READY",
            "DELETED",
            "HANDLED",
            "PENDING"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        },
        "tagsLike": {
          "type": "string"
        },
        "tagsMultiLikeAnd": {
          "type": "string"
        },
        "tagsMultiLikeOr": {
          "type": "string"
        },
        "triggeredAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "triggeredAtLessThanOrEqual": {
          "type": "integer"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        },
        "userIdEqual": {
          "type": "string"
        },
        "userIdIn": {
          "type": "string"
        }
      }
    },
    "KalturaCuePointFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCuePointBaseFilter"
        }
      ],
      "description": "",
      "properties": {
        "freeText": {
          "type": "string"
        },
        "userIdCurrent": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "userIdEqualCurrent": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaCuePointListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCuePoint"
          },
          "type": "array"
        }
      }
    },
    "KalturaDataCenterContentResource": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaContentResource"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDataEntry": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseEntry"
        }
      ],
      "description": "",
      "properties": {
        "dataContent": {
          "description": "The data of the entry",
          "type": "string"
        },
        "retrieveDataContentByGet": {
          "description": "indicator whether to return the object for get action with the dataContent field.",
          "type": "boolean"
        }
      }
    },
    "KalturaDataEntryBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseEntryFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDataEntryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDataEntryBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDataListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDataEntry"
          },
          "type": "array"
        }
      }
    },
    "KalturaDeleteEntryFlavorsObjectTask": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaObjectTask"
        }
      ],
      "description": "",
      "properties": {
        "deleteType": {
          "description": "The logic to use to choose the flavors for deletion",
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "KEEP_LIST_DELETE_OTHERS",
            "DELETE_LIST",
            "DELETE_KEEP_SMALLEST"
          ],
          "type": "integer"
        },
        "flavorParamsIds": {
          "description": "Comma separated list of flavor param ids to delete or keep",
          "type": "string"
        }
      }
    },
    "KalturaDeleteEntryObjectTask": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaObjectTask"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeleteFileJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "localFileSyncPath": {
          "type": "string"
        }
      }
    },
    "KalturaDeleteJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "filter": {
          "$ref": "#/definitions/KalturaFilter"
        }
      }
    },
    "KalturaDeleteLocalContentObjectTask": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaObjectTask"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfile": {
      "description": "",
      "properties": {
        "createdAt": {
          "description": "Creation time as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "description": "The description of the Delivery",
          "type": "string"
        },
        "hostName": {
          "description": "the host part of the url",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the Delivery",
          "readOnly": true,
          "type": "integer"
        },
        "isDefault": {
          "description": "True if this is the systemwide default for the protocol",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "mediaProtocols": {
          "description": "Comma separated list of supported media protocols. f.i. rtmpe",
          "type": "string"
        },
        "name": {
          "description": "The name of the Delivery",
          "type": "string"
        },
        "parentId": {
          "description": "the object from which this object was cloned (or 0)",
          "readOnly": true,
          "type": "integer"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "priority": {
          "description": "priority used for ordering similar delivery profiles",
          "type": "integer"
        },
        "recognizer": {
          "$ref": "#/definitions/KalturaUrlRecognizer"
        },
        "status": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "enumLabels": [
            "ACTIVE",
            "DELETED",
            "STAGING_IN",
            "STAGING_OUT"
          ],
          "type": "integer"
        },
        "streamerType": {
          "enum": [
            "applehttp",
            "applehttp_to_mc",
            "auto",
            "hdnetwork",
            "hdnetworkmanifest",
            "hds",
            "hls",
            "http",
            "mpegdash",
            "multicast_silverlight",
            "rtmp",
            "rtsp",
            "sl"
          ],
          "enumLabels": [
            "APPLE_HTTP",
            "APPLE_HTTP_TO_MC",
            "AUTO",
            "AKAMAI_HD",
            "AKAMAI_HDS",
            "HDS",
            "HLS",
            "HTTP",
            "MPEG_DASH",
            "MULTICAST_SL",
            "RTMP",
            "RTSP",
            "SILVER_LIGHT"
          ],
          "type": "string"
        },
        "systemName": {
          "description": "System name of the delivery",
          "type": "string"
        },
        "tokenizer": {
          "$ref": "#/definitions/KalturaUrlTokenizer"
        },
        "type": {
          "description": "Delivery type",
          "enum": [
            "edgeCast.EDGE_CAST_HTTP",
            "edgeCast.EDGE_CAST_RTMP",
            "kontiki.KONTIKI_HTTP",
            "velocix.VELOCIX_HDS",
            "velocix.VELOCIX_HLS",
            "1",
            "3",
            "4",
            "5",
            "6",
            "7",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "21",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "31",
            "34",
            "35",
            "44",
            "45",
            "51",
            "53",
            "54",
            "55",
            "61",
            "63",
            "67",
            "68",
            "1001",
            "1002",
            "1003",
            "1005",
            "1006",
            "1013"
          ],
          "enumLabels": [
            "EDGE_CAST_HTTP",
            "EDGE_CAST_RTMP",
            "KONTIKI_HTTP",
            "VELOCIX_HDS",
            "VELOCIX_HLS",
            "APPLE_HTTP",
            "HDS",
            "HTTP",
            "RTMP",
            "RTSP",
            "SILVER_LIGHT",
            "AKAMAI_HLS_DIRECT",
            "AKAMAI_HLS_MANIFEST",
            "AKAMAI_HD",
            "AKAMAI_HDS",
            "AKAMAI_HTTP",
            "AKAMAI_RTMP",
            "AKAMAI_RTSP",
            "AKAMAI_SS",
            "GENERIC_HLS",
            "GENERIC_HDS",
            "GENERIC_HTTP",
            "GENERIC_HLS_MANIFEST",
            "GENERIC_HDS_MANIFEST",
            "GENERIC_SS",
            "GENERIC_RTMP",
            "LEVEL3_HLS",
            "LEVEL3_HTTP",
            "LEVEL3_RTMP",
            "LIMELIGHT_HTTP",
            "LIMELIGHT_RTMP",
            "LOCAL_PATH_APPLE_HTTP",
            "LOCAL_PATH_HDS",
            "LOCAL_PATH_HTTP",
            "LOCAL_PATH_RTMP",
            "VOD_PACKAGER_HLS",
            "VOD_PACKAGER_HDS",
            "VOD_PACKAGER_MSS",
            "VOD_PACKAGER_DASH",
            "LIVE_HLS",
            "LIVE_HDS",
            "LIVE_DASH",
            "LIVE_RTMP",
            "LIVE_HLS_TO_MULTICAST",
            "LIVE_AKAMAI_HDS"
          ],
          "type": "string"
        },
        "updatedAt": {
          "description": "Update time as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "KalturaDeliveryProfileAkamaiAppleHttpManifest": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfile"
        }
      ],
      "description": "",
      "properties": {
        "supportClipping": {
          "description": "Should we use timing parameters - clipTo / seekFrom",
          "type": "boolean"
        }
      }
    },
    "KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileAkamaiAppleHttpManifestFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileAkamaiHds": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfile"
        }
      ],
      "description": "",
      "properties": {
        "supportClipping": {
          "description": "Should we use timing parameters - clipTo / seekFrom",
          "type": "boolean"
        }
      }
    },
    "KalturaDeliveryProfileAkamaiHdsBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileAkamaiHdsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileAkamaiHdsBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileAkamaiHttp": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfile"
        }
      ],
      "description": "",
      "properties": {
        "useIntelliseek": {
          "description": "Should we use intelliseek",
          "type": "boolean"
        }
      }
    },
    "KalturaDeliveryProfileAkamaiHttpBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileAkamaiHttpFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileAkamaiHttpBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "enumLabels": [
            "ACTIVE",
            "DELETED",
            "STAGING_IN",
            "STAGING_OUT"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "streamerTypeEqual": {
          "enum": [
            "applehttp",
            "applehttp_to_mc",
            "auto",
            "hdnetwork",
            "hdnetworkmanifest",
            "hds",
            "hls",
            "http",
            "mpegdash",
            "multicast_silverlight",
            "rtmp",
            "rtsp",
            "sl"
          ],
          "enumLabels": [
            "APPLE_HTTP",
            "APPLE_HTTP_TO_MC",
            "AUTO",
            "AKAMAI_HD",
            "AKAMAI_HDS",
            "HDS",
            "HLS",
            "HTTP",
            "MPEG_DASH",
            "MULTICAST_SL",
            "RTMP",
            "RTSP",
            "SILVER_LIGHT"
          ],
          "type": "string"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaDeliveryProfileCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "",
      "properties": {
        "deliveryProfileIds": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        }
      }
    },
    "KalturaDeliveryProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileGenericAppleHttp": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfile"
        }
      ],
      "description": "",
      "properties": {
        "manifestRedirect": {
          "description": "Enable to make playManifest redirect to the domain of the delivery profile",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "pattern": {
          "type": "string"
        },
        "rendererClass": {
          "description": "rendererClass",
          "type": "string"
        }
      }
    },
    "KalturaDeliveryProfileGenericAppleHttpBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileGenericAppleHttpFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileGenericAppleHttpBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileGenericHds": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfile"
        }
      ],
      "description": "",
      "properties": {
        "pattern": {
          "type": "string"
        },
        "rendererClass": {
          "description": "rendererClass",
          "type": "string"
        }
      }
    },
    "KalturaDeliveryProfileGenericHdsBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileGenericHdsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileGenericHdsBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileGenericHttp": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfile"
        }
      ],
      "description": "",
      "properties": {
        "pattern": {
          "type": "string"
        }
      }
    },
    "KalturaDeliveryProfileGenericHttpBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileGenericHttpFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileGenericHttpBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileGenericRtmp": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileRtmp"
        }
      ],
      "description": "",
      "properties": {
        "pattern": {
          "type": "string"
        },
        "rendererClass": {
          "description": "rendererClass",
          "type": "string"
        }
      }
    },
    "KalturaDeliveryProfileGenericRtmpBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileRtmpFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileGenericRtmpFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileGenericRtmpBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileGenericSilverLight": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfile"
        }
      ],
      "description": "",
      "properties": {
        "pattern": {
          "type": "string"
        }
      }
    },
    "KalturaDeliveryProfileGenericSilverLightBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileGenericSilverLightFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileGenericSilverLightBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDeliveryProfile"
          },
          "type": "array"
        }
      }
    },
    "KalturaDeliveryProfileLiveAppleHttp": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfile"
        }
      ],
      "description": "",
      "properties": {
        "disableExtraAttributes": {
          "type": "boolean"
        },
        "forceProxy": {
          "type": "boolean"
        }
      }
    },
    "KalturaDeliveryProfileLiveAppleHttpBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileLiveAppleHttpFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileLiveAppleHttpBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileRtmp": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfile"
        }
      ],
      "description": "",
      "properties": {
        "enforceRtmpe": {
          "description": "enforceRtmpe",
          "type": "boolean"
        },
        "prefix": {
          "description": "a prefix that is added to all stream urls (replaces storageProfile::rtmpPrefix)",
          "type": "string"
        }
      }
    },
    "KalturaDeliveryProfileRtmpBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDeliveryProfileRtmpFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeliveryProfileRtmpBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDestFileSyncDescriptor": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFileSyncDescriptor"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDetachedResponseProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseResponseProfile"
        }
      ],
      "description": "",
      "properties": {
        "fields": {
          "description": "Comma separated fields list to be included or excluded",
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/KalturaRelatedFilter"
        },
        "mappings": {
          "items": {
            "$ref": "#/definitions/KalturaResponseProfileMapping"
          },
          "type": "array"
        },
        "name": {
          "description": "Friendly name",
          "type": "string"
        },
        "pager": {
          "$ref": "#/definitions/KalturaFilterPager"
        },
        "relatedProfiles": {
          "items": {
            "$ref": "#/definitions/KalturaDetachedResponseProfile"
          },
          "type": "array"
        },
        "type": {
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "INCLUDE_FIELDS",
            "EXCLUDE_FIELDS"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaDirectoryRestriction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseRestriction"
        }
      ],
      "description": "",
      "properties": {
        "directoryRestrictionType": {
          "description": "Kaltura directory restriction type",
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "DONT_DISPLAY",
            "DISPLAY_WITH_LINK"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaDispatchEventNotificationObjectTask": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaObjectTask"
        }
      ],
      "description": "",
      "properties": {
        "eventNotificationTemplateId": {
          "description": "The event notification template id to dispatch",
          "type": "integer"
        }
      }
    },
    "KalturaDistributeObjectTask": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaObjectTask"
        }
      ],
      "description": "",
      "properties": {
        "distributionProfileId": {
          "description": "Distribution profile id",
          "type": "string"
        }
      }
    },
    "KalturaDistributionDeleteJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionJobData"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDistributionDisableJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionUpdateJobData"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDistributionEnableJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionUpdateJobData"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDistributionFetchReportJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionJobData"
        }
      ],
      "description": "",
      "properties": {
        "plays": {
          "type": "integer"
        },
        "views": {
          "type": "integer"
        }
      }
    },
    "KalturaDistributionFieldConfig": {
      "description": "",
      "properties": {
        "entryMrssXslt": {
          "description": "An XSLT string that extracts the right value from the Kaltura entry MRSS XML.\n     The value of the current connector field will be the one that is returned from transforming the Kaltura entry MRSS XML using this XSLT string.",
          "type": "string"
        },
        "fieldName": {
          "description": "A value taken from a connector field enum which associates the current configuration to that connector field\n     Field enum class should be returned by the provider's getFieldEnumClass function.",
          "type": "string"
        },
        "isDefault": {
          "description": "Is this field config is the default for the distribution provider?",
          "readOnly": true,
          "type": "boolean"
        },
        "isRequired": {
          "description": "Is the field required to have a value for submission ?",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "enumLabels": [
            "NOT_REQUIRED",
            "REQUIRED_BY_PROVIDER",
            "REQUIRED_BY_PARTNER",
            "REQUIRED_FOR_AUTOMATIC_DISTRIBUTION"
          ],
          "type": "integer"
        },
        "updateOnChange": {
          "description": "Trigger distribution update when this field changes or not ?",
          "type": "boolean"
        },
        "updateParams": {
          "items": {
            "$ref": "#/definitions/KalturaString"
          },
          "type": "array"
        },
        "userFriendlyFieldName": {
          "description": "A string that will be shown to the user as the field name in error messages related to the current field",
          "type": "string"
        }
      }
    },
    "KalturaDistributionJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "distributionProfile": {
          "$ref": "#/definitions/KalturaDistributionProfile"
        },
        "distributionProfileId": {
          "type": "integer"
        },
        "entryDistribution": {
          "$ref": "#/definitions/KalturaEntryDistribution"
        },
        "entryDistributionId": {
          "type": "integer"
        },
        "mediaFiles": {
          "items": {
            "$ref": "#/definitions/KalturaDistributionRemoteMediaFile"
          },
          "type": "array"
        },
        "providerData": {
          "$ref": "#/definitions/KalturaDistributionJobProviderData"
        },
        "providerType": {
          "enum": [
            "ideticDistribution.IDETIC",
            "youtubeApiDistribution.YOUTUBE_API",
            "1",
            "2"
          ],
          "enumLabels": [
            "IDETIC",
            "YOUTUBE_API",
            "GENERIC",
            "SYNDICATION"
          ],
          "type": "string"
        },
        "remoteId": {
          "description": "Id of the media in the remote system",
          "type": "string"
        },
        "results": {
          "description": "The results as returned from the remote destination",
          "type": "string"
        },
        "sentData": {
          "description": "The data as sent to the remote destination",
          "type": "string"
        }
      }
    },
    "KalturaDistributionJobProviderData": {
      "abstract": true,
      "description": "",
      "properties": {}
    },
    "KalturaDistributionProfile": {
      "abstract": true,
      "description": "",
      "properties": {
        "autoCreateFlavors": {
          "description": "Comma separated flavor params ids that should be auto converted",
          "type": "string"
        },
        "autoCreateThumb": {
          "description": "Comma separated thumbnail params ids that should be auto generated",
          "type": "string"
        },
        "createdAt": {
          "description": "Profile creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "deleteEnabled": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "AUTOMATIC",
            "MANUAL"
          ],
          "type": "integer"
        },
        "id": {
          "description": "Auto generated unique id",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "optionalAssetDistributionRules": {
          "items": {
            "$ref": "#/definitions/KalturaAssetDistributionRule"
          },
          "type": "array"
        },
        "optionalFlavorParamsIds": {
          "description": "Comma separated flavor params ids that should be submitted if ready",
          "type": "string"
        },
        "optionalThumbDimensions": {
          "items": {
            "$ref": "#/definitions/KalturaDistributionThumbDimensions"
          },
          "type": "array"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "providerType": {
          "enum": [
            "ideticDistribution.IDETIC",
            "youtubeApiDistribution.YOUTUBE_API",
            "1",
            "2"
          ],
          "enumLabels": [
            "IDETIC",
            "YOUTUBE_API",
            "GENERIC",
            "SYNDICATION"
          ],
          "type": "string"
        },
        "recommendedDcForDownload": {
          "description": "The best Kaltura data center to be used to download the asset files to",
          "type": "integer"
        },
        "recommendedDcForExecute": {
          "description": "The best Kaltura data center to be used to execute the distribution job",
          "type": "integer"
        },
        "recommendedStorageProfileForDownload": {
          "description": "The best external storage to be used to download the asset files from",
          "type": "integer"
        },
        "reportEnabled": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "AUTOMATIC",
            "MANUAL"
          ],
          "type": "integer"
        },
        "requiredAssetDistributionRules": {
          "items": {
            "$ref": "#/definitions/KalturaAssetDistributionRule"
          },
          "type": "array"
        },
        "requiredFlavorParamsIds": {
          "description": "Comma separated flavor params ids that required to be ready before submission",
          "type": "string"
        },
        "requiredThumbDimensions": {
          "items": {
            "$ref": "#/definitions/KalturaDistributionThumbDimensions"
          },
          "type": "array"
        },
        "status": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "ENABLED",
            "DELETED"
          ],
          "type": "integer"
        },
        "submitEnabled": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "AUTOMATIC",
            "MANUAL"
          ],
          "type": "integer"
        },
        "sunriseDefaultOffset": {
          "description": "If entry distribution sunrise not specified that will be the default since entry creation time, in seconds",
          "type": "integer"
        },
        "sunsetDefaultOffset": {
          "description": "If entry distribution sunset not specified that will be the default since entry creation time, in seconds",
          "type": "integer"
        },
        "updateEnabled": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "AUTOMATIC",
            "MANUAL"
          ],
          "type": "integer"
        },
        "updatedAt": {
          "description": "Profile last update date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaDistributionProfileBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "ENABLED",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaDistributionProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionProfileBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDistributionProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDistributionProfile"
          },
          "type": "array"
        }
      }
    },
    "KalturaDistributionProvider": {
      "abstract": true,
      "description": "",
      "properties": {
        "availabilityUpdateEnabled": {
          "type": "boolean"
        },
        "deleteInsteadUpdate": {
          "type": "boolean"
        },
        "intervalBeforeSunrise": {
          "type": "integer"
        },
        "intervalBeforeSunset": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "scheduleUpdateEnabled": {
          "type": "boolean"
        },
        "type": {
          "enum": [
            "ideticDistribution.IDETIC",
            "youtubeApiDistribution.YOUTUBE_API",
            "1",
            "2"
          ],
          "enumLabels": [
            "IDETIC",
            "YOUTUBE_API",
            "GENERIC",
            "SYNDICATION"
          ],
          "readOnly": true,
          "type": "string"
        },
        "updateRequiredEntryFields": {
          "type": "string"
        },
        "updateRequiredMetadataXPaths": {
          "type": "string"
        }
      }
    },
    "KalturaDistributionProviderBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "typeEqual": {
          "enum": [
            "ideticDistribution.IDETIC",
            "youtubeApiDistribution.YOUTUBE_API",
            "1",
            "2"
          ],
          "enumLabels": [
            "IDETIC",
            "YOUTUBE_API",
            "GENERIC",
            "SYNDICATION"
          ],
          "type": "string"
        },
        "typeIn": {
          "type": "string"
        }
      }
    },
    "KalturaDistributionProviderFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionProviderBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDistributionProviderListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDistributionProvider"
          },
          "type": "array"
        }
      }
    },
    "KalturaDistributionRemoteMediaFile": {
      "description": "",
      "properties": {
        "assetId": {
          "type": "string"
        },
        "remoteId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "KalturaDistributionSubmitJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionJobData"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDistributionThumbDimensions": {
      "description": "",
      "properties": {
        "height": {
          "type": "integer"
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "KalturaDistributionUpdateJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionJobData"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDistributionValidationError": {
      "abstract": true,
      "description": "",
      "properties": {
        "action": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "SUBMIT",
            "UPDATE",
            "DELETE",
            "FETCH_REPORT"
          ],
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "errorType": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "enumLabels": [
            "MISSING_FLAVOR",
            "MISSING_THUMBNAIL",
            "MISSING_METADATA",
            "INVALID_DATA",
            "MISSING_ASSET",
            "CONDITION_NOT_MET"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaDistributionValidationErrorConditionNotMet": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionValidationError"
        }
      ],
      "description": "",
      "properties": {
        "conditionName": {
          "type": "string"
        }
      }
    },
    "KalturaDistributionValidationErrorInvalidData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionValidationError"
        }
      ],
      "description": "",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "validationErrorParam": {
          "description": "Parameter of the validation error\n\t For example, minimum value for KalturaDistributionValidationErrorType::STRING_TOO_SHORT validation error",
          "type": "string"
        },
        "validationErrorType": {
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "CUSTOM_ERROR",
            "STRING_EMPTY",
            "STRING_TOO_LONG",
            "STRING_TOO_SHORT",
            "INVALID_FORMAT"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaDistributionValidationErrorInvalidMetadata": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionValidationErrorInvalidData"
        }
      ],
      "description": "",
      "properties": {
        "metadataProfileId": {
          "type": "integer"
        }
      }
    },
    "KalturaDistributionValidationErrorMissingAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionValidationError"
        }
      ],
      "description": "",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "KalturaDistributionValidationErrorMissingFlavor": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionValidationError"
        }
      ],
      "description": "",
      "properties": {
        "flavorParamsId": {
          "type": "string"
        }
      }
    },
    "KalturaDistributionValidationErrorMissingMetadata": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionValidationError"
        }
      ],
      "description": "",
      "properties": {
        "fieldName": {
          "type": "string"
        }
      }
    },
    "KalturaDistributionValidationErrorMissingThumbnail": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionValidationError"
        }
      ],
      "description": "",
      "properties": {
        "dimensions": {
          "$ref": "#/definitions/KalturaDistributionThumbDimensions"
        }
      }
    },
    "KalturaDocumentEntry": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseEntry"
        }
      ],
      "description": "",
      "properties": {
        "assetParamsIds": {
          "description": "Comma separated asset params ids that exists for this media entry",
          "readOnly": true,
          "type": "string"
        },
        "documentType": {
          "description": "The type of the document",
          "enum": [
            11,
            12,
            13
          ],
          "enumLabels": [
            "DOCUMENT",
            "SWF",
            "PDF"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaDocumentEntryBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseEntryFilter"
        }
      ],
      "description": "",
      "properties": {
        "assetParamsIdsMatchAnd": {
          "type": "string"
        },
        "assetParamsIdsMatchOr": {
          "type": "string"
        },
        "documentTypeEqual": {
          "enum": [
            11,
            12,
            13
          ],
          "enumLabels": [
            "DOCUMENT",
            "SWF",
            "PDF"
          ],
          "type": "integer"
        },
        "documentTypeIn": {
          "type": "string"
        }
      }
    },
    "KalturaDocumentEntryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDocumentEntryBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDocumentFlavorParams": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParams"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDocumentFlavorParamsBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDocumentFlavorParamsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDocumentFlavorParamsBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDocumentFlavorParamsOutput": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsOutput"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDocumentFlavorParamsOutputBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsOutputFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDocumentFlavorParamsOutputFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDocumentFlavorParamsOutputBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDocumentListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDocumentEntry"
          },
          "type": "array"
        }
      }
    },
    "KalturaDrmEntryContextPluginData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPluginData"
        }
      ],
      "description": "",
      "properties": {
        "flavorData": {
          "description": "For the uDRM we give the drm context data which is a json encoding of an array containing the uDRM data\n     for each flavor that is required from this getContextData request.",
          "type": "string"
        }
      }
    },
    "KalturaDropFolder": {
      "description": "",
      "properties": {
        "autoFileDeleteDays": {
          "type": "integer"
        },
        "categoriesMetadataFieldName": {
          "type": "string"
        },
        "conversionProfileId": {
          "type": "integer"
        },
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "dc": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "enforceEntitlement": {
          "type": "boolean"
        },
        "errorCode": {
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "enumLabels": [
            "ERROR_CONNECT",
            "ERROR_AUTENTICATE",
            "ERROR_GET_PHISICAL_FILE_LIST",
            "ERROR_GET_DB_FILE_LIST",
            "DROP_FOLDER_APP_ERROR",
            "CONTENT_MATCH_POLICY_UNDEFINED"
          ],
          "type": "string"
        },
        "errorDescription": {
          "type": "string"
        },
        "fileDeletePolicy": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "MANUAL_DELETE",
            "AUTO_DELETE",
            "AUTO_DELETE_WHEN_ENTRY_IS_READY"
          ],
          "type": "integer"
        },
        "fileHandlerConfig": {
          "$ref": "#/definitions/KalturaDropFolderFileHandlerConfig"
        },
        "fileHandlerType": {
          "enum": [
            "dropFolderXmlBulkUpload.XML",
            "1"
          ],
          "enumLabels": [
            "XML",
            "CONTENT"
          ],
          "type": "string"
        },
        "fileNamePatterns": {
          "type": "string"
        },
        "fileSizeCheckInterval": {
          "description": "The ammount of time, in seconds, that should pass so that a file with no change in size we'll be treated as \"finished uploading to folder\"",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "ignoreFileNamePatterns": {
          "type": "string"
        },
        "incremental": {
          "type": "boolean"
        },
        "lastAccessedAt": {
          "type": "integer"
        },
        "lastFileTimestamp": {
          "type": "integer"
        },
        "metadataProfileId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "partnerId": {
          "type": "integer"
        },
        "path": {
          "type": "string"
        },
        "shouldValidateKS": {
          "type": "boolean"
        },
        "status": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "ENABLED",
            "DELETED",
            "ERROR"
          ],
          "type": "integer"
        },
        "tags": {
          "type": "string"
        },
        "type": {
          "enum": [
            "FeedDropFolder.FEED",
            "1",
            "2",
            "3",
            "4",
            "6"
          ],
          "enumLabels": [
            "FEED",
            "LOCAL",
            "FTP",
            "SCP",
            "SFTP",
            "S3"
          ],
          "type": "string"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaDropFolderBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "conversionProfileIdEqual": {
          "type": "integer"
        },
        "conversionProfileIdIn": {
          "type": "string"
        },
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "dcEqual": {
          "type": "integer"
        },
        "dcIn": {
          "type": "string"
        },
        "errorCodeEqual": {
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "enumLabels": [
            "ERROR_CONNECT",
            "ERROR_AUTENTICATE",
            "ERROR_GET_PHISICAL_FILE_LIST",
            "ERROR_GET_DB_FILE_LIST",
            "DROP_FOLDER_APP_ERROR",
            "CONTENT_MATCH_POLICY_UNDEFINED"
          ],
          "type": "string"
        },
        "errorCodeIn": {
          "type": "string"
        },
        "fileHandlerTypeEqual": {
          "enum": [
            "dropFolderXmlBulkUpload.XML",
            "1"
          ],
          "enumLabels": [
            "XML",
            "CONTENT"
          ],
          "type": "string"
        },
        "fileHandlerTypeIn": {
          "type": "string"
        },
        "fileNamePatternsLike": {
          "type": "string"
        },
        "fileNamePatternsMultiLikeAnd": {
          "type": "string"
        },
        "fileNamePatternsMultiLikeOr": {
          "type": "string"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "nameLike": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "pathEqual": {
          "type": "string"
        },
        "pathLike": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "ENABLED",
            "DELETED",
            "ERROR"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "tagsLike": {
          "type": "string"
        },
        "tagsMultiLikeAnd": {
          "type": "string"
        },
        "tagsMultiLikeOr": {
          "type": "string"
        },
        "typeEqual": {
          "enum": [
            "FeedDropFolder.FEED",
            "1",
            "2",
            "3",
            "4",
            "6"
          ],
          "enumLabels": [
            "FEED",
            "LOCAL",
            "FTP",
            "SCP",
            "SFTP",
            "S3"
          ],
          "type": "string"
        },
        "typeIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaDropFolderContentFileHandlerConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDropFolderFileHandlerConfig"
        }
      ],
      "description": "",
      "properties": {
        "contentMatchPolicy": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "ADD_AS_NEW",
            "MATCH_EXISTING_OR_ADD_AS_NEW",
            "MATCH_EXISTING_OR_KEEP_IN_FOLDER"
          ],
          "type": "integer"
        },
        "slugRegex": {
          "description": "Regular expression that defines valid file names to be handled.\n\t The following might be extracted from the file name and used if defined:\n\t - (?P<referenceId>\\w+) - will be used as the drop folder file's parsed slug.\n\t - (?P<flavorName>\\w+)  - will be used as the drop folder file's parsed flavor.",
          "type": "string"
        }
      }
    },
    "KalturaDropFolderContentProcessorJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "contentMatchPolicy": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "ADD_AS_NEW",
            "MATCH_EXISTING_OR_ADD_AS_NEW",
            "MATCH_EXISTING_OR_KEEP_IN_FOLDER"
          ],
          "type": "integer"
        },
        "conversionProfileId": {
          "type": "integer"
        },
        "dropFolderFileIds": {
          "type": "string"
        },
        "dropFolderId": {
          "type": "integer"
        },
        "parsedSlug": {
          "type": "string"
        },
        "parsedUserId": {
          "type": "string"
        }
      }
    },
    "KalturaDropFolderFile": {
      "description": "",
      "properties": {
        "batchJobId": {
          "readOnly": true,
          "type": "integer"
        },
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "deletedDropFolderFileId": {
          "type": "integer"
        },
        "dropFolderId": {
          "type": "integer"
        },
        "entryId": {
          "type": "string"
        },
        "errorCode": {
          "enum": [
            "dropFolderXmlBulkUpload.ERROR_ADDING_BULK_UPLOAD",
            "dropFolderXmlBulkUpload.ERROR_ADD_CONTENT_RESOURCE",
            "dropFolderXmlBulkUpload.ERROR_IN_BULK_UPLOAD",
            "dropFolderXmlBulkUpload.ERROR_WRITING_TEMP_FILE",
            "dropFolderXmlBulkUpload.LOCAL_FILE_WRONG_CHECKSUM",
            "dropFolderXmlBulkUpload.LOCAL_FILE_WRONG_SIZE",
            "dropFolderXmlBulkUpload.MALFORMED_XML_FILE",
            "dropFolderXmlBulkUpload.XML_FILE_SIZE_EXCEED_LIMIT",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "10",
            "11",
            "12",
            "13"
          ],
          "enumLabels": [
            "ERROR_ADDING_BULK_UPLOAD",
            "ERROR_ADD_CONTENT_RESOURCE",
            "ERROR_IN_BULK_UPLOAD",
            "ERROR_WRITING_TEMP_FILE",
            "LOCAL_FILE_WRONG_CHECKSUM",
            "LOCAL_FILE_WRONG_SIZE",
            "MALFORMED_XML_FILE",
            "XML_FILE_SIZE_EXCEED_LIMIT",
            "ERROR_UPDATE_ENTRY",
            "ERROR_ADD_ENTRY",
            "FLAVOR_NOT_FOUND",
            "FLAVOR_MISSING_IN_FILE_NAME",
            "SLUG_REGEX_NO_MATCH",
            "ERROR_READING_FILE",
            "ERROR_DOWNLOADING_FILE",
            "ERROR_UPDATE_FILE",
            "ERROR_ADDING_CONTENT_PROCESSOR",
            "ERROR_IN_CONTENT_PROCESSOR",
            "ERROR_DELETING_FILE",
            "FILE_NO_MATCH"
          ],
          "type": "string"
        },
        "errorDescription": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileSize": {
          "type": "number"
        },
        "fileSizeLastSetAt": {
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "importEndedAt": {
          "type": "integer"
        },
        "importStartedAt": {
          "type": "integer"
        },
        "lastModificationTime": {
          "type": "string"
        },
        "leadDropFolderFileId": {
          "type": "integer"
        },
        "parsedFlavor": {
          "type": "string"
        },
        "parsedSlug": {
          "type": "string"
        },
        "parsedUserId": {
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15
          ],
          "enumLabels": [
            "UPLOADING",
            "PENDING",
            "WAITING",
            "HANDLED",
            "IGNORE",
            "DELETED",
            "PURGED",
            "NO_MATCH",
            "ERROR_HANDLING",
            "ERROR_DELETING",
            "DOWNLOADING",
            "ERROR_DOWNLOADING",
            "PROCESSING",
            "PARSED",
            "DETECTED"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "type": {
          "enum": [
            "FeedDropFolder.FEED",
            "1",
            "2",
            "3",
            "4",
            "6"
          ],
          "enumLabels": [
            "FEED",
            "LOCAL",
            "FTP",
            "SCP",
            "SFTP",
            "S3"
          ],
          "readOnly": true,
          "type": "string"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "uploadEndDetectedAt": {
          "type": "integer"
        },
        "uploadStartDetectedAt": {
          "type": "integer"
        }
      }
    },
    "KalturaDropFolderFileBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "deletedDropFolderFileIdEqual": {
          "type": "integer"
        },
        "dropFolderIdEqual": {
          "type": "integer"
        },
        "dropFolderIdIn": {
          "type": "string"
        },
        "entryIdEqual": {
          "type": "string"
        },
        "errorCodeEqual": {
          "enum": [
            "dropFolderXmlBulkUpload.ERROR_ADDING_BULK_UPLOAD",
            "dropFolderXmlBulkUpload.ERROR_ADD_CONTENT_RESOURCE",
            "dropFolderXmlBulkUpload.ERROR_IN_BULK_UPLOAD",
            "dropFolderXmlBulkUpload.ERROR_WRITING_TEMP_FILE",
            "dropFolderXmlBulkUpload.LOCAL_FILE_WRONG_CHECKSUM",
            "dropFolderXmlBulkUpload.LOCAL_FILE_WRONG_SIZE",
            "dropFolderXmlBulkUpload.MALFORMED_XML_FILE",
            "dropFolderXmlBulkUpload.XML_FILE_SIZE_EXCEED_LIMIT",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "10",
            "11",
            "12",
            "13"
          ],
          "enumLabels": [
            "ERROR_ADDING_BULK_UPLOAD",
            "ERROR_ADD_CONTENT_RESOURCE",
            "ERROR_IN_BULK_UPLOAD",
            "ERROR_WRITING_TEMP_FILE",
            "LOCAL_FILE_WRONG_CHECKSUM",
            "LOCAL_FILE_WRONG_SIZE",
            "MALFORMED_XML_FILE",
            "XML_FILE_SIZE_EXCEED_LIMIT",
            "ERROR_UPDATE_ENTRY",
            "ERROR_ADD_ENTRY",
            "FLAVOR_NOT_FOUND",
            "FLAVOR_MISSING_IN_FILE_NAME",
            "SLUG_REGEX_NO_MATCH",
            "ERROR_READING_FILE",
            "ERROR_DOWNLOADING_FILE",
            "ERROR_UPDATE_FILE",
            "ERROR_ADDING_CONTENT_PROCESSOR",
            "ERROR_IN_CONTENT_PROCESSOR",
            "ERROR_DELETING_FILE",
            "FILE_NO_MATCH"
          ],
          "type": "string"
        },
        "errorCodeIn": {
          "type": "string"
        },
        "fileNameEqual": {
          "type": "string"
        },
        "fileNameIn": {
          "type": "string"
        },
        "fileNameLike": {
          "type": "string"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "leadDropFolderFileIdEqual": {
          "type": "integer"
        },
        "parsedFlavorEqual": {
          "type": "string"
        },
        "parsedFlavorIn": {
          "type": "string"
        },
        "parsedFlavorLike": {
          "type": "string"
        },
        "parsedSlugEqual": {
          "type": "string"
        },
        "parsedSlugIn": {
          "type": "string"
        },
        "parsedSlugLike": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15
          ],
          "enumLabels": [
            "UPLOADING",
            "PENDING",
            "WAITING",
            "HANDLED",
            "IGNORE",
            "DELETED",
            "PURGED",
            "NO_MATCH",
            "ERROR_HANDLING",
            "ERROR_DELETING",
            "DOWNLOADING",
            "ERROR_DOWNLOADING",
            "PROCESSING",
            "PARSED",
            "DETECTED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "statusNotIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaDropFolderFileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDropFolderFileBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDropFolderFileHandlerConfig": {
      "abstract": true,
      "description": "",
      "properties": {
        "handlerType": {
          "enum": [
            "dropFolderXmlBulkUpload.XML",
            "1"
          ],
          "enumLabels": [
            "XML",
            "CONTENT"
          ],
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaDropFolderFileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDropFolderFile"
          },
          "type": "array"
        }
      }
    },
    "KalturaDropFolderFileResource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDataCenterContentResource"
        }
      ],
      "description": "Used to ingest media that dropped through drop folder\n ",
      "properties": {
        "dropFolderFileId": {
          "description": "Id of the drop folder file object",
          "type": "integer"
        }
      }
    },
    "KalturaDropFolderFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDropFolderBaseFilter"
        }
      ],
      "description": "",
      "properties": {
        "currentDc": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaDropFolderImportJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSshImportJobData"
        }
      ],
      "description": "",
      "properties": {
        "dropFolderFileId": {
          "type": "integer"
        }
      }
    },
    "KalturaDropFolderListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDropFolder"
          },
          "type": "array"
        }
      }
    },
    "KalturaDropFolderXmlBulkUploadFileHandlerConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDropFolderFileHandlerConfig"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaDynamicObjectSearchItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSearchOperator"
        }
      ],
      "description": "",
      "properties": {
        "field": {
          "type": "string"
        }
      }
    },
    "KalturaEdgeServer": {
      "description": "",
      "properties": {
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "deliveryProfileIds": {
          "description": "Delivery profile ids comma seperated",
          "type": "string"
        },
        "desciption": {
          "description": "edgeServer description",
          "type": "string"
        },
        "hostName": {
          "description": "edgeServer host name",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "edgeServer name",
          "type": "string"
        },
        "parentId": {
          "description": "Id of the parent edge server",
          "type": "integer"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "playbackHostName": {
          "description": "edgeServer playback hostName",
          "type": "string"
        },
        "status": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "ACTIVE",
            "DISABLED",
            "DELETED"
          ],
          "type": "integer"
        },
        "systemName": {
          "description": "edgeServer uniqe system name",
          "type": "string"
        },
        "tags": {
          "description": "edgeServer tags",
          "type": "string"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaEdgeServerBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "hostNameLike": {
          "type": "string"
        },
        "hostNameMultiLikeAnd": {
          "type": "string"
        },
        "hostNameMultiLikeOr": {
          "type": "string"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "nameEqual": {
          "type": "string"
        },
        "nameIn": {
          "type": "string"
        },
        "parentIdEqual": {
          "type": "integer"
        },
        "parentIdIn": {
          "type": "string"
        },
        "playbackHostNameLike": {
          "type": "string"
        },
        "playbackHostNameMultiLikeAnd": {
          "type": "string"
        },
        "playbackHostNameMultiLikeOr": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "ACTIVE",
            "DISABLED",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        },
        "tagsLike": {
          "type": "string"
        },
        "tagsMultiLikeAnd": {
          "type": "string"
        },
        "tagsMultiLikeOr": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaEdgeServerFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEdgeServerBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaEdgeServerListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaStorageProfile"
          },
          "type": "array"
        }
      }
    },
    "KalturaEmailIngestionProfile": {
      "description": "",
      "properties": {
        "conversionProfile2Id": {
          "type": "integer"
        },
        "createdAt": {
          "readOnly": true,
          "type": "string"
        },
        "defaultAdminTags": {
          "type": "string"
        },
        "defaultCategory": {
          "type": "string"
        },
        "defaultTags": {
          "type": "string"
        },
        "defaultUserId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "mailboxId": {
          "type": "string"
        },
        "maxAttachmentSizeKbytes": {
          "type": "integer"
        },
        "maxAttachmentsPerMail": {
          "type": "integer"
        },
        "moderationStatus": {
          "enum": [
            1,
            2,
            3,
            5,
            6
          ],
          "enumLabels": [
            "PENDING_MODERATION",
            "APPROVED",
            "REJECTED",
            "FLAGGED_FOR_REVIEW",
            "AUTO_APPROVED"
          ],
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "INACTIVE",
            "ACTIVE"
          ],
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaEmailNotificationCategoryRecipientJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEmailNotificationRecipientJobData"
        }
      ],
      "description": "Job Data representing the provider of recipients for a single categoryId\n ",
      "properties": {
        "categoryUserFilter": {
          "$ref": "#/definitions/KalturaCategoryUserFilter"
        }
      }
    },
    "KalturaEmailNotificationCategoryRecipientProvider": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEmailNotificationRecipientProvider"
        }
      ],
      "description": "API object which provides the recipients of category related notifications.\n ",
      "properties": {
        "categoryId": {
          "$ref": "#/definitions/KalturaStringValue"
        },
        "categoryUserFilter": {
          "$ref": "#/definitions/KalturaCategoryUserProviderFilter"
        }
      }
    },
    "KalturaEmailNotificationDispatchJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEventNotificationDispatchJobData"
        }
      ],
      "description": "",
      "properties": {
        "bcc": {
          "$ref": "#/definitions/KalturaEmailNotificationRecipientJobData"
        },
        "cc": {
          "$ref": "#/definitions/KalturaEmailNotificationRecipientJobData"
        },
        "confirmReadingTo": {
          "description": "Email address that a reading confirmation will be sent to",
          "type": "string"
        },
        "customHeaders": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        },
        "fromEmail": {
          "description": "Define the email sender email",
          "type": "string"
        },
        "fromName": {
          "description": "Define the email sender name",
          "type": "string"
        },
        "hostname": {
          "description": "Hostname to use in Message-Id and Received headers and as default HELO string. \n\t If empty, the value returned by SERVER_NAME is used or 'localhost.localdomain'.",
          "type": "string"
        },
        "messageID": {
          "description": "Sets the message ID to be used in the Message-Id header.\n\t If empty, a unique id will be generated.",
          "type": "string"
        },
        "priority": {
          "description": "Define the email priority",
          "enum": [
            1,
            3,
            5
          ],
          "enumLabels": [
            "HIGH",
            "NORMAL",
            "LOW"
          ],
          "type": "integer"
        },
        "replyTo": {
          "$ref": "#/definitions/KalturaEmailNotificationRecipientJobData"
        },
        "to": {
          "$ref": "#/definitions/KalturaEmailNotificationRecipientJobData"
        }
      }
    },
    "KalturaEmailNotificationParameter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEventNotificationParameter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaEmailNotificationRecipient": {
      "description": "",
      "properties": {
        "email": {
          "$ref": "#/definitions/KalturaStringValue"
        },
        "name": {
          "$ref": "#/definitions/KalturaStringValue"
        }
      }
    },
    "KalturaEmailNotificationRecipientJobData": {
      "abstract": true,
      "description": "Abstract class representing the final output recipients going into the batch mechanism\n ",
      "properties": {
        "providerType": {
          "description": "Provider type of the job data.",
          "enum": [
            "1",
            "2",
            "3"
          ],
          "enumLabels": [
            "STATIC_LIST",
            "CATEGORY",
            "USER"
          ],
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaEmailNotificationRecipientProvider": {
      "abstract": true,
      "description": "Abstract core class  which provides the recipients (to, CC, BCC) for an email notification\n ",
      "properties": {}
    },
    "KalturaEmailNotificationStaticRecipientJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEmailNotificationRecipientJobData"
        }
      ],
      "description": "JobData representing the static receipient array\n ",
      "properties": {
        "emailRecipients": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        }
      }
    },
    "KalturaEmailNotificationStaticRecipientProvider": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEmailNotificationRecipientProvider"
        }
      ],
      "description": "API class for recipient provider containing a static list of email recipients.\n ",
      "properties": {
        "emailRecipients": {
          "items": {
            "$ref": "#/definitions/KalturaEmailNotificationRecipient"
          },
          "type": "array"
        }
      }
    },
    "KalturaEmailNotificationTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEventNotificationTemplate"
        }
      ],
      "description": "",
      "properties": {
        "bcc": {
          "$ref": "#/definitions/KalturaEmailNotificationRecipientProvider"
        },
        "body": {
          "description": "Define the email body content",
          "type": "string"
        },
        "cc": {
          "$ref": "#/definitions/KalturaEmailNotificationRecipientProvider"
        },
        "confirmReadingTo": {
          "description": "Email address that a reading confirmation will be sent",
          "type": "string"
        },
        "customHeaders": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        },
        "format": {
          "description": "Define the email body format",
          "enum": [
            "1",
            "2"
          ],
          "enumLabels": [
            "HTML",
            "TEXT"
          ],
          "type": "string"
        },
        "fromEmail": {
          "description": "Define the email sender email",
          "type": "string"
        },
        "fromName": {
          "description": "Define the email sender name",
          "type": "string"
        },
        "hostname": {
          "description": "Hostname to use in Message-Id and Received headers and as default HELLO string. \n\t If empty, the value returned by SERVER_NAME is used or 'localhost.localdomain'.",
          "type": "string"
        },
        "messageID": {
          "description": "Sets the message ID to be used in the Message-Id header.\n\t If empty, a unique id will be generated.",
          "type": "string"
        },
        "priority": {
          "description": "Define the email priority",
          "enum": [
            1,
            3,
            5
          ],
          "enumLabels": [
            "HIGH",
            "NORMAL",
            "LOW"
          ],
          "type": "integer"
        },
        "replyTo": {
          "$ref": "#/definitions/KalturaEmailNotificationRecipientProvider"
        },
        "subject": {
          "description": "Define the email subject",
          "type": "string"
        },
        "to": {
          "$ref": "#/definitions/KalturaEmailNotificationRecipientProvider"
        }
      }
    },
    "KalturaEmailNotificationTemplateBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEventNotificationTemplateFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaEmailNotificationTemplateFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEmailNotificationTemplateBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaEmailNotificationUserRecipientJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEmailNotificationRecipientJobData"
        }
      ],
      "description": "JobData representing the dynamic user receipient array\n ",
      "properties": {
        "filter": {
          "$ref": "#/definitions/KalturaUserFilter"
        }
      }
    },
    "KalturaEmailNotificationUserRecipientProvider": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEmailNotificationRecipientProvider"
        }
      ],
      "description": "API class for recipient provider which constructs a dynamic list of recipients according to a user filter\n ",
      "properties": {
        "filter": {
          "$ref": "#/definitions/KalturaUserFilter"
        }
      }
    },
    "KalturaEndUserReportInputFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaReportInputFilter"
        }
      ],
      "description": "",
      "properties": {
        "ancestorPlaybackContext": {
          "type": "string"
        },
        "application": {
          "type": "string"
        },
        "playbackContext": {
          "type": "string"
        },
        "userIds": {
          "type": "string"
        }
      }
    },
    "KalturaEntryCaptionAssetSearchItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSearchItem"
        }
      ],
      "description": "",
      "properties": {
        "contentLike": {
          "type": "string"
        },
        "contentMultiLikeAnd": {
          "type": "string"
        },
        "contentMultiLikeOr": {
          "type": "string"
        }
      }
    },
    "KalturaEntryContext": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaContext"
        }
      ],
      "description": "",
      "properties": {
        "entryId": {
          "description": "The entry ID in the context of which the playlist should be built",
          "type": "string"
        },
        "followEntryRedirect": {
          "description": "Is this a redirected entry followup?",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaEntryContextDataParams": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAccessControlScope"
        }
      ],
      "description": "Object which contains contextual entry-related data.\n ",
      "properties": {
        "flavorAssetId": {
          "description": "Id of the current flavor.",
          "type": "string"
        },
        "flavorTags": {
          "description": "The tags of the flavors that should be used for playback.",
          "type": "string"
        },
        "mediaProtocol": {
          "description": "Protocol of the specific media object.",
          "type": "string"
        },
        "streamerType": {
          "description": "Playback streamer type: RTMP, HTTP, appleHttps, rtsp, sl.",
          "type": "string"
        }
      }
    },
    "KalturaEntryContextDataResult": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaContextDataResult"
        }
      ],
      "description": "",
      "properties": {
        "accessControlActions": {
          "items": {
            "$ref": "#/definitions/KalturaRuleAction"
          },
          "type": "array"
        },
        "accessControlMessages": {
          "items": {
            "$ref": "#/definitions/KalturaString"
          },
          "type": "array"
        },
        "flavorAssets": {
          "items": {
            "$ref": "#/definitions/KalturaFlavorAsset"
          },
          "type": "array"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "isCountryRestricted": {
          "type": "boolean"
        },
        "isIpAddressRestricted": {
          "type": "boolean"
        },
        "isScheduledNow": {
          "type": "boolean"
        },
        "isSessionRestricted": {
          "type": "boolean"
        },
        "isSiteRestricted": {
          "type": "boolean"
        },
        "isUserAgentRestricted": {
          "type": "boolean"
        },
        "mediaProtocol": {
          "description": "http/https, rtmp/rtmpe",
          "type": "string"
        },
        "pluginData": {
          "items": {
            "$ref": "#/definitions/KalturaPluginData"
          },
          "type": "array"
        },
        "previewLength": {
          "type": "integer"
        },
        "storageProfilesXML": {
          "type": "string"
        },
        "streamerType": {
          "description": "http/rtmp/hdnetwork",
          "type": "string"
        }
      }
    },
    "KalturaEntryCuePointSearchFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSearchItem"
        }
      ],
      "description": "",
      "properties": {
        "cuePointSubTypeEqual": {
          "type": "integer"
        },
        "cuePointTypeIn": {
          "type": "string"
        },
        "cuePointsFreeText": {
          "type": "string"
        }
      }
    },
    "KalturaEntryDistribution": {
      "description": "",
      "properties": {
        "assetIds": {
          "description": "Comma separated asset ids",
          "type": "string"
        },
        "createdAt": {
          "description": "Entry distribution creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "dirtyStatus": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "enumLabels": [
            "NONE",
            "SUBMIT_REQUIRED",
            "DELETE_REQUIRED",
            "UPDATE_REQUIRED",
            "ENABLE_REQUIRED",
            "DISABLE_REQUIRED"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "distributionProfileId": {
          "type": "integer"
        },
        "entryId": {
          "type": "string"
        },
        "errorDescription": {
          "readOnly": true,
          "type": "string"
        },
        "errorNumber": {
          "readOnly": true,
          "type": "integer"
        },
        "errorType": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "enumLabels": [
            "APP",
            "RUNTIME",
            "HTTP",
            "CURL",
            "KALTURA_API",
            "KALTURA_CLIENT"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "flavorAssetIds": {
          "description": "Comma separated flavor asset ids",
          "type": "string"
        },
        "hasDeleteResultsLog": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "hasDeleteSentDataLog": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "hasSubmitResultsLog": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "hasSubmitSentDataLog": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "hasUpdateResultsLog": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "hasUpdateSentDataLog": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "Auto generated unique id",
          "readOnly": true,
          "type": "integer"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "plays": {
          "description": "The plays as retrieved from the remote destination reports",
          "readOnly": true,
          "type": "integer"
        },
        "remoteId": {
          "description": "The id as returned from the distributed destination",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "enumLabels": [
            "PENDING",
            "QUEUED",
            "READY",
            "DELETED",
            "SUBMITTING",
            "UPDATING",
            "DELETING",
            "ERROR_SUBMITTING",
            "ERROR_UPDATING",
            "ERROR_DELETING",
            "REMOVED",
            "IMPORT_SUBMITTING",
            "IMPORT_UPDATING"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "submittedAt": {
          "description": "Entry distribution submission date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "sunStatus": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "BEFORE_SUNRISE",
            "AFTER_SUNRISE",
            "AFTER_SUNSET"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "sunrise": {
          "description": "Entry distribution publish time as Unix timestamp (In seconds)",
          "type": "integer"
        },
        "sunset": {
          "description": "Entry distribution un-publish time as Unix timestamp (In seconds)",
          "type": "integer"
        },
        "thumbAssetIds": {
          "description": "Comma separated thumbnail asset ids",
          "type": "string"
        },
        "updatedAt": {
          "description": "Entry distribution last update date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "validationErrors": {
          "items": {
            "$ref": "#/definitions/KalturaDistributionValidationError"
          },
          "type": "array"
        },
        "views": {
          "description": "The views as retrieved from the remote destination reports",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaEntryDistributionBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "dirtyStatusEqual": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "enumLabels": [
            "NONE",
            "SUBMIT_REQUIRED",
            "DELETE_REQUIRED",
            "UPDATE_REQUIRED",
            "ENABLE_REQUIRED",
            "DISABLE_REQUIRED"
          ],
          "type": "integer"
        },
        "dirtyStatusIn": {
          "type": "string"
        },
        "distributionProfileIdEqual": {
          "type": "integer"
        },
        "distributionProfileIdIn": {
          "type": "string"
        },
        "entryIdEqual": {
          "type": "string"
        },
        "entryIdIn": {
          "type": "string"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "enumLabels": [
            "PENDING",
            "QUEUED",
            "READY",
            "DELETED",
            "SUBMITTING",
            "UPDATING",
            "DELETING",
            "ERROR_SUBMITTING",
            "ERROR_UPDATING",
            "ERROR_DELETING",
            "REMOVED",
            "IMPORT_SUBMITTING",
            "IMPORT_UPDATING"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "submittedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "submittedAtLessThanOrEqual": {
          "type": "integer"
        },
        "sunriseGreaterThanOrEqual": {
          "type": "integer"
        },
        "sunriseLessThanOrEqual": {
          "type": "integer"
        },
        "sunsetGreaterThanOrEqual": {
          "type": "integer"
        },
        "sunsetLessThanOrEqual": {
          "type": "integer"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaEntryDistributionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEntryDistributionBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaEntryDistributionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaEntryDistribution"
          },
          "type": "array"
        }
      }
    },
    "KalturaEntryIdentifier": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaObjectIdentifier"
        }
      ],
      "description": "",
      "properties": {
        "identifier": {
          "description": "Identifier of the object",
          "enum": [
            "id",
            "referenceId"
          ],
          "enumLabels": [
            "ID",
            "REFERENCE_ID"
          ],
          "type": "string"
        }
      }
    },
    "KalturaEntryLiveStats": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveStats"
        }
      ],
      "description": "",
      "properties": {
        "entryId": {
          "type": "string"
        },
        "peakAudience": {
          "type": "integer"
        },
        "peakDvrAudience": {
          "type": "integer"
        }
      }
    },
    "KalturaEntryReferrerLiveStats": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEntryLiveStats"
        }
      ],
      "description": "",
      "properties": {
        "referrer": {
          "type": "string"
        }
      }
    },
    "KalturaEntryReplacementOptions": {
      "description": "Advanced configuration for entry replacement process\n ",
      "properties": {
        "keepManualThumbnails": {
          "description": "If true manually created thumbnails will not be deleted on entry replacement",
          "type": "integer"
        }
      }
    },
    "KalturaEntryResource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaContentResource"
        }
      ],
      "description": "Used to ingest media that is already ingested to Kaltura system as a different entry in the past, the new created flavor asset will be ready immediately using a file sync of link type that will point to the existing file sync of the existing entry.\n ",
      "properties": {
        "entryId": {
          "description": "ID of the source entry",
          "type": "string"
        },
        "flavorParamsId": {
          "description": "ID of the source flavor params, set to null to use the source flavor",
          "type": "integer"
        }
      }
    },
    "KalturaEvalBooleanField": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBooleanField"
        }
      ],
      "description": "Evaluates PHP statement, depends on the execution context\n ",
      "properties": {
        "code": {
          "description": "PHP code",
          "type": "string"
        }
      }
    },
    "KalturaEvalStringField": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStringField"
        }
      ],
      "description": "Evaluates PHP statement, depends on the execution context\n ",
      "properties": {
        "code": {
          "description": "PHP code",
          "type": "string"
        }
      }
    },
    "KalturaEventCondition": {
      "abstract": true,
      "description": "",
      "properties": {}
    },
    "KalturaEventCuePoint": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCuePoint"
        }
      ],
      "description": "",
      "properties": {
        "eventType": {
          "enum": [
            "1",
            "2"
          ],
          "enumLabels": [
            "BROADCAST_START",
            "BROADCAST_END"
          ],
          "type": "string"
        }
      }
    },
    "KalturaEventCuePointBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCuePointFilter"
        }
      ],
      "description": "",
      "properties": {
        "eventTypeEqual": {
          "enum": [
            "1",
            "2"
          ],
          "enumLabels": [
            "BROADCAST_START",
            "BROADCAST_END"
          ],
          "type": "string"
        },
        "eventTypeIn": {
          "type": "string"
        }
      }
    },
    "KalturaEventCuePointFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEventCuePointBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaEventFieldCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "",
      "properties": {
        "field": {
          "$ref": "#/definitions/KalturaBooleanField"
        }
      }
    },
    "KalturaEventNotificationArrayParameter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEventNotificationParameter"
        }
      ],
      "description": "",
      "properties": {
        "allowedValues": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "values": {
          "items": {
            "$ref": "#/definitions/KalturaString"
          },
          "type": "array"
        }
      }
    },
    "KalturaEventNotificationDispatchJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "contentParameters": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        },
        "templateId": {
          "type": "integer"
        }
      }
    },
    "KalturaEventNotificationParameter": {
      "description": "",
      "properties": {
        "description": {
          "type": "string"
        },
        "key": {
          "description": "The key in the subject and body to be replaced with the dynamic value",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/KalturaStringValue"
        }
      }
    },
    "KalturaEventNotificationScope": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaScope"
        }
      ],
      "description": "",
      "properties": {
        "objectId": {
          "type": "string"
        },
        "scopeObjectType": {
          "enum": [
            "adCuePointEventNotifications.AdCuePoint",
            "annotationEventNotifications.Annotation",
            "captionAssetEventNotifications.CaptionAsset",
            "codeCuePointEventNotifications.CodeCuePoint",
            "contentDistributionEventNotifications.DistributionProfile",
            "contentDistributionEventNotifications.EntryDistribution",
            "cuePointEventNotifications.CuePoint",
            "dropFolderEventNotifications.DropFolder",
            "dropFolderEventNotifications.DropFolderFile",
            "metadataEventNotifications.Metadata",
            "1",
            "2",
            "3",
            "4",
            "5",
            "8",
            "9",
            "10",
            "11",
            "12",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37"
          ],
          "enumLabels": [
            "AD_CUE_POINT",
            "ANNOTATION",
            "CAPTION_ASSET",
            "CODE_CUE_POINT",
            "DISTRIBUTION_PROFILE",
            "ENTRY_DISTRIBUTION",
            "CUE_POINT",
            "DROP_FOLDER",
            "DROP_FOLDER_FILE",
            "METADATA",
            "ENTRY",
            "CATEGORY",
            "ASSET",
            "FLAVORASSET",
            "THUMBASSET",
            "KUSER",
            "ACCESSCONTROL",
            "BATCHJOB",
            "BULKUPLOADRESULT",
            "CATEGORYKUSER",
            "CONVERSIONPROFILE2",
            "FLAVORPARAMS",
            "FLAVORPARAMSCONVERSIONPROFILE",
            "FLAVORPARAMSOUTPUT",
            "GENERICSYNDICATIONFEED",
            "KUSERTOUSERROLE",
            "PARTNER",
            "PERMISSION",
            "PERMISSIONITEM",
            "PERMISSIONTOPERMISSIONITEM",
            "SCHEDULER",
            "SCHEDULERCONFIG",
            "SCHEDULERSTATUS",
            "SCHEDULERWORKER",
            "STORAGEPROFILE",
            "SYNDICATIONFEED",
            "THUMBPARAMS",
            "THUMBPARAMSOUTPUT",
            "UPLOADTOKEN",
            "USERLOGINDATA",
            "USERROLE",
            "WIDGET",
            "CATEGORYENTRY"
          ],
          "type": "string"
        }
      }
    },
    "KalturaEventNotificationTemplate": {
      "description": "",
      "properties": {
        "automaticDispatchEnabled": {
          "description": "Define that the template could be dispatched automatically by the system",
          "type": "boolean"
        },
        "contentParameters": {
          "items": {
            "$ref": "#/definitions/KalturaEventNotificationParameter"
          },
          "type": "array"
        },
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "eventConditions": {
          "items": {
            "$ref": "#/definitions/KalturaCondition"
          },
          "type": "array"
        },
        "eventObjectType": {
          "description": "Define the object that raied the event that should trigger this notification",
          "enum": [
            "adCuePointEventNotifications.AdCuePoint",
            "annotationEventNotifications.Annotation",
            "captionAssetEventNotifications.CaptionAsset",
            "codeCuePointEventNotifications.CodeCuePoint",
            "contentDistributionEventNotifications.DistributionProfile",
            "contentDistributionEventNotifications.EntryDistribution",
            "cuePointEventNotifications.CuePoint",
            "dropFolderEventNotifications.DropFolder",
            "dropFolderEventNotifications.DropFolderFile",
            "metadataEventNotifications.Metadata",
            "1",
            "2",
            "3",
            "4",
            "5",
            "8",
            "9",
            "10",
            "11",
            "12",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37"
          ],
          "enumLabels": [
            "AD_CUE_POINT",
            "ANNOTATION",
            "CAPTION_ASSET",
            "CODE_CUE_POINT",
            "DISTRIBUTION_PROFILE",
            "ENTRY_DISTRIBUTION",
            "CUE_POINT",
            "DROP_FOLDER",
            "DROP_FOLDER_FILE",
            "METADATA",
            "ENTRY",
            "CATEGORY",
            "ASSET",
            "FLAVORASSET",
            "THUMBASSET",
            "KUSER",
            "ACCESSCONTROL",
            "BATCHJOB",
            "BULKUPLOADRESULT",
            "CATEGORYKUSER",
            "CONVERSIONPROFILE2",
            "FLAVORPARAMS",
            "FLAVORPARAMSCONVERSIONPROFILE",
            "FLAVORPARAMSOUTPUT",
            "GENERICSYNDICATIONFEED",
            "KUSERTOUSERROLE",
            "PARTNER",
            "PERMISSION",
            "PERMISSIONITEM",
            "PERMISSIONTOPERMISSIONITEM",
            "SCHEDULER",
            "SCHEDULERCONFIG",
            "SCHEDULERSTATUS",
            "SCHEDULERWORKER",
            "STORAGEPROFILE",
            "SYNDICATIONFEED",
            "THUMBPARAMS",
            "THUMBPARAMSOUTPUT",
            "UPLOADTOKEN",
            "USERLOGINDATA",
            "USERROLE",
            "WIDGET",
            "CATEGORYENTRY"
          ],
          "type": "string"
        },
        "eventType": {
          "description": "Define the event that should trigger this notification",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13"
          ],
          "enumLabels": [
            "BATCH_JOB_STATUS",
            "OBJECT_ADDED",
            "OBJECT_CHANGED",
            "OBJECT_COPIED",
            "OBJECT_CREATED",
            "OBJECT_DATA_CHANGED",
            "OBJECT_DELETED",
            "OBJECT_ERASED",
            "OBJECT_READY_FOR_REPLACMENT",
            "OBJECT_SAVED",
            "OBJECT_UPDATED",
            "OBJECT_REPLACED",
            "OBJECT_READY_FOR_INDEX"
          ],
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "manualDispatchEnabled": {
          "description": "Define that the template could be dispatched manually from the API",
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "ACTIVE",
            "DELETED"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "systemName": {
          "type": "string"
        },
        "type": {
          "enum": [
            "emailNotification.Email",
            "httpNotification.Http"
          ],
          "enumLabels": [
            "EMAIL",
            "HTTP"
          ],
          "type": "string"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "userParameters": {
          "items": {
            "$ref": "#/definitions/KalturaEventNotificationParameter"
          },
          "type": "array"
        }
      }
    },
    "KalturaEventNotificationTemplateBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "ACTIVE",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        },
        "typeEqual": {
          "enum": [
            "emailNotification.Email",
            "httpNotification.Http"
          ],
          "enumLabels": [
            "EMAIL",
            "HTTP"
          ],
          "type": "string"
        },
        "typeIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaEventNotificationTemplateFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEventNotificationTemplateBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaEventNotificationTemplateListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaEventNotificationTemplate"
          },
          "type": "array"
        }
      }
    },
    "KalturaEventObjectChangedCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "",
      "properties": {
        "modifiedColumns": {
          "description": "Comma seperated column names to be tested",
          "type": "string"
        }
      }
    },
    "KalturaExecuteMetadataXsltObjectTask": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaObjectTask"
        }
      ],
      "description": "",
      "properties": {
        "metadataObjectType": {
          "description": "Metadata object type to lookup the metadata object",
          "enum": [
            "adCuePointMetadata.AdCuePoint",
            "annotationMetadata.Annotation",
            "codeCuePointMetadata.CodeCuePoint",
            "thumbCuePointMetadata.thumbCuePoint",
            "1",
            "2",
            "3",
            "4",
            "5"
          ],
          "enumLabels": [
            "AD_CUE_POINT",
            "ANNOTATION",
            "CODE_CUE_POINT",
            "THUMB_CUE_POINT",
            "ENTRY",
            "CATEGORY",
            "USER",
            "PARTNER",
            "DYNAMIC_OBJECT"
          ],
          "type": "string"
        },
        "metadataProfileId": {
          "description": "Metadata profile id to lookup the metadata object",
          "type": "integer"
        },
        "xslt": {
          "description": "The XSLT to execute",
          "type": "string"
        }
      }
    },
    "KalturaExtendingItemMrssParameter": {
      "description": "",
      "properties": {
        "extensionMode": {
          "description": "Mode of extension - append to MRSS or replace the xpath content.",
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "APPEND",
            "REPLACE"
          ],
          "type": "integer"
        },
        "identifier": {
          "$ref": "#/definitions/KalturaObjectIdentifier"
        },
        "xpath": {
          "description": "XPath for the extending item",
          "type": "string"
        }
      }
    },
    "KalturaExternalMediaEntry": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMediaEntry"
        }
      ],
      "description": "",
      "properties": {
        "assetParamsIds": {
          "description": "Comma separated asset params ids that exists for this external media entry",
          "readOnly": true,
          "type": "string"
        },
        "externalSourceType": {
          "description": "The source type of the external media",
          "enum": [
            "InterCall",
            "YouTube"
          ],
          "enumLabels": [
            "INTERCALL",
            "YOUTUBE"
          ],
          "type": "string"
        }
      }
    },
    "KalturaExternalMediaEntryBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMediaEntryFilter"
        }
      ],
      "description": "",
      "properties": {
        "assetParamsIdsMatchAnd": {
          "type": "string"
        },
        "assetParamsIdsMatchOr": {
          "type": "string"
        },
        "externalSourceTypeEqual": {
          "enum": [
            "InterCall",
            "YouTube"
          ],
          "enumLabels": [
            "INTERCALL",
            "YOUTUBE"
          ],
          "type": "string"
        },
        "externalSourceTypeIn": {
          "type": "string"
        }
      }
    },
    "KalturaExternalMediaEntryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaExternalMediaEntryBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaExternalMediaEntryListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaExternalMediaEntry"
          },
          "type": "array"
        }
      }
    },
    "KalturaExtractMediaJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaConvartableJobData"
        }
      ],
      "description": "",
      "properties": {
        "flavorAssetId": {
          "type": "string"
        }
      }
    },
    "KalturaFeatureStatus": {
      "description": "",
      "properties": {
        "type": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "enumLabels": [
            "LOCK_CATEGORY",
            "CATEGORY",
            "CATEGORY_ENTRY",
            "ENTRY",
            "CATEGORY_USER",
            "USER"
          ],
          "type": "integer"
        },
        "value": {
          "type": "integer"
        }
      }
    },
    "KalturaFeatureStatusListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaFeatureStatus"
          },
          "type": "array"
        }
      }
    },
    "KalturaFeedDropFolder": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDropFolder"
        }
      ],
      "description": "",
      "properties": {
        "feedItemInfo": {
          "$ref": "#/definitions/KalturaFeedItemInfo"
        },
        "itemHandlingLimit": {
          "type": "integer"
        }
      }
    },
    "KalturaFeedDropFolderFile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDropFolderFile"
        }
      ],
      "description": "",
      "properties": {
        "feedXmlPath": {
          "description": "Path of the original Feed content XML",
          "type": "string"
        },
        "hash": {
          "description": "MD5 or Sha1 encrypted string",
          "type": "string"
        }
      }
    },
    "KalturaFeedItemInfo": {
      "description": "",
      "properties": {
        "contentBitrateAttributeName": {
          "type": "string"
        },
        "itemContentBitrateXPath": {
          "type": "string"
        },
        "itemContentFileSizeXPath": {
          "type": "string"
        },
        "itemContentUrlXPath": {
          "type": "string"
        },
        "itemContentXpath": {
          "type": "string"
        },
        "itemHashXPath": {
          "type": "string"
        },
        "itemPublishDateXPath": {
          "type": "string"
        },
        "itemUniqueIdentifierXPath": {
          "type": "string"
        },
        "itemXPath": {
          "type": "string"
        }
      }
    },
    "KalturaFieldCompareCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCompareCondition"
        }
      ],
      "description": "",
      "properties": {
        "field": {
          "$ref": "#/definitions/KalturaIntegerField"
        }
      }
    },
    "KalturaFieldMatchCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMatchCondition"
        }
      ],
      "description": "",
      "properties": {
        "field": {
          "$ref": "#/definitions/KalturaStringField"
        }
      }
    },
    "KalturaFileAsset": {
      "description": "",
      "properties": {
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "fileAssetObjectType": {
          "enum": [
            "2"
          ],
          "enumLabels": [
            "UI_CONF"
          ],
          "type": "string"
        },
        "fileExt": {
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "objectId": {
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4"
          ],
          "enumLabels": [
            "PENDING",
            "UPLOADING",
            "READY",
            "DELETED",
            "ERROR"
          ],
          "readOnly": true,
          "type": "string"
        },
        "systemName": {
          "type": "string"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "version": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaFileAssetBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "fileAssetObjectTypeEqual": {
          "enum": [
            "2"
          ],
          "enumLabels": [
            "UI_CONF"
          ],
          "type": "string"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "objectIdEqual": {
          "type": "string"
        },
        "objectIdIn": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "statusEqual": {
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4"
          ],
          "enumLabels": [
            "PENDING",
            "UPLOADING",
            "READY",
            "DELETED",
            "ERROR"
          ],
          "type": "string"
        },
        "statusIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaFileAssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFileAssetBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaFileAssetListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaFileAsset"
          },
          "type": "array"
        }
      }
    },
    "KalturaFileSync": {
      "description": "",
      "properties": {
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "dc": {
          "readOnly": true,
          "type": "string"
        },
        "fileContent": {
          "readOnly": true,
          "type": "string"
        },
        "fileDiscSize": {
          "readOnly": true,
          "type": "number"
        },
        "fileObjectType": {
          "enum": [
            "contentDistribution.DistributionProfile",
            "contentDistribution.EntryDistribution",
            "contentDistribution.GenericDistributionAction",
            "emailNotification.EmailNotificationTemplate",
            "httpNotification.HttpNotificationTemplate",
            "1",
            "2",
            "3",
            "4",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9"
          ],
          "enumLabels": [
            "DISTRIBUTION_PROFILE",
            "ENTRY_DISTRIBUTION",
            "GENERIC_DISTRIBUTION_ACTION",
            "EMAIL_NOTIFICATION_TEMPLATE",
            "HTTP_NOTIFICATION_TEMPLATE",
            "ENTRY",
            "UICONF",
            "BATCHJOB",
            "ASSET",
            "FLAVOR_ASSET",
            "METADATA",
            "METADATA_PROFILE",
            "SYNDICATION_FEED",
            "CONVERSION_PROFILE",
            "FILE_ASSET"
          ],
          "readOnly": true,
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "fileRoot": {
          "type": "string"
        },
        "fileSize": {
          "readOnly": true,
          "type": "number"
        },
        "fileType": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "FILE",
            "LINK",
            "URL"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "fileUrl": {
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "isCurrentDc": {
          "readOnly": true,
          "type": "boolean"
        },
        "isDir": {
          "readOnly": true,
          "type": "boolean"
        },
        "linkCount": {
          "readOnly": true,
          "type": "integer"
        },
        "linkedId": {
          "readOnly": true,
          "type": "integer"
        },
        "objectId": {
          "readOnly": true,
          "type": "string"
        },
        "objectSubType": {
          "readOnly": true,
          "type": "integer"
        },
        "original": {
          "readOnly": true,
          "type": "integer"
        },
        "originalId": {
          "readOnly": true,
          "type": "integer"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "readyAt": {
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "enum": [
            -1,
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "ERROR",
            "PENDING",
            "READY",
            "DELETED",
            "PURGED"
          ],
          "type": "integer"
        },
        "syncTime": {
          "readOnly": true,
          "type": "integer"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "version": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaFileSyncBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "dcEqual": {
          "type": "string"
        },
        "dcIn": {
          "type": "string"
        },
        "fileObjectTypeEqual": {
          "enum": [
            "contentDistribution.DistributionProfile",
            "contentDistribution.EntryDistribution",
            "contentDistribution.GenericDistributionAction",
            "emailNotification.EmailNotificationTemplate",
            "httpNotification.HttpNotificationTemplate",
            "1",
            "2",
            "3",
            "4",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9"
          ],
          "enumLabels": [
            "DISTRIBUTION_PROFILE",
            "ENTRY_DISTRIBUTION",
            "GENERIC_DISTRIBUTION_ACTION",
            "EMAIL_NOTIFICATION_TEMPLATE",
            "HTTP_NOTIFICATION_TEMPLATE",
            "ENTRY",
            "UICONF",
            "BATCHJOB",
            "ASSET",
            "FLAVOR_ASSET",
            "METADATA",
            "METADATA_PROFILE",
            "SYNDICATION_FEED",
            "CONVERSION_PROFILE",
            "FILE_ASSET"
          ],
          "type": "string"
        },
        "fileObjectTypeIn": {
          "type": "string"
        },
        "fileSizeGreaterThanOrEqual": {
          "type": "number"
        },
        "fileSizeLessThanOrEqual": {
          "type": "number"
        },
        "fileTypeEqual": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "FILE",
            "LINK",
            "URL"
          ],
          "type": "integer"
        },
        "fileTypeIn": {
          "type": "string"
        },
        "linkCountGreaterThanOrEqual": {
          "type": "integer"
        },
        "linkCountLessThanOrEqual": {
          "type": "integer"
        },
        "linkedIdEqual": {
          "type": "integer"
        },
        "objectIdEqual": {
          "type": "string"
        },
        "objectIdIn": {
          "type": "string"
        },
        "objectSubTypeEqual": {
          "type": "integer"
        },
        "objectSubTypeIn": {
          "type": "string"
        },
        "originalEqual": {
          "type": "integer"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "readyAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "readyAtLessThanOrEqual": {
          "type": "integer"
        },
        "statusEqual": {
          "enum": [
            -1,
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "ERROR",
            "PENDING",
            "READY",
            "DELETED",
            "PURGED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "syncTimeGreaterThanOrEqual": {
          "type": "integer"
        },
        "syncTimeLessThanOrEqual": {
          "type": "integer"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        },
        "versionEqual": {
          "type": "string"
        },
        "versionIn": {
          "type": "string"
        }
      }
    },
    "KalturaFileSyncDescriptor": {
      "description": "",
      "properties": {
        "fileSyncLocalPath": {
          "type": "string"
        },
        "fileSyncObjectSubType": {
          "type": "integer"
        },
        "fileSyncRemoteUrl": {
          "description": "The translated path as used by the scheduler",
          "type": "string"
        }
      }
    },
    "KalturaFileSyncFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFileSyncBaseFilter"
        }
      ],
      "description": "",
      "properties": {
        "currentDc": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaFileSyncListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaFileSync"
          },
          "type": "array"
        }
      }
    },
    "KalturaFileSyncResource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaContentResource"
        }
      ],
      "description": "Used to ingest media that is already ingested to Kaltura system as a different file in the past, the new created flavor asset will be ready immediately using a file sync of link type that will point to the existing file sync.\n ",
      "properties": {
        "fileSyncObjectType": {
          "description": "The object type of the file sync object",
          "type": "integer"
        },
        "objectId": {
          "description": "The object id of the file sync object",
          "type": "string"
        },
        "objectSubType": {
          "description": "The object sub-type of the file sync object",
          "type": "integer"
        },
        "version": {
          "description": "The version of the file sync object",
          "type": "string"
        }
      }
    },
    "KalturaFilter": {
      "abstract": true,
      "description": "",
      "properties": {
        "advancedSearch": {
          "$ref": "#/definitions/KalturaSearchItem"
        },
        "orderBy": {
          "type": "string"
        }
      }
    },
    "KalturaFilterPager": {
      "description": "The KalturaFilterPager object enables paging management to be applied upon service list actions. \n ",
      "properties": {
        "pageIndex": {
          "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
          "type": "integer"
        },
        "pageSize": {
          "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
          "type": "integer"
        }
      }
    },
    "KalturaFlattenJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaFlavorAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAsset"
        }
      ],
      "description": "",
      "properties": {
        "bitrate": {
          "description": "The overall bitrate (in KBits) of the Flavor Asset",
          "readOnly": true,
          "type": "integer"
        },
        "containerFormat": {
          "description": "The container format",
          "readOnly": true,
          "type": "string"
        },
        "flavorParamsId": {
          "description": "The Flavor Params used to create this Flavor Asset",
          "type": "integer"
        },
        "frameRate": {
          "description": "The frame rate (in FPS) of the Flavor Asset",
          "readOnly": true,
          "type": "number"
        },
        "height": {
          "description": "The height of the Flavor Asset",
          "readOnly": true,
          "type": "integer"
        },
        "isOriginal": {
          "description": "True if this Flavor Asset is the original source",
          "readOnly": true,
          "type": "boolean"
        },
        "isWeb": {
          "description": "True if this Flavor Asset is playable in KDP",
          "readOnly": true,
          "type": "boolean"
        },
        "status": {
          "description": "The status of the Flavor Asset",
          "enum": [
            -1,
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ],
          "enumLabels": [
            "ERROR",
            "QUEUED",
            "CONVERTING",
            "READY",
            "DELETED",
            "NOT_APPLICABLE",
            "TEMP",
            "WAIT_FOR_CONVERT",
            "IMPORTING",
            "VALIDATING",
            "EXPORTING"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "videoCodecId": {
          "description": "The video codec",
          "readOnly": true,
          "type": "string"
        },
        "width": {
          "description": "The width of the Flavor Asset",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaFlavorAssetBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "description": "",
      "properties": {
        "flavorParamsIdEqual": {
          "type": "integer"
        },
        "flavorParamsIdIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            -1,
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ],
          "enumLabels": [
            "ERROR",
            "QUEUED",
            "CONVERTING",
            "READY",
            "DELETED",
            "NOT_APPLICABLE",
            "TEMP",
            "WAIT_FOR_CONVERT",
            "IMPORTING",
            "VALIDATING",
            "EXPORTING"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "statusNotIn": {
          "type": "string"
        }
      }
    },
    "KalturaFlavorAssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorAssetBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaFlavorAssetListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaFlavorAsset"
          },
          "type": "array"
        }
      }
    },
    "KalturaFlavorAssetUrlOptions": {
      "description": "",
      "properties": {
        "fileName": {
          "description": "The name of the downloaded file",
          "type": "string"
        }
      }
    },
    "KalturaFlavorAssetWithParams": {
      "description": "",
      "properties": {
        "entryId": {
          "description": "The entry id",
          "type": "string"
        },
        "flavorAsset": {
          "$ref": "#/definitions/KalturaFlavorAsset"
        },
        "flavorParams": {
          "$ref": "#/definitions/KalturaFlavorParams"
        }
      }
    },
    "KalturaFlavorParams": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetParams"
        }
      ],
      "description": "",
      "properties": {
        "anamorphicPixels": {
          "type": "number"
        },
        "aspectRatioProcessingMode": {
          "type": "integer"
        },
        "audioBitrate": {
          "description": "The audio bitrate (in KBits) of the Flavor Params",
          "type": "integer"
        },
        "audioChannels": {
          "description": "The number of audio channels for \"downmixing\"",
          "type": "integer"
        },
        "audioCodec": {
          "description": "The audio codec of the Flavor Params",
          "enum": [
            "",
            "aac",
            "aache",
            "ac3",
            "amrnb",
            "copy",
            "mp3",
            "mpeg2",
            "pcm",
            "vorbis",
            "wma",
            "wmapro"
          ],
          "enumLabels": [
            "NONE",
            "AAC",
            "AACHE",
            "AC3",
            "AMRNB",
            "COPY",
            "MP3",
            "MPEG2",
            "PCM",
            "VORBIS",
            "WMA",
            "WMAPRO"
          ],
          "type": "string"
        },
        "audioSampleRate": {
          "description": "The audio sample rate of the Flavor Params",
          "type": "integer"
        },
        "clipDuration": {
          "type": "integer"
        },
        "clipOffset": {
          "type": "integer"
        },
        "conversionEngines": {
          "description": "The list of conversion engines (comma separated)",
          "type": "string"
        },
        "conversionEnginesExtraParams": {
          "description": "The list of conversion engines extra params (separated with \"|\")",
          "type": "string"
        },
        "deinterlice": {
          "type": "integer"
        },
        "engineVersion": {
          "type": "integer"
        },
        "forceFrameToMultiplication16": {
          "type": "integer"
        },
        "format": {
          "description": "The container format of the Flavor Params",
          "enum": [
            "3gp",
            "applehttp",
            "avi",
            "bmp",
            "copy",
            "flv",
            "hls",
            "isma",
            "ismv",
            "jpg",
            "m2ts",
            "m4v",
            "mkv",
            "mov",
            "mp3",
            "mp4",
            "mpeg",
            "mpegts",
            "mxf",
            "ogg",
            "ogv",
            "pdf",
            "png",
            "swf",
            "wav",
            "webm",
            "wma",
            "wmv",
            "wvm"
          ],
          "enumLabels": [
            "_3GP",
            "APPLEHTTP",
            "AVI",
            "BMP",
            "COPY",
            "FLV",
            "HLS",
            "ISMA",
            "ISMV",
            "JPG",
            "M2TS",
            "M4V",
            "MKV",
            "MOV",
            "MP3",
            "MP4",
            "MPEG",
            "MPEGTS",
            "MXF",
            "OGG",
            "OGV",
            "PDF",
            "PNG",
            "SWF",
            "WAV",
            "WEBM",
            "WMA",
            "WMV",
            "WVM"
          ],
          "type": "string"
        },
        "frameRate": {
          "description": "The frame rate of the Flavor Params",
          "type": "integer"
        },
        "gopSize": {
          "description": "The gop size of the Flavor Params",
          "type": "integer"
        },
        "height": {
          "description": "The desired height of the Flavor Params",
          "type": "integer"
        },
        "isAvoidForcedKeyFrames": {
          "type": "integer"
        },
        "isAvoidVideoShrinkBitrateToSource": {
          "type": "integer"
        },
        "isAvoidVideoShrinkFramesizeToSource": {
          "type": "integer"
        },
        "isCropIMX": {
          "type": "integer"
        },
        "isGopInSec": {
          "type": "integer"
        },
        "isVideoFrameRateForLowBrAppleHls": {
          "type": "integer"
        },
        "maxFrameRate": {
          "type": "integer"
        },
        "multiStream": {
          "type": "string"
        },
        "operators": {
          "type": "string"
        },
        "optimizationPolicy": {
          "type": "integer"
        },
        "rotate": {
          "type": "integer"
        },
        "twoPass": {
          "type": "boolean"
        },
        "videoBitrate": {
          "description": "The video bitrate (in KBits) of the Flavor Params",
          "type": "integer"
        },
        "videoBitrateTolerance": {
          "type": "integer"
        },
        "videoCodec": {
          "description": "The video codec of the Flavor Params",
          "enum": [
            "",
            "apch",
            "apcn",
            "apco",
            "apcs",
            "copy",
            "dnxhd",
            "dv",
            "flv",
            "h263",
            "h264",
            "h264b",
            "h264h",
            "h264m",
            "h265",
            "mpeg2",
            "mpeg4",
            "theora",
            "vp6",
            "vp8",
            "vp9",
            "wmv2",
            "wmv3",
            "wvc1a"
          ],
          "enumLabels": [
            "NONE",
            "APCH",
            "APCN",
            "APCO",
            "APCS",
            "COPY",
            "DNXHD",
            "DV",
            "FLV",
            "H263",
            "H264",
            "H264B",
            "H264H",
            "H264M",
            "H265",
            "MPEG2",
            "MPEG4",
            "THEORA",
            "VP6",
            "VP8",
            "VP9",
            "WMV2",
            "WMV3",
            "WVC1A"
          ],
          "type": "string"
        },
        "videoConstantBitrate": {
          "type": "integer"
        },
        "watermarkData": {
          "type": "string"
        },
        "width": {
          "description": "The desired width of the Flavor Params",
          "type": "integer"
        }
      }
    },
    "KalturaFlavorParamsBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetParamsFilter"
        }
      ],
      "description": "",
      "properties": {
        "formatEqual": {
          "enum": [
            "3gp",
            "applehttp",
            "avi",
            "bmp",
            "copy",
            "flv",
            "hls",
            "isma",
            "ismv",
            "jpg",
            "m2ts",
            "m4v",
            "mkv",
            "mov",
            "mp3",
            "mp4",
            "mpeg",
            "mpegts",
            "mxf",
            "ogg",
            "ogv",
            "pdf",
            "png",
            "swf",
            "wav",
            "webm",
            "wma",
            "wmv",
            "wvm"
          ],
          "enumLabels": [
            "_3GP",
            "APPLEHTTP",
            "AVI",
            "BMP",
            "COPY",
            "FLV",
            "HLS",
            "ISMA",
            "ISMV",
            "JPG",
            "M2TS",
            "M4V",
            "MKV",
            "MOV",
            "MP3",
            "MP4",
            "MPEG",
            "MPEGTS",
            "MXF",
            "OGG",
            "OGV",
            "PDF",
            "PNG",
            "SWF",
            "WAV",
            "WEBM",
            "WMA",
            "WMV",
            "WVM"
          ],
          "type": "string"
        }
      }
    },
    "KalturaFlavorParamsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaFlavorParamsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaFlavorParams"
          },
          "type": "array"
        }
      }
    },
    "KalturaFlavorParamsOutput": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParams"
        }
      ],
      "description": "",
      "properties": {
        "commandLinesStr": {
          "type": "string"
        },
        "flavorAssetId": {
          "type": "string"
        },
        "flavorAssetVersion": {
          "type": "string"
        },
        "flavorParamsId": {
          "type": "integer"
        },
        "flavorParamsVersion": {
          "type": "string"
        },
        "readyBehavior": {
          "type": "integer"
        }
      }
    },
    "KalturaFlavorParamsOutputBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsFilter"
        }
      ],
      "description": "",
      "properties": {
        "flavorAssetIdEqual": {
          "type": "string"
        },
        "flavorAssetVersionEqual": {
          "type": "string"
        },
        "flavorParamsIdEqual": {
          "type": "integer"
        },
        "flavorParamsVersionEqual": {
          "type": "string"
        }
      }
    },
    "KalturaFlavorParamsOutputFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsOutputBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaFlavorParamsOutputListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaFlavorParamsOutput"
          },
          "type": "array"
        }
      }
    },
    "KalturaFtpDropFolder": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRemoteDropFolder"
        }
      ],
      "description": "",
      "properties": {
        "host": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "KalturaFtpDropFolderBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRemoteDropFolderFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaFtpDropFolderFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFtpDropFolderBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaGenericDistributionJobProviderData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionJobProviderData"
        }
      ],
      "description": "",
      "properties": {
        "resultParseData": {
          "type": "string"
        },
        "resultParserType": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "XSL",
            "XPATH",
            "REGEX"
          ],
          "type": "integer"
        },
        "xml": {
          "type": "string"
        }
      }
    },
    "KalturaGenericDistributionProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionProfile"
        }
      ],
      "description": "",
      "properties": {
        "deleteAction": {
          "$ref": "#/definitions/KalturaGenericDistributionProfileAction"
        },
        "fetchReportAction": {
          "$ref": "#/definitions/KalturaGenericDistributionProfileAction"
        },
        "genericProviderId": {
          "type": "integer"
        },
        "submitAction": {
          "$ref": "#/definitions/KalturaGenericDistributionProfileAction"
        },
        "updateAction": {
          "$ref": "#/definitions/KalturaGenericDistributionProfileAction"
        },
        "updateRequiredEntryFields": {
          "type": "string"
        },
        "updateRequiredMetadataXPaths": {
          "type": "string"
        }
      }
    },
    "KalturaGenericDistributionProfileAction": {
      "description": "",
      "properties": {
        "ftpPassiveMode": {
          "type": "boolean"
        },
        "httpFieldName": {
          "type": "string"
        },
        "httpFileName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "protocol": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            10
          ],
          "enumLabels": [
            "FTP",
            "SCP",
            "SFTP",
            "HTTP",
            "HTTPS",
            "ASPERA"
          ],
          "type": "integer"
        },
        "serverPath": {
          "type": "string"
        },
        "serverUrl": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "KalturaGenericDistributionProfileBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionProfileFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaGenericDistributionProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaGenericDistributionProfileBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaGenericDistributionProvider": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionProvider"
        }
      ],
      "description": "",
      "properties": {
        "createdAt": {
          "description": "Generic distribution provider creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "editableFields": {
          "type": "string"
        },
        "id": {
          "description": "Auto generated",
          "readOnly": true,
          "type": "integer"
        },
        "isDefault": {
          "type": "boolean"
        },
        "mandatoryFields": {
          "type": "string"
        },
        "optionalFlavorParamsIds": {
          "type": "string"
        },
        "optionalThumbDimensions": {
          "items": {
            "$ref": "#/definitions/KalturaDistributionThumbDimensions"
          },
          "type": "array"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "requiredFlavorParamsIds": {
          "type": "string"
        },
        "requiredThumbDimensions": {
          "items": {
            "$ref": "#/definitions/KalturaDistributionThumbDimensions"
          },
          "type": "array"
        },
        "status": {
          "enum": [
            2,
            3
          ],
          "enumLabels": [
            "ACTIVE",
            "DELETED"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "updatedAt": {
          "description": "Generic distribution provider last update date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaGenericDistributionProviderAction": {
      "description": "",
      "properties": {
        "action": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "SUBMIT",
            "UPDATE",
            "DELETE",
            "FETCH_REPORT"
          ],
          "type": "integer"
        },
        "createdAt": {
          "description": "Generic distribution provider action creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "editableFields": {
          "type": "string"
        },
        "genericDistributionProviderId": {
          "type": "integer"
        },
        "id": {
          "description": "Auto generated",
          "readOnly": true,
          "type": "integer"
        },
        "mandatoryFields": {
          "type": "string"
        },
        "mrssTransformer": {
          "readOnly": true,
          "type": "string"
        },
        "mrssValidator": {
          "readOnly": true,
          "type": "string"
        },
        "protocol": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            10
          ],
          "enumLabels": [
            "FTP",
            "SCP",
            "SFTP",
            "HTTP",
            "HTTPS",
            "ASPERA"
          ],
          "type": "integer"
        },
        "remotePassword": {
          "type": "string"
        },
        "remotePath": {
          "type": "string"
        },
        "remoteUsername": {
          "type": "string"
        },
        "resultsParser": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "XSL",
            "XPATH",
            "REGEX"
          ],
          "type": "integer"
        },
        "resultsTransformer": {
          "readOnly": true,
          "type": "string"
        },
        "serverAddress": {
          "type": "string"
        },
        "status": {
          "enum": [
            2,
            3
          ],
          "enumLabels": [
            "ACTIVE",
            "DELETED"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "updatedAt": {
          "description": "Generic distribution provider action last update date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaGenericDistributionProviderActionBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "actionEqual": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "SUBMIT",
            "UPDATE",
            "DELETE",
            "FETCH_REPORT"
          ],
          "type": "integer"
        },
        "actionIn": {
          "type": "string"
        },
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "genericDistributionProviderIdEqual": {
          "type": "integer"
        },
        "genericDistributionProviderIdIn": {
          "type": "string"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaGenericDistributionProviderActionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaGenericDistributionProviderActionBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaGenericDistributionProviderActionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaGenericDistributionProviderAction"
          },
          "type": "array"
        }
      }
    },
    "KalturaGenericDistributionProviderBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionProviderFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "isDefaultEqual": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "isDefaultIn": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            2,
            3
          ],
          "enumLabels": [
            "ACTIVE",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaGenericDistributionProviderFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaGenericDistributionProviderBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaGenericDistributionProviderListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaGenericDistributionProvider"
          },
          "type": "array"
        }
      }
    },
    "KalturaGenericSyndicationFeed": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSyndicationFeed"
        }
      ],
      "description": "",
      "properties": {
        "feedDescription": {
          "description": "feed description",
          "type": "string"
        },
        "feedLandingPage": {
          "description": "feed landing page (i.e publisher website)",
          "type": "string"
        }
      }
    },
    "KalturaGenericSyndicationFeedBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSyndicationFeedFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaGenericSyndicationFeedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaGenericSyndicationFeedBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaGenericXsltSyndicationFeed": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaGenericSyndicationFeed"
        }
      ],
      "description": "",
      "properties": {
        "itemXpathsToExtend": {
          "items": {
            "$ref": "#/definitions/KalturaExtendingItemMrssParameter"
          },
          "type": "array"
        },
        "xslt": {
          "type": "string"
        }
      }
    },
    "KalturaGenericXsltSyndicationFeedBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaGenericSyndicationFeedFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaGenericXsltSyndicationFeedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaGenericXsltSyndicationFeedBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaGeoDistanceCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMatchCondition"
        }
      ],
      "description": "",
      "properties": {
        "geoCoderType": {
          "description": "The ip geo coder engine to be used",
          "enum": [
            "1"
          ],
          "enumLabels": [
            "KALTURA"
          ],
          "type": "string"
        }
      }
    },
    "KalturaGeoTimeLiveStats": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEntryLiveStats"
        }
      ],
      "description": "",
      "properties": {
        "city": {
          "$ref": "#/definitions/KalturaCoordinate"
        },
        "country": {
          "$ref": "#/definitions/KalturaCoordinate"
        }
      }
    },
    "KalturaGoogleVideoSyndicationFeed": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSyndicationFeed"
        }
      ],
      "description": "",
      "properties": {
        "adultContent": {
          "enum": [
            "No",
            "Yes"
          ],
          "enumLabels": [
            "NO",
            "YES"
          ],
          "type": "string"
        }
      }
    },
    "KalturaGoogleVideoSyndicationFeedBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSyndicationFeedFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaGoogleVideoSyndicationFeedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaGoogleVideoSyndicationFeedBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaGroupUser": {
      "description": "",
      "properties": {
        "createdAt": {
          "description": "Creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "groupId": {
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "ACTIVE",
            "DELETED"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "updatedAt": {
          "description": "Last update date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "KalturaGroupUserBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "groupIdEqual": {
          "type": "string"
        },
        "groupIdIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "ACTIVE",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        },
        "userIdEqual": {
          "type": "string"
        },
        "userIdIn": {
          "type": "string"
        }
      }
    },
    "KalturaGroupUserFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaGroupUserBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaGroupUserListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaGroupUser"
          },
          "type": "array"
        }
      }
    },
    "KalturaHashCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "",
      "properties": {
        "hashName": {
          "description": "hash name",
          "type": "string"
        },
        "hashSecret": {
          "description": "hash secret",
          "type": "string"
        }
      }
    },
    "KalturaHttpNotification": {
      "description": "Wrapper for sent notifications \n ",
      "properties": {
        "eventNotificationJobId": {
          "description": "ID of the batch job that execute the notification",
          "type": "integer"
        },
        "eventObjectType": {
          "description": "Object type that triggered the notification",
          "enum": [
            "adCuePointEventNotifications.AdCuePoint",
            "annotationEventNotifications.Annotation",
            "captionAssetEventNotifications.CaptionAsset",
            "codeCuePointEventNotifications.CodeCuePoint",
            "contentDistributionEventNotifications.DistributionProfile",
            "contentDistributionEventNotifications.EntryDistribution",
            "cuePointEventNotifications.CuePoint",
            "dropFolderEventNotifications.DropFolder",
            "dropFolderEventNotifications.DropFolderFile",
            "metadataEventNotifications.Metadata",
            "1",
            "2",
            "3",
            "4",
            "5",
            "8",
            "9",
            "10",
            "11",
            "12",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37"
          ],
          "enumLabels": [
            "AD_CUE_POINT",
            "ANNOTATION",
            "CAPTION_ASSET",
            "CODE_CUE_POINT",
            "DISTRIBUTION_PROFILE",
            "ENTRY_DISTRIBUTION",
            "CUE_POINT",
            "DROP_FOLDER",
            "DROP_FOLDER_FILE",
            "METADATA",
            "ENTRY",
            "CATEGORY",
            "ASSET",
            "FLAVORASSET",
            "THUMBASSET",
            "KUSER",
            "ACCESSCONTROL",
            "BATCHJOB",
            "BULKUPLOADRESULT",
            "CATEGORYKUSER",
            "CONVERSIONPROFILE2",
            "FLAVORPARAMS",
            "FLAVORPARAMSCONVERSIONPROFILE",
            "FLAVORPARAMSOUTPUT",
            "GENERICSYNDICATIONFEED",
            "KUSERTOUSERROLE",
            "PARTNER",
            "PERMISSION",
            "PERMISSIONITEM",
            "PERMISSIONTOPERMISSIONITEM",
            "SCHEDULER",
            "SCHEDULERCONFIG",
            "SCHEDULERSTATUS",
            "SCHEDULERWORKER",
            "STORAGEPROFILE",
            "SYNDICATIONFEED",
            "THUMBPARAMS",
            "THUMBPARAMSOUTPUT",
            "UPLOADTOKEN",
            "USERLOGINDATA",
            "USERROLE",
            "WIDGET",
            "CATEGORYENTRY"
          ],
          "type": "string"
        },
        "eventType": {
          "description": "Ecent type that triggered the notification",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13"
          ],
          "enumLabels": [
            "BATCH_JOB_STATUS",
            "OBJECT_ADDED",
            "OBJECT_CHANGED",
            "OBJECT_COPIED",
            "OBJECT_CREATED",
            "OBJECT_DATA_CHANGED",
            "OBJECT_DELETED",
            "OBJECT_ERASED",
            "OBJECT_READY_FOR_REPLACMENT",
            "OBJECT_SAVED",
            "OBJECT_UPDATED",
            "OBJECT_REPLACED",
            "OBJECT_READY_FOR_INDEX"
          ],
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/KalturaObjectBase"
        },
        "templateId": {
          "description": "ID of the template that triggered the notification",
          "type": "integer"
        },
        "templateName": {
          "description": "Name of the template that triggered the notification",
          "type": "string"
        },
        "templateSystemName": {
          "description": "System name of the template that triggered the notification",
          "type": "string"
        }
      }
    },
    "KalturaHttpNotificationData": {
      "abstract": true,
      "description": "",
      "properties": {}
    },
    "KalturaHttpNotificationDataFields": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaHttpNotificationData"
        }
      ],
      "description": "If this class used as the template data, the fields will be taken from the content parameters\n ",
      "properties": {}
    },
    "KalturaHttpNotificationDataText": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaHttpNotificationData"
        }
      ],
      "description": "",
      "properties": {
        "content": {
          "$ref": "#/definitions/KalturaStringValue"
        }
      }
    },
    "KalturaHttpNotificationDispatchJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEventNotificationDispatchJobData"
        }
      ],
      "description": "",
      "properties": {
        "authenticationMethod": {
          "description": "The HTTP authentication method to use.",
          "enum": [
            -18,
            -17,
            1,
            2,
            4,
            8
          ],
          "enumLabels": [
            "ANYSAFE",
            "ANY",
            "BASIC",
            "DIGEST",
            "GSSNEGOTIATE",
            "NTLM"
          ],
          "type": "integer"
        },
        "connectTimeout": {
          "description": "The number of seconds to wait while trying to connect.\n\t Must be larger than zero.",
          "type": "integer"
        },
        "customHeaders": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        },
        "data": {
          "description": "Data to send.",
          "type": "string"
        },
        "method": {
          "description": "Request method.",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "GET",
            "POST",
            "PUT",
            "DELETE"
          ],
          "type": "integer"
        },
        "password": {
          "description": "A password to use for the connection.",
          "type": "string"
        },
        "signSecret": {
          "description": "The secret to sign the notification with",
          "type": "string"
        },
        "sslCertificate": {
          "description": "SSL certificate to verify the peer with.",
          "type": "string"
        },
        "sslCertificatePassword": {
          "description": "The password required to use the certificate.",
          "type": "string"
        },
        "sslCertificateType": {
          "description": "The format of the certificate.",
          "enum": [
            "DER",
            "ENG",
            "PEM"
          ],
          "enumLabels": [
            "DER",
            "ENG",
            "PEM"
          ],
          "type": "string"
        },
        "sslEngine": {
          "description": "The identifier for the crypto engine of the private SSL key specified in ssl key.",
          "type": "string"
        },
        "sslEngineDefault": {
          "description": "The identifier for the crypto engine used for asymmetric crypto operations.",
          "type": "string"
        },
        "sslKey": {
          "description": "Private SSL key.",
          "type": "string"
        },
        "sslKeyPassword": {
          "description": "The secret password needed to use the private SSL key specified in ssl key.",
          "type": "string"
        },
        "sslKeyType": {
          "description": "The key type of the private SSL key specified in ssl key - PEM / DER / ENG.",
          "enum": [
            "DER",
            "ENG",
            "PEM"
          ],
          "enumLabels": [
            "DER",
            "ENG",
            "PEM"
          ],
          "type": "string"
        },
        "sslVersion": {
          "description": "The SSL version (2 or 3) to use.\n\t By default PHP will try to determine this itself, although in some cases this must be set manually.",
          "enum": [
            2,
            3
          ],
          "enumLabels": [
            "V2",
            "V3"
          ],
          "type": "integer"
        },
        "timeout": {
          "description": "The maximum number of seconds to allow cURL functions to execute.",
          "type": "integer"
        },
        "url": {
          "description": "Remote server URL",
          "type": "string"
        },
        "username": {
          "description": "A username to use for the connection.",
          "type": "string"
        }
      }
    },
    "KalturaHttpNotificationObjectData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaHttpNotificationData"
        }
      ],
      "description": "Evaluates PHP statement, depends on the execution context\n ",
      "properties": {
        "apiObjectType": {
          "description": "Kaltura API object type",
          "type": "string"
        },
        "code": {
          "description": "PHP code",
          "type": "string"
        },
        "format": {
          "description": "Data format",
          "enum": [
            1,
            2,
            3,
            4,
            7,
            8,
            9
          ],
          "enumLabels": [
            "RESPONSE_TYPE_JSON",
            "RESPONSE_TYPE_XML",
            "RESPONSE_TYPE_PHP",
            "RESPONSE_TYPE_PHP_ARRAY",
            "RESPONSE_TYPE_HTML",
            "RESPONSE_TYPE_MRSS",
            "RESPONSE_TYPE_JSONP"
          ],
          "type": "integer"
        },
        "ignoreNull": {
          "description": "Ignore null attributes during serialization",
          "type": "boolean"
        }
      }
    },
    "KalturaHttpNotificationTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEventNotificationTemplate"
        }
      ],
      "description": "",
      "properties": {
        "authenticationMethod": {
          "description": "The HTTP authentication method to use.",
          "enum": [
            -18,
            -17,
            1,
            2,
            4,
            8
          ],
          "enumLabels": [
            "ANYSAFE",
            "ANY",
            "BASIC",
            "DIGEST",
            "GSSNEGOTIATE",
            "NTLM"
          ],
          "type": "integer"
        },
        "connectTimeout": {
          "description": "The number of seconds to wait while trying to connect.\n\t Must be larger than zero.",
          "type": "integer"
        },
        "customHeaders": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/KalturaHttpNotificationData"
        },
        "method": {
          "description": "Request method.",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "GET",
            "POST",
            "PUT",
            "DELETE"
          ],
          "type": "integer"
        },
        "password": {
          "description": "A password to use for the connection.",
          "type": "string"
        },
        "sslCertificate": {
          "description": "SSL certificate to verify the peer with.",
          "type": "string"
        },
        "sslCertificatePassword": {
          "description": "The password required to use the certificate.",
          "type": "string"
        },
        "sslCertificateType": {
          "description": "The format of the certificate.",
          "enum": [
            "DER",
            "ENG",
            "PEM"
          ],
          "enumLabels": [
            "DER",
            "ENG",
            "PEM"
          ],
          "type": "string"
        },
        "sslEngine": {
          "description": "The identifier for the crypto engine of the private SSL key specified in ssl key.",
          "type": "string"
        },
        "sslEngineDefault": {
          "description": "The identifier for the crypto engine used for asymmetric crypto operations.",
          "type": "string"
        },
        "sslKey": {
          "description": "Private SSL key.",
          "type": "string"
        },
        "sslKeyPassword": {
          "description": "The secret password needed to use the private SSL key specified in ssl key.",
          "type": "string"
        },
        "sslKeyType": {
          "description": "The key type of the private SSL key specified in ssl key - PEM / DER / ENG.",
          "enum": [
            "DER",
            "ENG",
            "PEM"
          ],
          "enumLabels": [
            "DER",
            "ENG",
            "PEM"
          ],
          "type": "string"
        },
        "sslVersion": {
          "description": "The SSL version (2 or 3) to use.\n\t By default PHP will try to determine this itself, although in some cases this must be set manually.",
          "enum": [
            2,
            3
          ],
          "enumLabels": [
            "V2",
            "V3"
          ],
          "type": "integer"
        },
        "timeout": {
          "description": "The maximum number of seconds to allow cURL functions to execute.",
          "type": "integer"
        },
        "url": {
          "description": "Remote server URL",
          "type": "string"
        },
        "username": {
          "description": "A username to use for the connection.",
          "type": "string"
        }
      }
    },
    "KalturaHttpNotificationTemplateBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEventNotificationTemplateFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaHttpNotificationTemplateFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaHttpNotificationTemplateBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaITunesSyndicationFeed": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSyndicationFeed"
        }
      ],
      "description": "",
      "properties": {
        "adultContent": {
          "enum": [
            "clean",
            "no",
            "yes"
          ],
          "enumLabels": [
            "CLEAN",
            "NO",
            "YES"
          ],
          "type": "string"
        },
        "category": {
          "enum": [
            "Arts",
            "Arts/Design",
            "Arts/Fashion &amp; Beauty",
            "Arts/Food",
            "Arts/Literature",
            "Arts/Performing Arts",
            "Arts/Visual Arts",
            "Business",
            "Business/Business News",
            "Business/Careers",
            "Business/Investing",
            "Business/Management &amp; Marketing",
            "Business/Shopping",
            "Comedy",
            "Education",
            "Education/Education Technology",
            "Education/Higher Education",
            "Education/K-12",
            "Education/Language Courses",
            "Education/Training",
            "Games &amp; Hobbies",
            "Games &amp; Hobbies/Automotive",
            "Games &amp; Hobbies/Aviation",
            "Games &amp; Hobbies/Hobbies",
            "Games &amp; Hobbies/Other Games",
            "Games &amp; Hobbies/Video Games",
            "Government &amp; Organizations",
            "Government &amp; Organizations/Local",
            "Government &amp; Organizations/National",
            "Government &amp; Organizations/Non-Profit",
            "Government &amp; Organizations/Regional",
            "Health",
            "Health/Alternative Health",
            "Health/Fitness &amp; Nutrition",
            "Health/Self-Help",
            "Health/Sexuality",
            "Kids &amp; Family",
            "Music",
            "News &amp; Politics",
            "Religion &amp; Spirituality",
            "Religion &amp; Spirituality/Buddhism",
            "Religion &amp; Spirituality/Christianity",
            "Religion &amp; Spirituality/Hinduism",
            "Religion &amp; Spirituality/Islam",
            "Religion &amp; Spirituality/Judaism",
            "Religion &amp; Spirituality/Other",
            "Religion &amp; Spirituality/Spirituality",
            "Science &amp; Medicine",
            "Science &amp; Medicine/Medicine",
            "Science &amp; Medicine/Natural Sciences",
            "Science &amp; Medicine/Social Sciences",
            "Society &amp; Culture",
            "Society &amp; Culture/History",
            "Society &amp; Culture/Personal Journals",
            "Society &amp; Culture/Philosophy",
            "Society &amp; Culture/Places &amp; Travel",
            "Sports &amp; Recreation",
            "Sports &amp; Recreation/Amateur",
            "Sports &amp; Recreation/College &amp; High School",
            "Sports &amp; Recreation/Outdoor",
            "Sports &amp; Recreation/Professional",
            "TV &amp; Film",
            "Technology",
            "Technology/Gadgets",
            "Technology/Podcasting",
            "Technology/Software How-To",
            "Technology/Tech News"
          ],
          "enumLabels": [
            "ARTS",
            "ARTS_DESIGN",
            "ARTS_FASHION_BEAUTY",
            "ARTS_FOOD",
            "ARTS_LITERATURE",
            "ARTS_PERFORMING_ARTS",
            "ARTS_VISUAL_ARTS",
            "BUSINESS",
            "BUSINESS_BUSINESS_NEWS",
            "BUSINESS_CAREERS",
            "BUSINESS_INVESTING",
            "BUSINESS_MANAGEMENT_MARKETING",
            "BUSINESS_SHOPPING",
            "COMEDY",
            "EDUCATION",
            "EDUCATION_TECHNOLOGY",
            "EDUCATION_HIGHER_EDUCATION",
            "EDUCATION_K_12",
            "EDUCATION_LANGUAGE_COURSES",
            "EDUCATION_TRAINING",
            "GAMES_HOBBIES",
            "GAMES_HOBBIES_AUTOMOTIVE",
            "GAMES_HOBBIES_AVIATION",
            "GAMES_HOBBIES_HOBBIES",
            "GAMES_HOBBIES_OTHER_GAMES",
            "GAMES_HOBBIES_VIDEO_GAMES",
            "GOVERNMENT_ORGANIZATIONS",
            "GOVERNMENT_ORGANIZATIONS_LOCAL",
            "GOVERNMENT_ORGANIZATIONS_NATIONAL",
            "GOVERNMENT_ORGANIZATIONS_NON_PROFIT",
            "GOVERNMENT_ORGANIZATIONS_REGIONAL",
            "HEALTH",
            "HEALTH_ALTERNATIVE_HEALTH",
            "HEALTH_FITNESS_NUTRITION",
            "HEALTH_SELF_HELP",
            "HEALTH_SEXUALITY",
            "KIDS_FAMILY",
            "MUSIC",
            "NEWS_POLITICS",
            "RELIGION_SPIRITUALITY",
            "RELIGION_SPIRITUALITY_BUDDHISM",
            "RELIGION_SPIRITUALITY_CHRISTIANITY",
            "RELIGION_SPIRITUALITY_HINDUISM",
            "RELIGION_SPIRITUALITY_ISLAM",
            "RELIGION_SPIRITUALITY_JUDAISM",
            "RELIGION_SPIRITUALITY_OTHER",
            "RELIGION_SPIRITUALITY_SPIRITUALITY",
            "SCIENCE_MEDICINE",
            "SCIENCE_MEDICINE_MEDICINE",
            "SCIENCE_MEDICINE_NATURAL_SCIENCES",
            "SCIENCE_MEDICINE_SOCIAL_SCIENCES",
            "SOCIETY_CULTURE",
            "SOCIETY_CULTURE_HISTORY",
            "SOCIETY_CULTURE_PERSONAL_JOURNALS",
            "SOCIETY_CULTURE_PHILOSOPHY",
            "SOCIETY_CULTURE_PLACES_TRAVEL",
            "SPORTS_RECREATION",
            "SPORTS_RECREATION_AMATEUR",
            "SPORTS_RECREATION_COLLEGE_HIGH_SCHOOL",
            "SPORTS_RECREATION_OUTDOOR",
            "SPORTS_RECREATION_PROFESSIONAL",
            "TV_FILM",
            "TECHNOLOGY",
            "TECHNOLOGY_GADGETS",
            "TECHNOLOGY_PODCASTING",
            "TECHNOLOGY_SOFTWARE_HOW_TO",
            "TECHNOLOGY_TECH_NEWS"
          ],
          "readOnly": true,
          "type": "string"
        },
        "enforceOrder": {
          "description": "true in case you want to enfore the palylist order on the",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "feedAuthor": {
          "type": "string"
        },
        "feedDescription": {
          "description": "feed description",
          "type": "string"
        },
        "feedImageUrl": {
          "description": "podcast thumbnail",
          "type": "string"
        },
        "feedLandingPage": {
          "description": "feed landing page (i.e publisher website)",
          "type": "string"
        },
        "language": {
          "description": "feed language",
          "type": "string"
        },
        "ownerEmail": {
          "description": "publisher email",
          "type": "string"
        },
        "ownerName": {
          "description": "author/publisher name",
          "type": "string"
        }
      }
    },
    "KalturaITunesSyndicationFeedBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSyndicationFeedFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaITunesSyndicationFeedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaITunesSyndicationFeedBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaImageFlavorParams": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParams"
        }
      ],
      "description": "",
      "properties": {
        "densityHeight": {
          "type": "integer"
        },
        "densityWidth": {
          "type": "integer"
        },
        "depth": {
          "type": "integer"
        },
        "sizeHeight": {
          "type": "integer"
        },
        "sizeWidth": {
          "type": "integer"
        }
      }
    },
    "KalturaImageFlavorParamsBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaImageFlavorParamsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaImageFlavorParamsBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaImageFlavorParamsOutput": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsOutput"
        }
      ],
      "description": "",
      "properties": {
        "densityHeight": {
          "type": "integer"
        },
        "densityWidth": {
          "type": "integer"
        },
        "depth": {
          "type": "integer"
        },
        "sizeHeight": {
          "type": "integer"
        },
        "sizeWidth": {
          "type": "integer"
        }
      }
    },
    "KalturaImageFlavorParamsOutputBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsOutputFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaImageFlavorParamsOutputFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaImageFlavorParamsOutputBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaImportJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "destFileLocalPath": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer"
        },
        "flavorAssetId": {
          "type": "string"
        },
        "srcFileUrl": {
          "type": "string"
        }
      }
    },
    "KalturaImportMetadataJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "destFileLocalPath": {
          "type": "string"
        },
        "metadataId": {
          "type": "integer"
        },
        "srcFileUrl": {
          "type": "string"
        }
      }
    },
    "KalturaIndexAdvancedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSearchItem"
        }
      ],
      "description": "",
      "properties": {
        "indexIdGreaterThan": {
          "type": "integer"
        }
      }
    },
    "KalturaIndexJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "filter": {
          "$ref": "#/definitions/KalturaFilter"
        },
        "lastIndexId": {
          "description": "Indicates the last id that reindexed, used when the batch crached, to re-run from the last crash point.",
          "type": "integer"
        },
        "shouldUpdate": {
          "description": "Indicates that the object columns and attributes values should be recalculated before reindexed.",
          "type": "boolean"
        }
      }
    },
    "KalturaIndexTagsByPrivacyContextJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "addedPrivacyContexts": {
          "type": "string"
        },
        "changedCategoryId": {
          "type": "integer"
        },
        "deletedPrivacyContexts": {
          "type": "string"
        }
      }
    },
    "KalturaIntegerField": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaIntegerValue"
        }
      ],
      "description": "An int representation to return evaluated dynamic value\n ",
      "properties": {}
    },
    "KalturaIntegerValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "An int representation to return an array of ints\n ",
      "properties": {
        "value": {
          "type": "integer"
        }
      }
    },
    "KalturaInternalToolsSession": {
      "description": "",
      "properties": {
        "error": {
          "type": "string"
        },
        "partner_id": {
          "type": "integer"
        },
        "partner_pattern": {
          "type": "string"
        },
        "privileges": {
          "type": "string"
        },
        "rand": {
          "type": "integer"
        },
        "type": {
          "enum": [
            0,
            2
          ],
          "enumLabels": [
            "USER",
            "ADMIN"
          ],
          "type": "integer"
        },
        "user": {
          "type": "string"
        },
        "valid_until": {
          "type": "integer"
        }
      }
    },
    "KalturaInvestigateFlavorAssetData": {
      "description": "",
      "properties": {
        "fileSyncs": {
          "$ref": "#/definitions/KalturaFileSyncListResponse"
        },
        "flavorAsset": {
          "$ref": "#/definitions/KalturaFlavorAsset"
        },
        "flavorParams": {
          "$ref": "#/definitions/KalturaFlavorParams"
        },
        "flavorParamsOutputs": {
          "$ref": "#/definitions/KalturaFlavorParamsOutputListResponse"
        },
        "mediaInfos": {
          "$ref": "#/definitions/KalturaMediaInfoListResponse"
        }
      }
    },
    "KalturaInvestigateThumbAssetData": {
      "description": "",
      "properties": {
        "fileSyncs": {
          "$ref": "#/definitions/KalturaFileSyncListResponse"
        },
        "thumbAsset": {
          "$ref": "#/definitions/KalturaThumbAsset"
        },
        "thumbParams": {
          "$ref": "#/definitions/KalturaThumbParams"
        },
        "thumbParamsOutputs": {
          "$ref": "#/definitions/KalturaThumbParamsOutputListResponse"
        }
      }
    },
    "KalturaIpAddressCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMatchCondition"
        }
      ],
      "description": "",
      "properties": {
        "acceptInternalIps": {
          "description": "allow internal ips",
          "type": "boolean"
        },
        "httpHeader": {
          "description": "http header name for extracting the ip",
          "type": "string"
        }
      }
    },
    "KalturaIpAddressContextField": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStringField"
        }
      ],
      "description": "Represents the current request IP address context \n ",
      "properties": {}
    },
    "KalturaIpAddressRestriction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseRestriction"
        }
      ],
      "description": "",
      "properties": {
        "ipAddressList": {
          "description": "Comma separated list of ip address to allow to deny",
          "type": "string"
        },
        "ipAddressRestrictionType": {
          "description": "Ip address restriction type (Allow or deny)",
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "RESTRICT_LIST",
            "ALLOW_LIST"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaJobData": {
      "description": "",
      "properties": {}
    },
    "KalturaKeyBooleanValue": {
      "description": "A key (boolean) value pair representation to return an array of key-(boolean)value pairs (associative array)\n ",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "boolean"
        }
      }
    },
    "KalturaKeyValue": {
      "description": "A key value pair representation to return an array of key-value pairs (associative array)\n ",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "KalturaKontikiStorageDeleteJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStorageDeleteJobData"
        }
      ],
      "description": "",
      "properties": {
        "contentMoid": {
          "description": "Unique Kontiki MOID for the content uploaded to Kontiki",
          "type": "string"
        },
        "serviceToken": {
          "type": "string"
        }
      }
    },
    "KalturaKontikiStorageExportJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStorageExportJobData"
        }
      ],
      "description": "",
      "properties": {
        "contentMoid": {
          "description": "Unique Kontiki MOID for the content uploaded to Kontiki",
          "type": "string"
        },
        "flavorAssetId": {
          "description": "Holds the id of the exported asset",
          "type": "string"
        },
        "serviceToken": {
          "type": "string"
        }
      }
    },
    "KalturaKontikiStorageProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStorageProfile"
        }
      ],
      "description": "",
      "properties": {
        "serviceToken": {
          "type": "string"
        }
      }
    },
    "KalturaKontikiStorageProfileBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStorageProfileFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaKontikiStorageProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaKontikiStorageProfileBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaLimitFlavorsRestriction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseRestriction"
        }
      ],
      "description": "",
      "properties": {
        "flavorParamsIds": {
          "description": "Comma separated list of flavor params ids to allow to deny",
          "type": "string"
        },
        "limitFlavorsRestrictionType": {
          "description": "Limit flavors restriction type (Allow or deny)",
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "RESTRICT_LIST",
            "ALLOW_LIST"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaListResponse": {
      "description": "",
      "properties": {
        "totalCount": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaLiveAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorAsset"
        }
      ],
      "description": "",
      "properties": {
        "multicastIP": {
          "type": "string"
        },
        "multicastPort": {
          "type": "integer"
        }
      }
    },
    "KalturaLiveAssetBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorAssetFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaLiveAssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveAssetBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaLiveChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveEntry"
        }
      ],
      "description": "",
      "properties": {
        "playlistId": {
          "description": "Playlist id to be played",
          "type": "string"
        },
        "repeat": {
          "description": "Indicates that the segments should be repeated for ever",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaLiveChannelBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveEntryFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaLiveChannelFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveChannelBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaLiveChannelListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaLiveChannel"
          },
          "type": "array"
        }
      }
    },
    "KalturaLiveChannelSegment": {
      "description": "",
      "properties": {
        "channelId": {
          "description": "Live channel id",
          "type": "string"
        },
        "createdAt": {
          "description": "Segment creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "description": "Segment description",
          "type": "string"
        },
        "duration": {
          "description": "Segment play duration time, in mili-seconds",
          "type": "number"
        },
        "entryId": {
          "description": "Entry id to be played",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Segment name",
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "startTime": {
          "description": "Segment play start time, in mili-seconds, according to trigger type",
          "type": "number"
        },
        "status": {
          "enum": [
            "2",
            "3"
          ],
          "enumLabels": [
            "ACTIVE",
            "DELETED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "tags": {
          "description": "Segment tags",
          "type": "string"
        },
        "triggerSegmentId": {
          "description": "Live channel segment that the trigger relates to",
          "type": "string"
        },
        "triggerType": {
          "description": "Segment start time trigger type",
          "enum": [
            "1",
            "2",
            "3",
            "4"
          ],
          "enumLabels": [
            "CHANNEL_RELATIVE",
            "ABSOLUTE_TIME",
            "SEGMENT_START_RELATIVE",
            "SEGMENT_END_RELATIVE"
          ],
          "type": "string"
        },
        "type": {
          "description": "Segment could be associated with the main stream, as additional stream or as overlay",
          "enum": [
            "1"
          ],
          "enumLabels": [
            "VIDEO_AND_AUDIO"
          ],
          "type": "string"
        },
        "updatedAt": {
          "description": "Segment update date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaLiveChannelSegmentBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "channelIdEqual": {
          "type": "string"
        },
        "channelIdIn": {
          "type": "string"
        },
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "startTimeGreaterThanOrEqual": {
          "type": "number"
        },
        "startTimeLessThanOrEqual": {
          "type": "number"
        },
        "statusEqual": {
          "enum": [
            "2",
            "3"
          ],
          "enumLabels": [
            "ACTIVE",
            "DELETED"
          ],
          "type": "string"
        },
        "statusIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaLiveChannelSegmentFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveChannelSegmentBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaLiveChannelSegmentListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaLiveChannelSegment"
          },
          "type": "array"
        }
      }
    },
    "KalturaLiveEntry": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMediaEntry"
        }
      ],
      "description": "",
      "properties": {
        "currentBroadcastStartTime": {
          "description": "The time (unix timestamp in milliseconds) in which the entry broadcast started or 0 when the entry is off the air",
          "type": "number"
        },
        "dvrStatus": {
          "description": "DVR Status Enabled/Disabled",
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "DISABLED",
            "ENABLED"
          ],
          "type": "integer"
        },
        "dvrWindow": {
          "description": "Window of time which the DVR allows for backwards scrubbing (in minutes)",
          "type": "integer"
        },
        "firstBroadcast": {
          "description": "The first time in which the entry was broadcast",
          "readOnly": true,
          "type": "integer"
        },
        "lastBroadcast": {
          "description": "The Last time in which the entry was broadcast",
          "readOnly": true,
          "type": "integer"
        },
        "lastElapsedRecordingTime": {
          "description": "Elapsed recording time (in msec) up to the point where the live stream was last stopped (unpublished).",
          "type": "integer"
        },
        "liveStreamConfigurations": {
          "items": {
            "$ref": "#/definitions/KalturaLiveStreamConfiguration"
          },
          "type": "array"
        },
        "offlineMessage": {
          "description": "The message to be presented when the stream is offline",
          "type": "string"
        },
        "publishConfigurations": {
          "items": {
            "$ref": "#/definitions/KalturaLiveStreamPushPublishConfiguration"
          },
          "type": "array"
        },
        "pushPublishEnabled": {
          "description": "Flag denoting whether entry should be published by the media server",
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "DISABLED",
            "ENABLED"
          ],
          "type": "integer"
        },
        "recordStatus": {
          "description": "Recording Status Enabled/Disabled",
          "enum": [
            0,
            1,
            2
          ],
          "enumLabels": [
            "DISABLED",
            "APPENDED",
            "PER_SESSION"
          ],
          "type": "integer"
        },
        "recordedEntryId": {
          "description": "Recorded entry id",
          "type": "string"
        },
        "recordingOptions": {
          "$ref": "#/definitions/KalturaLiveEntryRecordingOptions"
        }
      }
    },
    "KalturaLiveEntryBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMediaEntryFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaLiveEntryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveEntryBaseFilter"
        }
      ],
      "description": "",
      "properties": {
        "isLive": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "isRecordedEntryIdEmpty": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaLiveEntryRecordingOptions": {
      "description": "A representation of a live stream recording entry configuration\n ",
      "properties": {
        "shouldCopyEntitlement": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaLiveParams": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParams"
        }
      ],
      "description": "",
      "properties": {
        "streamSuffix": {
          "description": "Suffix to be added to the stream name after the entry id {entry_id}_{stream_suffix}, e.g. for entry id 0_kjdu5jr6 and suffix 1, the stream name will be 0_kjdu5jr6_1",
          "type": "string"
        }
      }
    },
    "KalturaLiveParamsBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaLiveParamsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveParamsBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaLiveReportExportJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "entryIds": {
          "type": "string"
        },
        "outputPath": {
          "type": "string"
        },
        "recipientEmail": {
          "type": "string"
        },
        "timeReference": {
          "type": "integer"
        },
        "timeZoneOffset": {
          "type": "integer"
        }
      }
    },
    "KalturaLiveReportExportParams": {
      "description": "",
      "properties": {
        "applicationUrlTemplate": {
          "description": "Optional argument that allows controlling the prefix of the exported csv url",
          "type": "string"
        },
        "entryIds": {
          "type": "string"
        },
        "recpientEmail": {
          "type": "string"
        },
        "timeZoneOffset": {
          "description": "Time zone offset in minutes (between client to UTC)",
          "type": "integer"
        }
      }
    },
    "KalturaLiveReportExportResponse": {
      "description": "",
      "properties": {
        "referenceJobId": {
          "type": "integer"
        },
        "reportEmail": {
          "type": "string"
        }
      }
    },
    "KalturaLiveReportInputFilter": {
      "description": "",
      "properties": {
        "entryIds": {
          "type": "string"
        },
        "fromTime": {
          "type": "integer"
        },
        "live": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "+name",
            "-audience",
            "-eventTime",
            "-plays"
          ],
          "enumLabels": [
            "NAME_ASC",
            "AUDIENCE_DESC",
            "EVENT_TIME_DESC",
            "PLAYS_DESC"
          ],
          "type": "string"
        },
        "toTime": {
          "type": "integer"
        }
      }
    },
    "KalturaLiveStats": {
      "description": "",
      "properties": {
        "audience": {
          "type": "integer"
        },
        "avgBitrate": {
          "type": "number"
        },
        "bufferTime": {
          "type": "integer"
        },
        "dvrAudience": {
          "type": "integer"
        },
        "plays": {
          "type": "integer"
        },
        "secondsViewed": {
          "type": "integer"
        },
        "startEvent": {
          "type": "integer"
        },
        "timestamp": {
          "type": "integer"
        }
      }
    },
    "KalturaLiveStatsEvent": {
      "description": "Will hold data from the Kaltura Player components to be passed on to the live analytics system\n ",
      "properties": {
        "bitrate": {
          "description": "bitrate used in the last 10 seconds",
          "type": "integer"
        },
        "bufferTime": {
          "description": "buffer time in seconds from the last 10 seconds",
          "type": "integer"
        },
        "deliveryType": {
          "description": "delivery type used for this stream",
          "enum": [
            "applehttp",
            "applehttp_to_mc",
            "auto",
            "hdnetwork",
            "hdnetworkmanifest",
            "hds",
            "hls",
            "http",
            "mpegdash",
            "multicast_silverlight",
            "rtmp",
            "rtsp",
            "sl"
          ],
          "enumLabels": [
            "APPLE_HTTP",
            "APPLE_HTTP_TO_MC",
            "AUTO",
            "AKAMAI_HD",
            "AKAMAI_HDS",
            "HDS",
            "HLS",
            "HTTP",
            "MPEG_DASH",
            "MULTICAST_SL",
            "RTMP",
            "RTSP",
            "SILVER_LIGHT"
          ],
          "type": "string"
        },
        "entryId": {
          "type": "string"
        },
        "eventIndex": {
          "description": "incremental sequence of the event",
          "type": "integer"
        },
        "eventType": {
          "description": "an integer representing the type of event being sent from the player",
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "LIVE",
            "DVR"
          ],
          "type": "integer"
        },
        "isLive": {
          "type": "boolean"
        },
        "partnerId": {
          "type": "integer"
        },
        "referrer": {
          "description": "the referrer of the client",
          "type": "string"
        },
        "sessionId": {
          "description": "a unique string generated by the client that will represent the client-side session: the primary component will pass it on to other components that sprout from it",
          "type": "string"
        },
        "startTime": {
          "description": "the event start time as string",
          "type": "string"
        }
      }
    },
    "KalturaLiveStatsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "$ref": "#/definitions/KalturaLiveStats"
        }
      }
    },
    "KalturaLiveStreamAdminEntry": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveStreamEntry"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaLiveStreamAdminEntryBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveStreamEntryFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaLiveStreamAdminEntryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveStreamAdminEntryBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaLiveStreamBitrate": {
      "description": "",
      "properties": {
        "bitrate": {
          "type": "integer"
        },
        "height": {
          "type": "integer"
        },
        "tags": {
          "type": "string"
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "KalturaLiveStreamConfiguration": {
      "description": "A representation of a live stream configuration\n ",
      "properties": {
        "backupUrl": {
          "type": "string"
        },
        "protocol": {
          "enum": [
            "applehttp",
            "applehttp_to_mc",
            "auto",
            "hdnetwork",
            "hdnetworkmanifest",
            "hds",
            "hls",
            "http",
            "mpegdash",
            "multicast_silverlight",
            "rtmp",
            "rtsp",
            "sl"
          ],
          "enumLabels": [
            "APPLE_HTTP",
            "APPLE_HTTP_TO_MC",
            "AUTO",
            "AKAMAI_HD",
            "AKAMAI_HDS",
            "HDS",
            "HLS",
            "HTTP",
            "MPEG_DASH",
            "MULTICAST_SL",
            "RTMP",
            "RTSP",
            "SILVER_LIGHT"
          ],
          "type": "string"
        },
        "publishUrl": {
          "type": "string"
        },
        "streamName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "KalturaLiveStreamEntry": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveEntry"
        }
      ],
      "description": "",
      "properties": {
        "bitrates": {
          "items": {
            "$ref": "#/definitions/KalturaLiveStreamBitrate"
          },
          "type": "array"
        },
        "encodingIP1": {
          "description": "The broadcast primary ip",
          "type": "string"
        },
        "encodingIP2": {
          "description": "The broadcast secondary ip",
          "type": "string"
        },
        "hlsStreamUrl": {
          "description": "HLS URL - URL for live stream playback on mobile device",
          "type": "string"
        },
        "primaryBroadcastingUrl": {
          "type": "string"
        },
        "primaryRtspBroadcastingUrl": {
          "type": "string"
        },
        "secondaryBroadcastingUrl": {
          "type": "string"
        },
        "secondaryRtspBroadcastingUrl": {
          "type": "string"
        },
        "streamName": {
          "type": "string"
        },
        "streamPassword": {
          "description": "The broadcast password",
          "type": "string"
        },
        "streamRemoteBackupId": {
          "description": "The backup stream id as provided by the provider",
          "readOnly": true,
          "type": "string"
        },
        "streamRemoteId": {
          "description": "The stream id as provided by the provider",
          "readOnly": true,
          "type": "string"
        },
        "streamUrl": {
          "description": "The stream url",
          "type": "string"
        },
        "streamUsername": {
          "description": "The broadcast username",
          "readOnly": true,
          "type": "string"
        },
        "urlManager": {
          "description": "URL Manager to handle the live stream URL (for instance, add token)",
          "type": "string"
        }
      }
    },
    "KalturaLiveStreamEntryBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveEntryFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaLiveStreamEntryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveStreamEntryBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaLiveStreamListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaLiveStreamEntry"
          },
          "type": "array"
        }
      }
    },
    "KalturaLiveStreamPushPublishConfiguration": {
      "description": "Basic push-publish configuration for Kaltura live stream entry\n ",
      "properties": {
        "backupPublishUrl": {
          "type": "string"
        },
        "port": {
          "type": "string"
        },
        "publishUrl": {
          "type": "string"
        }
      }
    },
    "KalturaLiveStreamPushPublishRTMPConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveStreamPushPublishConfiguration"
        }
      ],
      "description": "A representation of an RTMP live stream configuration\n ",
      "properties": {
        "applicationName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "streamName": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "KalturaMailJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "bodyParams": {
          "type": "string"
        },
        "campaignId": {
          "type": "integer"
        },
        "fromEmail": {
          "type": "string"
        },
        "fromName": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "language": {
          "enum": [
            "aa",
            "ab",
            "af",
            "am",
            "ar",
            "as",
            "ay",
            "az",
            "ba",
            "be",
            "bg",
            "bh",
            "bi",
            "bn",
            "bo",
            "br",
            "ca",
            "co",
            "cs",
            "cy",
            "da",
            "de",
            "dz",
            "el",
            "en",
            "eo",
            "es",
            "et",
            "eu",
            "fa",
            "fi",
            "fj",
            "fo",
            "fr",
            "fy",
            "ga",
            "gd",
            "gl",
            "gn",
            "gu",
            "gv",
            "ha",
            "he",
            "hi",
            "hr",
            "hu",
            "hy",
            "ia",
            "id",
            "ie",
            "ik",
            "in",
            "is",
            "it",
            "iu",
            "iw",
            "ja",
            "ji",
            "jv",
            "ka",
            "kk",
            "kl",
            "km",
            "kn",
            "ko",
            "ks",
            "ku",
            "ky",
            "la",
            "li",
            "ln",
            "lo",
            "lt",
            "lv",
            "mg",
            "mi",
            "mk",
            "ml",
            "mn",
            "mo",
            "mr",
            "ms",
            "mt",
            "multilingual",
            "my",
            "na",
            "ne",
            "nl",
            "no",
            "oc",
            "om",
            "or",
            "pa",
            "pl",
            "ps",
            "pt",
            "qu",
            "rm",
            "rn",
            "ro",
            "ru",
            "rw",
            "sa",
            "sd",
            "sg",
            "sh",
            "si",
            "sk",
            "sl",
            "sm",
            "sn",
            "so",
            "sq",
            "sr",
            "ss",
            "st",
            "su",
            "sv",
            "sw",
            "ta",
            "te",
            "tg",
            "th",
            "ti",
            "tk",
            "tl",
            "tn",
            "to",
            "tr",
            "ts",
            "tt",
            "tw",
            "ug",
            "uk",
            "ur",
            "uz",
            "vi",
            "vo",
            "wo",
            "xh",
            "yi",
            "yo",
            "zh",
            "zu"
          ],
          "enumLabels": [
            "AA",
            "AB",
            "AF",
            "AM",
            "AR",
            "AS_",
            "AY",
            "AZ",
            "BA",
            "BE",
            "BG",
            "BH",
            "BI",
            "BN",
            "BO",
            "BR",
            "CA",
            "CO",
            "CS",
            "CY",
            "DA",
            "DE",
            "DZ",
            "EL",
            "EN",
            "EO",
            "ES",
            "ET",
            "EU",
            "FA",
            "FI",
            "FJ",
            "FO",
            "FR",
            "FY",
            "GA",
            "GD",
            "GL",
            "GN",
            "GU",
            "GV",
            "HA",
            "HE",
            "HI",
            "HR",
            "HU",
            "HY",
            "IA",
            "ID",
            "IE",
            "IK",
            "IN",
            "IS",
            "IT",
            "IU",
            "IW",
            "JA",
            "JI",
            "JV",
            "KA",
            "KK",
            "KL",
            "KM",
            "KN",
            "KO",
            "KS",
            "KU",
            "KY",
            "LA",
            "LI",
            "LN",
            "LO",
            "LT",
            "LV",
            "MG",
            "MI",
            "MK",
            "ML",
            "MN",
            "MO",
            "MR",
            "MS",
            "MT",
            "MU",
            "MY",
            "NA",
            "NE",
            "NL",
            "NO",
            "OC",
            "OM",
            "OR_",
            "PA",
            "PL",
            "PS",
            "PT",
            "QU",
            "RM",
            "RN",
            "RO",
            "RU",
            "RW",
            "SA",
            "SD",
            "SG",
            "SH",
            "SI",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SQ",
            "SR",
            "SS",
            "ST",
            "SU",
            "SV",
            "SW",
            "TA",
            "TE",
            "TG",
            "TH",
            "TI",
            "TK",
            "TL",
            "TN",
            "TO",
            "TR",
            "TS",
            "TT",
            "TW",
            "UG",
            "UK",
            "UR",
            "UZ",
            "VI",
            "VO",
            "WO",
            "XH",
            "YI",
            "YO",
            "ZH",
            "ZU"
          ],
          "type": "string"
        },
        "mailPriority": {
          "type": "integer"
        },
        "mailType": {
          "enum": [
            "10",
            "11",
            "12",
            "13",
            "20",
            "21",
            "22",
            "23",
            "24",
            "30",
            "31",
            "32",
            "33",
            "40",
            "41",
            "42",
            "43",
            "50",
            "51",
            "52",
            "54",
            "60",
            "62",
            "63",
            "64",
            "65",
            "66",
            "70",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "110",
            "111",
            "112",
            "113",
            "130",
            "131",
            "132"
          ],
          "enumLabels": [
            "MAIL_TYPE_KALTURA_NEWSLETTER",
            "MAIL_TYPE_ADDED_TO_FAVORITES",
            "MAIL_TYPE_ADDED_TO_CLIP_FAVORITES",
            "MAIL_TYPE_NEW_COMMENT_IN_PROFILE",
            "MAIL_TYPE_CLIP_ADDED_YOUR_KALTURA",
            "MAIL_TYPE_VIDEO_ADDED",
            "MAIL_TYPE_ROUGHCUT_CREATED",
            "MAIL_TYPE_ADDED_KALTURA_TO_YOUR_FAVORITES",
            "MAIL_TYPE_NEW_COMMENT_IN_KALTURA",
            "MAIL_TYPE_CLIP_ADDED",
            "MAIL_TYPE_VIDEO_CREATED",
            "MAIL_TYPE_ADDED_KALTURA_TO_HIS_FAVORITES",
            "MAIL_TYPE_NEW_COMMENT_IN_KALTURA_YOU_CONTRIBUTED",
            "MAIL_TYPE_CLIP_CONTRIBUTED",
            "MAIL_TYPE_ROUGHCUT_CREATED_SUBSCRIBED",
            "MAIL_TYPE_ADDED_KALTURA_TO_HIS_FAVORITES_SUBSCRIBED",
            "MAIL_TYPE_NEW_COMMENT_IN_KALTURA_YOU_SUBSCRIBED",
            "MAIL_TYPE_REGISTER_CONFIRM",
            "MAIL_TYPE_PASSWORD_RESET",
            "MAIL_TYPE_LOGIN_MAIL_RESET",
            "MAIL_TYPE_REGISTER_CONFIRM_VIDEO_SERVICE",
            "MAIL_TYPE_VIDEO_READY",
            "MAIL_TYPE_VIDEO_IS_READY",
            "MAIL_TYPE_BULK_DOWNLOAD_READY",
            "MAIL_TYPE_BULKUPLOAD_FINISHED",
            "MAIL_TYPE_BULKUPLOAD_FAILED",
            "MAIL_TYPE_BULKUPLOAD_ABORTED",
            "MAIL_TYPE_NOTIFY_ERR",
            "MAIL_TYPE_ACCOUNT_UPGRADE_CONFIRM",
            "MAIL_TYPE_VIDEO_SERVICE_NOTICE",
            "MAIL_TYPE_VIDEO_SERVICE_NOTICE_LIMIT_REACHED",
            "MAIL_TYPE_VIDEO_SERVICE_NOTICE_ACCOUNT_LOCKED",
            "MAIL_TYPE_VIDEO_SERVICE_NOTICE_ACCOUNT_DELETED",
            "MAIL_TYPE_VIDEO_SERVICE_NOTICE_UPGRADE_OFFER",
            "MAIL_TYPE_ACCOUNT_REACTIVE_CONFIRM",
            "MAIL_TYPE_SYSTEM_USER_RESET_PASSWORD",
            "MAIL_TYPE_SYSTEM_USER_RESET_PASSWORD_SUCCESS",
            "MAIL_TYPE_SYSTEM_USER_NEW_PASSWORD",
            "MAIL_TYPE_SYSTEM_USER_CREDENTIALS_SAVED",
            "MAIL_TYPE_LIVE_REPORT_EXPORT_SUCCESS",
            "MAIL_TYPE_LIVE_REPORT_EXPORT_FAILURE",
            "MAIL_TYPE_LIVE_REPORT_EXPORT_ABORT"
          ],
          "type": "string"
        },
        "minSendDate": {
          "type": "integer"
        },
        "recipientEmail": {
          "type": "string"
        },
        "recipientId": {
          "description": "kuserId",
          "type": "integer"
        },
        "recipientName": {
          "type": "string"
        },
        "separator": {
          "type": "string"
        },
        "status": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "PENDING",
            "SENT",
            "ERROR",
            "QUEUED"
          ],
          "type": "integer"
        },
        "subjectParams": {
          "type": "string"
        },
        "templatePath": {
          "type": "string"
        }
      }
    },
    "KalturaMatchCondition": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "",
      "properties": {
        "values": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        }
      }
    },
    "KalturaMatchMetadataCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMatchCondition"
        }
      ],
      "description": "",
      "properties": {
        "profileId": {
          "description": "Metadata profile id",
          "type": "integer"
        },
        "profileSystemName": {
          "description": "Metadata profile system name",
          "type": "string"
        },
        "xPath": {
          "description": "May contain the full xpath to the field in three formats\n\t 1. Slashed xPath, e.g. /metadata/myElementName\n\t 2. Using local-name function, e.g. /[local-name()='metadata']/[local-name()='myElementName']\n\t 3. Using only the field name, e.g. myElementName, it will be searched as //myElementName",
          "type": "string"
        }
      }
    },
    "KalturaMediaEntry": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPlayableEntry"
        }
      ],
      "description": "",
      "properties": {
        "conversionQuality": {
          "description": "Override the default conversion quality",
          "type": "string"
        },
        "creditUrl": {
          "description": "The URL for credits",
          "type": "string"
        },
        "creditUserName": {
          "description": "The user name used for credits",
          "type": "string"
        },
        "dataUrl": {
          "description": "The URL used for playback. This is not the download URL.",
          "readOnly": true,
          "type": "string"
        },
        "flavorParamsIds": {
          "description": "Comma separated flavor params ids that exists for this media entry",
          "readOnly": true,
          "type": "string"
        },
        "isTrimDisabled": {
          "description": "True if trim action is disabled for this entry",
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "mediaDate": {
          "description": "The media date extracted from EXIF data (For images) as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "mediaType": {
          "description": "The media type of the entry",
          "enum": [
            1,
            2,
            5,
            201,
            202,
            203,
            204
          ],
          "enumLabels": [
            "VIDEO",
            "IMAGE",
            "AUDIO",
            "LIVE_STREAM_FLASH",
            "LIVE_STREAM_WINDOWS_MEDIA",
            "LIVE_STREAM_REAL_MEDIA",
            "LIVE_STREAM_QUICKTIME"
          ],
          "type": "integer"
        },
        "searchProviderId": {
          "description": "The ID of the media in the importing site",
          "type": "string"
        },
        "searchProviderType": {
          "description": "The search provider type used to import this entry",
          "enum": [
            3,
            4,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            20,
            21,
            22,
            23,
            24,
            28,
            100
          ],
          "enumLabels": [
            "FLICKR",
            "YOUTUBE",
            "MYSPACE",
            "PHOTOBUCKET",
            "JAMENDO",
            "CCMIXTER",
            "NYPL",
            "CURRENT",
            "MEDIA_COMMONS",
            "KALTURA",
            "KALTURA_USER_CLIPS",
            "ARCHIVE_ORG",
            "KALTURA_PARTNER",
            "METACAFE",
            "SEARCH_PROXY",
            "PARTNER_SPECIFIC"
          ],
          "type": "integer"
        },
        "sourceType": {
          "description": "The source type of the entry",
          "enum": [
            "velocix.VELOCIX_LIVE",
            "1",
            "2",
            "5",
            "6",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "42"
          ],
          "enumLabels": [
            "VELOCIX_LIVE",
            "FILE",
            "WEBCAM",
            "URL",
            "SEARCH_PROVIDER",
            "AKAMAI_LIVE",
            "MANUAL_LIVE_STREAM",
            "AKAMAI_UNIVERSAL_LIVE",
            "LIVE_STREAM",
            "LIVE_CHANNEL",
            "RECORDED_LIVE",
            "CLIP",
            "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
          ],
          "type": "string"
        }
      }
    },
    "KalturaMediaEntryBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPlayableEntryFilter"
        }
      ],
      "description": "",
      "properties": {
        "flavorParamsIdsMatchAnd": {
          "type": "string"
        },
        "flavorParamsIdsMatchOr": {
          "type": "string"
        },
        "mediaDateGreaterThanOrEqual": {
          "type": "integer"
        },
        "mediaDateLessThanOrEqual": {
          "type": "integer"
        },
        "mediaTypeEqual": {
          "enum": [
            1,
            2,
            5,
            201,
            202,
            203,
            204
          ],
          "enumLabels": [
            "VIDEO",
            "IMAGE",
            "AUDIO",
            "LIVE_STREAM_FLASH",
            "LIVE_STREAM_WINDOWS_MEDIA",
            "LIVE_STREAM_REAL_MEDIA",
            "LIVE_STREAM_QUICKTIME"
          ],
          "type": "integer"
        },
        "mediaTypeIn": {
          "type": "string"
        },
        "sourceTypeEqual": {
          "enum": [
            "velocix.VELOCIX_LIVE",
            "1",
            "2",
            "5",
            "6",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "42"
          ],
          "enumLabels": [
            "VELOCIX_LIVE",
            "FILE",
            "WEBCAM",
            "URL",
            "SEARCH_PROVIDER",
            "AKAMAI_LIVE",
            "MANUAL_LIVE_STREAM",
            "AKAMAI_UNIVERSAL_LIVE",
            "LIVE_STREAM",
            "LIVE_CHANNEL",
            "RECORDED_LIVE",
            "CLIP",
            "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
          ],
          "type": "string"
        },
        "sourceTypeIn": {
          "type": "string"
        },
        "sourceTypeNotEqual": {
          "enum": [
            "velocix.VELOCIX_LIVE",
            "1",
            "2",
            "5",
            "6",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "42"
          ],
          "enumLabels": [
            "VELOCIX_LIVE",
            "FILE",
            "WEBCAM",
            "URL",
            "SEARCH_PROVIDER",
            "AKAMAI_LIVE",
            "MANUAL_LIVE_STREAM",
            "AKAMAI_UNIVERSAL_LIVE",
            "LIVE_STREAM",
            "LIVE_CHANNEL",
            "RECORDED_LIVE",
            "CLIP",
            "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
          ],
          "type": "string"
        },
        "sourceTypeNotIn": {
          "type": "string"
        }
      }
    },
    "KalturaMediaEntryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMediaEntryBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaMediaEntryFilterForPlaylist": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMediaEntryFilter"
        }
      ],
      "description": "",
      "properties": {
        "limit": {
          "type": "integer"
        }
      }
    },
    "KalturaMediaFlavorParams": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParams"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaMediaFlavorParamsBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaMediaFlavorParamsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMediaFlavorParamsBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaMediaFlavorParamsOutput": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsOutput"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaMediaFlavorParamsOutputBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsOutputFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaMediaFlavorParamsOutputFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMediaFlavorParamsOutputBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaMediaInfo": {
      "description": "",
      "properties": {
        "audioBitRate": {
          "description": "The audio bit rate",
          "type": "integer"
        },
        "audioBitRateMode": {
          "description": "The audio bit rate mode",
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "CBR",
            "VBR"
          ],
          "type": "integer"
        },
        "audioChannels": {
          "description": "The number of audio channels",
          "type": "integer"
        },
        "audioCodecId": {
          "description": "The audio codec id",
          "type": "string"
        },
        "audioDuration": {
          "description": "The audio duration",
          "type": "integer"
        },
        "audioFormat": {
          "description": "The audio format",
          "type": "string"
        },
        "audioResolution": {
          "description": "The audio resolution",
          "type": "integer"
        },
        "audioSamplingRate": {
          "description": "The audio sampling rate",
          "type": "integer"
        },
        "containerBitRate": {
          "description": "The container bit rate",
          "type": "integer"
        },
        "containerDuration": {
          "description": "The container duration",
          "type": "integer"
        },
        "containerFormat": {
          "description": "The container format",
          "type": "string"
        },
        "containerId": {
          "description": "The container id",
          "type": "string"
        },
        "containerProfile": {
          "description": "The container profile",
          "type": "string"
        },
        "contentStreams": {
          "type": "string"
        },
        "fileSize": {
          "description": "The file size",
          "type": "integer"
        },
        "flavorAssetId": {
          "description": "The id of the related flavor asset",
          "type": "string"
        },
        "id": {
          "description": "The id of the media info",
          "readOnly": true,
          "type": "integer"
        },
        "isFastStart": {
          "type": "integer"
        },
        "multiStream": {
          "type": "string"
        },
        "multiStreamInfo": {
          "type": "string"
        },
        "rawData": {
          "description": "The data as returned by the mediainfo command line",
          "type": "string"
        },
        "scanType": {
          "type": "integer"
        },
        "videoBitRate": {
          "description": "The video bit rate",
          "type": "integer"
        },
        "videoBitRateMode": {
          "description": "The video bit rate mode",
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "CBR",
            "VBR"
          ],
          "type": "integer"
        },
        "videoCodecId": {
          "description": "The video codec id",
          "type": "string"
        },
        "videoDar": {
          "description": "The video display aspect ratio (dar)",
          "type": "number"
        },
        "videoDuration": {
          "description": "The video duration",
          "type": "integer"
        },
        "videoFormat": {
          "description": "The video format",
          "type": "string"
        },
        "videoFrameRate": {
          "description": "The video frame rate",
          "type": "number"
        },
        "videoHeight": {
          "description": "The video height",
          "type": "integer"
        },
        "videoRotation": {
          "type": "integer"
        },
        "videoWidth": {
          "description": "The video width",
          "type": "integer"
        },
        "writingLib": {
          "description": "The writing library",
          "type": "string"
        }
      }
    },
    "KalturaMediaInfoBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "flavorAssetIdEqual": {
          "type": "string"
        }
      }
    },
    "KalturaMediaInfoFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMediaInfoBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaMediaInfoListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaMediaInfo"
          },
          "type": "array"
        }
      }
    },
    "KalturaMediaListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaMediaEntry"
          },
          "type": "array"
        }
      }
    },
    "KalturaMediaServer": {
      "description": "",
      "properties": {
        "createdAt": {
          "description": "Server first registration date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "dc": {
          "description": "Server data center id",
          "readOnly": true,
          "type": "integer"
        },
        "hostname": {
          "description": "Server host name",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "Unique identifier",
          "readOnly": true,
          "type": "integer"
        },
        "updatedAt": {
          "description": "Server last update date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaMediaServerBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaMediaServerStatus": {
      "description": "",
      "properties": {}
    },
    "KalturaMetadata": {
      "description": "",
      "properties": {
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "metadataObjectType": {
          "enum": [
            "adCuePointMetadata.AdCuePoint",
            "annotationMetadata.Annotation",
            "codeCuePointMetadata.CodeCuePoint",
            "thumbCuePointMetadata.thumbCuePoint",
            "1",
            "2",
            "3",
            "4",
            "5"
          ],
          "enumLabels": [
            "AD_CUE_POINT",
            "ANNOTATION",
            "CODE_CUE_POINT",
            "THUMB_CUE_POINT",
            "ENTRY",
            "CATEGORY",
            "USER",
            "PARTNER",
            "DYNAMIC_OBJECT"
          ],
          "readOnly": true,
          "type": "string"
        },
        "metadataProfileId": {
          "readOnly": true,
          "type": "integer"
        },
        "metadataProfileVersion": {
          "readOnly": true,
          "type": "integer"
        },
        "objectId": {
          "readOnly": true,
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "VALID",
            "INVALID",
            "DELETED"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "version": {
          "readOnly": true,
          "type": "integer"
        },
        "xml": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaMetadataBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "metadataObjectTypeEqual": {
          "description": "When null, default is KalturaMetadataObjectType::ENTRY",
          "enum": [
            "adCuePointMetadata.AdCuePoint",
            "annotationMetadata.Annotation",
            "codeCuePointMetadata.CodeCuePoint",
            "thumbCuePointMetadata.thumbCuePoint",
            "1",
            "2",
            "3",
            "4",
            "5"
          ],
          "enumLabels": [
            "AD_CUE_POINT",
            "ANNOTATION",
            "CODE_CUE_POINT",
            "THUMB_CUE_POINT",
            "ENTRY",
            "CATEGORY",
            "USER",
            "PARTNER",
            "DYNAMIC_OBJECT"
          ],
          "type": "string"
        },
        "metadataProfileIdEqual": {
          "type": "integer"
        },
        "metadataProfileVersionEqual": {
          "type": "integer"
        },
        "metadataProfileVersionGreaterThanOrEqual": {
          "type": "integer"
        },
        "metadataProfileVersionLessThanOrEqual": {
          "type": "integer"
        },
        "objectIdEqual": {
          "type": "string"
        },
        "objectIdIn": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "VALID",
            "INVALID",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        },
        "versionEqual": {
          "type": "integer"
        },
        "versionGreaterThanOrEqual": {
          "type": "integer"
        },
        "versionLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaMetadataFieldChangedCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMatchCondition"
        }
      ],
      "description": "",
      "properties": {
        "profileId": {
          "description": "Metadata profile id",
          "type": "integer"
        },
        "profileSystemName": {
          "description": "Metadata profile system name",
          "type": "string"
        },
        "versionA": {
          "type": "string"
        },
        "versionB": {
          "type": "string"
        },
        "xPath": {
          "description": "May contain the full xpath to the field in three formats\n\t 1. Slashed xPath, e.g. /metadata/myElementName\n\t 2. Using local-name function, e.g. /[local-name()='metadata']/[local-name()='myElementName']\n\t 3. Using only the field name, e.g. myElementName, it will be searched as //myElementName",
          "type": "string"
        }
      }
    },
    "KalturaMetadataFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMetadataBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaMetadataListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaMetadata"
          },
          "type": "array"
        }
      }
    },
    "KalturaMetadataProfile": {
      "description": "",
      "properties": {
        "createMode": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "API",
            "KMC",
            "APP"
          ],
          "type": "integer"
        },
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "disableReIndexing": {
          "type": "boolean"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "metadataObjectType": {
          "enum": [
            "adCuePointMetadata.AdCuePoint",
            "annotationMetadata.Annotation",
            "codeCuePointMetadata.CodeCuePoint",
            "thumbCuePointMetadata.thumbCuePoint",
            "1",
            "2",
            "3",
            "4",
            "5"
          ],
          "enumLabels": [
            "AD_CUE_POINT",
            "ANNOTATION",
            "CODE_CUE_POINT",
            "THUMB_CUE_POINT",
            "ENTRY",
            "CATEGORY",
            "USER",
            "PARTNER",
            "DYNAMIC_OBJECT"
          ],
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "ACTIVE",
            "DEPRECATED",
            "TRANSFORMING"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "systemName": {
          "type": "string"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "version": {
          "readOnly": true,
          "type": "integer"
        },
        "views": {
          "readOnly": true,
          "type": "string"
        },
        "xsd": {
          "readOnly": true,
          "type": "string"
        },
        "xslt": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaMetadataProfileBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createModeEqual": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "API",
            "KMC",
            "APP"
          ],
          "type": "integer"
        },
        "createModeIn": {
          "type": "string"
        },
        "createModeNotEqual": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "API",
            "KMC",
            "APP"
          ],
          "type": "integer"
        },
        "createModeNotIn": {
          "type": "string"
        },
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "idEqual": {
          "type": "integer"
        },
        "metadataObjectTypeEqual": {
          "enum": [
            "adCuePointMetadata.AdCuePoint",
            "annotationMetadata.Annotation",
            "codeCuePointMetadata.CodeCuePoint",
            "thumbCuePointMetadata.thumbCuePoint",
            "1",
            "2",
            "3",
            "4",
            "5"
          ],
          "enumLabels": [
            "AD_CUE_POINT",
            "ANNOTATION",
            "CODE_CUE_POINT",
            "THUMB_CUE_POINT",
            "ENTRY",
            "CATEGORY",
            "USER",
            "PARTNER",
            "DYNAMIC_OBJECT"
          ],
          "type": "string"
        },
        "metadataObjectTypeIn": {
          "type": "string"
        },
        "nameEqual": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "ACTIVE",
            "DEPRECATED",
            "TRANSFORMING"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        },
        "versionEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaMetadataProfileField": {
      "description": "",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "key": {
          "readOnly": true,
          "type": "string"
        },
        "label": {
          "readOnly": true,
          "type": "string"
        },
        "xPath": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaMetadataProfileFieldListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaMetadataProfileField"
          },
          "type": "array"
        }
      }
    },
    "KalturaMetadataProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMetadataProfileBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaMetadataProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaMetadataProfile"
          },
          "type": "array"
        }
      }
    },
    "KalturaMetadataResponseProfileMapping": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaResponseProfileMapping"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaMetadataSearchItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSearchOperator"
        }
      ],
      "description": "",
      "properties": {
        "metadataProfileId": {
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        }
      }
    },
    "KalturaMixEntry": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPlayableEntry"
        }
      ],
      "description": "",
      "properties": {
        "dataContent": {
          "description": "The xml data of the mix",
          "type": "string"
        },
        "editorType": {
          "description": "The editor type used to edit the metadata",
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "SIMPLE",
            "ADVANCED"
          ],
          "type": "integer"
        },
        "hasRealThumbnail": {
          "description": "Indicates whether the user has submited a real thumbnail to the mix (Not the one that was generated automaticaly)",
          "readOnly": true,
          "type": "boolean"
        }
      }
    },
    "KalturaMixEntryBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPlayableEntryFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaMixEntryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMixEntryBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaMixListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaMixEntry"
          },
          "type": "array"
        }
      }
    },
    "KalturaModerationFlag": {
      "description": "",
      "properties": {
        "comments": {
          "description": "The comment that was added to the flag",
          "type": "string"
        },
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "flagType": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "enumLabels": [
            "SEXUAL_CONTENT",
            "VIOLENT_REPULSIVE",
            "HARMFUL_DANGEROUS",
            "SPAM_COMMERCIALS",
            "COPYRIGHT",
            "TERMS_OF_USE_VIOLATION"
          ],
          "type": "integer"
        },
        "flaggedEntryId": {
          "description": "If moderation flag is set for entry, this is the flagged entry id",
          "type": "string"
        },
        "flaggedUserId": {
          "description": "If moderation flag is set for user, this is the flagged user id",
          "type": "string"
        },
        "id": {
          "description": "Moderation flag id",
          "readOnly": true,
          "type": "integer"
        },
        "moderationObjectType": {
          "description": "The type of the moderation flag (entry or user)",
          "enum": [
            "2",
            "3"
          ],
          "enumLabels": [
            "ENTRY",
            "USER"
          ],
          "readOnly": true,
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The moderation flag status",
          "enum": [
            "1",
            "2"
          ],
          "enumLabels": [
            "PENDING",
            "MODERATED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "userId": {
          "description": "The user id that added the moderation flag",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaModerationFlagListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaModerationFlag"
          },
          "type": "array"
        }
      }
    },
    "KalturaModifyCategoriesObjectTask": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaObjectTask"
        }
      ],
      "description": "",
      "properties": {
        "addRemoveType": {
          "description": "Should the object task add or remove categories?",
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "ADD",
            "REMOVE"
          ],
          "type": "integer"
        },
        "categoryIds": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        }
      }
    },
    "KalturaMoveCategoryEntriesJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "copyOnly": {
          "description": "Entries won't be deleted from the source entry",
          "type": "boolean"
        },
        "destCategoryFullIds": {
          "description": "Destination categories fallback ids",
          "type": "string"
        },
        "destCategoryId": {
          "description": "Destination category id",
          "type": "integer"
        },
        "lastMovedCategoryEntryPageIndex": {
          "description": "Saves the last page index of the category entries filter pager\n     In case of crash the batch will restart from that point",
          "type": "integer"
        },
        "lastMovedCategoryId": {
          "description": "Saves the last category id that its entries moved completely\n     In case of crash the batch will restart from that point",
          "type": "integer"
        },
        "lastMovedCategoryPageIndex": {
          "description": "Saves the last page index of the child categories filter pager\n     In case of crash the batch will restart from that point",
          "type": "integer"
        },
        "moveFromChildren": {
          "description": "All entries from all child categories will be moved as well",
          "type": "boolean"
        },
        "srcCategoryId": {
          "description": "Source category id",
          "type": "integer"
        }
      }
    },
    "KalturaNotificationJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "data": {
          "type": "string"
        },
        "notificationResult": {
          "type": "string"
        },
        "numberOfAttempts": {
          "type": "integer"
        },
        "objType": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "ENTRY",
            "KSHOW",
            "USER",
            "BATCH_JOB"
          ],
          "type": "integer"
        },
        "objectId": {
          "type": "string"
        },
        "status": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "enumLabels": [
            "PENDING",
            "SENT",
            "ERROR",
            "SHOULD_RESEND",
            "ERROR_RESENDING",
            "SENT_SYNCH",
            "QUEUED"
          ],
          "type": "integer"
        },
        "type": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            21,
            26
          ],
          "enumLabels": [
            "ENTRY_ADD",
            "ENTR_UPDATE_PERMISSIONS",
            "ENTRY_DELETE",
            "ENTRY_BLOCK",
            "ENTRY_UPDATE",
            "ENTRY_UPDATE_THUMBNAIL",
            "ENTRY_UPDATE_MODERATION",
            "USER_ADD",
            "USER_BANNED"
          ],
          "type": "integer"
        },
        "typeAsString": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "KalturaObject": {
      "abstract": true,
      "description": "",
      "properties": {
        "relatedObjects": {
          "items": {
            "$ref": "#/definitions/KalturaListResponse"
          },
          "type": "array"
        }
      }
    },
    "KalturaObjectBase": {},
    "KalturaObjectIdField": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStringField"
        }
      ],
      "description": "Evaluates object ID according to given context\n ",
      "properties": {}
    },
    "KalturaObjectIdentifier": {
      "abstract": true,
      "description": "Configuration for extended item in the Kaltura MRSS feeds\n ",
      "properties": {
        "extendedFeatures": {
          "description": "Comma separated string of enum values denoting which features of the item need to be included in the MRSS",
          "type": "string"
        }
      }
    },
    "KalturaObjectListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaObject"
          },
          "type": "array"
        }
      }
    },
    "KalturaObjectTask": {
      "abstract": true,
      "description": "",
      "properties": {
        "stopProcessingOnError": {
          "type": "boolean"
        },
        "type": {
          "enum": [
            "scheduledTaskContentDistribution.Distribute",
            "scheduledTaskEventNotification.DispatchEventNotification",
            "scheduledTaskMetadata.ExecuteMetadataXslt",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "enumLabels": [
            "DISTRIBUTE",
            "DISPATCH_EVENT_NOTIFICATION",
            "EXECUTE_METADATA_XSLT",
            "DELETE_ENTRY",
            "MODIFY_CATEGORIES",
            "DELETE_ENTRY_FLAVORS",
            "CONVERT_ENTRY_FLAVORS",
            "DELETE_LOCAL_CONTENT",
            "STORAGE_EXPORT"
          ],
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaOperationAttributes": {
      "abstract": true,
      "description": "Base class to all operation attributes types\n ",
      "properties": {}
    },
    "KalturaOperationResource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaContentResource"
        }
      ],
      "description": "A resource that perform operation (transcoding, clipping, cropping) before the flavor is ready.\n ",
      "properties": {
        "assetParamsId": {
          "description": "ID of alternative asset params to be used instead of the system default flavor params",
          "type": "integer"
        },
        "operationAttributes": {
          "items": {
            "$ref": "#/definitions/KalturaOperationAttributes"
          },
          "type": "array"
        },
        "resource": {
          "$ref": "#/definitions/KalturaContentResource"
        }
      }
    },
    "KalturaOptionalAnswer": {
      "description": "A representation of an optional answer for question cue point\n ",
      "properties": {
        "isCorrect": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "key": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "weight": {
          "type": "number"
        }
      }
    },
    "KalturaOrCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "",
      "properties": {
        "conditions": {
          "items": {
            "$ref": "#/definitions/KalturaCondition"
          },
          "type": "array"
        }
      }
    },
    "KalturaParseCaptionAssetJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "captionAssetId": {
          "type": "string"
        }
      }
    },
    "KalturaParseMultiLanguageCaptionAssetJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "entryId": {
          "type": "string"
        },
        "fileLocation": {
          "type": "string"
        },
        "multiLanaguageCaptionAssetId": {
          "type": "string"
        }
      }
    },
    "KalturaPartner": {
      "description": "",
      "properties": {
        "additionalParams": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        },
        "adminEmail": {
          "type": "string"
        },
        "adminLoginUsersQuota": {
          "readOnly": true,
          "type": "integer"
        },
        "adminName": {
          "description": "deprecated - lastName and firstName replaces this field",
          "type": "string"
        },
        "adminSecret": {
          "readOnly": true,
          "type": "string"
        },
        "adminUserId": {
          "type": "string"
        },
        "adultContent": {
          "type": "boolean"
        },
        "allowMultiNotification": {
          "type": "integer"
        },
        "allowQuickEdit": {
          "type": "integer"
        },
        "appearInSearch": {
          "type": "integer"
        },
        "cdnHost": {
          "readOnly": true,
          "type": "string"
        },
        "cmsPassword": {
          "readOnly": true,
          "type": "string"
        },
        "commercialUse": {
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "NON_COMMERCIAL_USE",
            "COMMERCIAL_USE"
          ],
          "type": "integer"
        },
        "contentCategories": {
          "type": "string"
        },
        "country": {
          "description": "country code (2char) - this field is optional",
          "type": "string"
        },
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "crmId": {
          "readOnly": true,
          "type": "string"
        },
        "defConversionProfileType": {
          "type": "string"
        },
        "defaultDeliveryType": {
          "readOnly": true,
          "type": "string"
        },
        "defaultEmbedCodeType": {
          "readOnly": true,
          "type": "string"
        },
        "defaultEntitlementEnforcement": {
          "readOnly": true,
          "type": "boolean"
        },
        "deliveryTypes": {
          "items": {
            "$ref": "#/definitions/KalturaPlayerDeliveryType"
          },
          "type": "array"
        },
        "describeYourself": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "embedCodeTypes": {
          "items": {
            "$ref": "#/definitions/KalturaPlayerEmbedCodeType"
          },
          "type": "array"
        },
        "firstName": {
          "description": "firstName and lastName replace the old (deprecated) adminName",
          "type": "string"
        },
        "host": {
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "ignoreSeoLinks": {
          "readOnly": true,
          "type": "boolean"
        },
        "isFirstLogin": {
          "readOnly": true,
          "type": "boolean"
        },
        "landingPage": {
          "type": "string"
        },
        "lastName": {
          "description": "lastName and firstName replace the old (deprecated) adminName",
          "type": "string"
        },
        "logoutUrl": {
          "readOnly": true,
          "type": "string"
        },
        "maxUploadSize": {
          "type": "integer"
        },
        "mergeEntryLists": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "notificationUrl": {
          "type": "string"
        },
        "notificationsConfig": {
          "type": "string"
        },
        "notify": {
          "type": "integer"
        },
        "partnerGroupType": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "PUBLISHER",
            "VAR_GROUP",
            "GROUP",
            "TEMPLATE"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "partnerPackage": {
          "readOnly": true,
          "type": "integer"
        },
        "partnerParentId": {
          "readOnly": true,
          "type": "integer"
        },
        "phone": {
          "type": "string"
        },
        "publishersQuota": {
          "readOnly": true,
          "type": "integer"
        },
        "referenceId": {
          "type": "string"
        },
        "secret": {
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "state code (2char) - this field is optional",
          "type": "string"
        },
        "status": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "enumLabels": [
            "DELETED",
            "ACTIVE",
            "BLOCKED",
            "FULL_BLOCK"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "templatePartnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "type": {
          "enum": [
            1,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109
          ],
          "enumLabels": [
            "KMC",
            "WIKI",
            "WORDPRESS",
            "DRUPAL",
            "DEKIWIKI",
            "MOODLE",
            "COMMUNITY_EDITION",
            "JOOMLA",
            "BLACKBOARD",
            "SAKAI",
            "ADMIN_CONSOLE"
          ],
          "type": "integer"
        },
        "userLandingPage": {
          "type": "string"
        },
        "website": {
          "type": "string"
        }
      }
    },
    "KalturaPartnerBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "idNotIn": {
          "type": "string"
        },
        "nameEqual": {
          "type": "string"
        },
        "nameLike": {
          "type": "string"
        },
        "nameMultiLikeAnd": {
          "type": "string"
        },
        "nameMultiLikeOr": {
          "type": "string"
        },
        "partnerGroupTypeEqual": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "PUBLISHER",
            "VAR_GROUP",
            "GROUP",
            "TEMPLATE"
          ],
          "type": "integer"
        },
        "partnerNameDescriptionWebsiteAdminNameAdminEmailLike": {
          "type": "string"
        },
        "partnerPackageEqual": {
          "type": "integer"
        },
        "partnerPackageGreaterThanOrEqual": {
          "type": "integer"
        },
        "partnerPackageLessThanOrEqual": {
          "type": "integer"
        },
        "statusEqual": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "enumLabels": [
            "DELETED",
            "ACTIVE",
            "BLOCKED",
            "FULL_BLOCK"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        }
      }
    },
    "KalturaPartnerFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaPartnerListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPartner"
          },
          "type": "array"
        }
      }
    },
    "KalturaPartnerStatistics": {
      "description": "",
      "properties": {
        "bandwidth": {
          "description": "Partner total bandwidth in GB",
          "readOnly": true,
          "type": "number"
        },
        "hosting": {
          "description": "Partner total hosting in GB on the disk",
          "readOnly": true,
          "type": "number"
        },
        "packageBandwidthAndStorage": {
          "description": "Package total allowed bandwidth and storage",
          "readOnly": true,
          "type": "integer"
        },
        "reachedLimitDate": {
          "description": "date when partner reached the limit of his package (timestamp)",
          "readOnly": true,
          "type": "integer"
        },
        "usage": {
          "description": "total usage in GB - including bandwidth and storage",
          "readOnly": true,
          "type": "integer"
        },
        "usagePercent": {
          "description": "Percent of usage out of partner's package. if usage is 5GB and package is 10GB, this value will be 50",
          "readOnly": true,
          "type": "number"
        }
      }
    },
    "KalturaPartnerUsage": {
      "description": "",
      "properties": {
        "Percent": {
          "description": "percent of usage out of partner's package. if usageGB is 5 and package is 10GB, this value will be 50",
          "readOnly": true,
          "type": "number"
        },
        "hostingGB": {
          "description": "Partner total hosting in GB on the disk",
          "readOnly": true,
          "type": "number"
        },
        "packageBW": {
          "description": "package total BW - actually this is usage, which represents BW+storage",
          "readOnly": true,
          "type": "integer"
        },
        "reachedLimitDate": {
          "description": "date when partner reached the limit of his package (timestamp)",
          "readOnly": true,
          "type": "integer"
        },
        "usageGB": {
          "description": "total usage in GB - including bandwidth and storage",
          "readOnly": true,
          "type": "number"
        },
        "usageGraph": {
          "description": "a semi-colon separated list of comma-separated key-values to represent a usage graph.\n\t keys could be 1-12 for a year view (1,1.2;2,1.1;3,0.9;...;12,1.4;)\n\t keys could be 1-[28,29,30,31] depending on the requested month, for a daily view in a given month (1,0.4;2,0.2;...;31,0.1;)",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaPartnerUsageListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaVarPartnerUsageItem"
          },
          "type": "array"
        },
        "total": {
          "$ref": "#/definitions/KalturaVarPartnerUsageItem"
        }
      }
    },
    "KalturaPdfFlavorParams": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParams"
        }
      ],
      "description": "",
      "properties": {
        "readonly": {
          "type": "boolean"
        }
      }
    },
    "KalturaPdfFlavorParamsBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaPdfFlavorParamsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPdfFlavorParamsBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaPdfFlavorParamsOutput": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsOutput"
        }
      ],
      "description": "",
      "properties": {
        "readonly": {
          "type": "boolean"
        }
      }
    },
    "KalturaPdfFlavorParamsOutputBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsOutputFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaPdfFlavorParamsOutputFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPdfFlavorParamsOutputBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaPermission": {
      "description": "",
      "properties": {
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "dependsOnPermissionNames": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "friendlyName": {
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "partnerGroup": {
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "permissionItemsIds": {
          "type": "string"
        },
        "status": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "ACTIVE",
            "BLOCKED",
            "DELETED"
          ],
          "type": "integer"
        },
        "tags": {
          "type": "string"
        },
        "type": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "NORMAL",
            "SPECIAL_FEATURE",
            "PLUGIN",
            "PARTNER_GROUP"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaPermissionBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "dependsOnPermissionNamesMultiLikeAnd": {
          "type": "string"
        },
        "dependsOnPermissionNamesMultiLikeOr": {
          "type": "string"
        },
        "descriptionLike": {
          "type": "string"
        },
        "friendlyNameLike": {
          "type": "string"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "nameEqual": {
          "type": "string"
        },
        "nameIn": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "ACTIVE",
            "BLOCKED",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "tagsMultiLikeAnd": {
          "type": "string"
        },
        "tagsMultiLikeOr": {
          "type": "string"
        },
        "typeEqual": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "NORMAL",
            "SPECIAL_FEATURE",
            "PLUGIN",
            "PARTNER_GROUP"
          ],
          "type": "integer"
        },
        "typeIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaPermissionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaPermissionItem": {
      "abstract": true,
      "description": "",
      "properties": {
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "tags": {
          "type": "string"
        },
        "type": {
          "enum": [
            "kApiActionPermissionItem",
            "kApiParameterPermissionItem"
          ],
          "enumLabels": [
            "API_ACTION_ITEM",
            "API_PARAMETER_ITEM"
          ],
          "readOnly": true,
          "type": "string"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaPermissionItemBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "tagsMultiLikeAnd": {
          "type": "string"
        },
        "tagsMultiLikeOr": {
          "type": "string"
        },
        "typeEqual": {
          "enum": [
            "kApiActionPermissionItem",
            "kApiParameterPermissionItem"
          ],
          "enumLabels": [
            "API_ACTION_ITEM",
            "API_PARAMETER_ITEM"
          ],
          "type": "string"
        },
        "typeIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaPermissionItemFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItemBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaPermissionItemListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPermissionItem"
          },
          "type": "array"
        }
      }
    },
    "KalturaPermissionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPermission"
          },
          "type": "array"
        }
      }
    },
    "KalturaPlayableEntry": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseEntry"
        }
      ],
      "description": "",
      "properties": {
        "duration": {
          "description": "The duration in seconds",
          "readOnly": true,
          "type": "integer"
        },
        "durationType": {
          "description": "The duration type (short for 0-4 mins, medium for 4-20 mins, long for 20+ mins)",
          "enum": [
            "long",
            "medium",
            "notavailable",
            "short"
          ],
          "enumLabels": [
            "LONG",
            "MEDIUM",
            "NOT_AVAILABLE",
            "SHORT"
          ],
          "readOnly": true,
          "type": "string"
        },
        "height": {
          "description": "The height in pixels",
          "readOnly": true,
          "type": "integer"
        },
        "lastPlayedAt": {
          "description": "The last time the entry was played",
          "readOnly": true,
          "type": "integer"
        },
        "msDuration": {
          "description": "The duration in miliseconds",
          "type": "integer"
        },
        "plays": {
          "description": "Number of plays",
          "readOnly": true,
          "type": "integer"
        },
        "views": {
          "description": "Number of views",
          "readOnly": true,
          "type": "integer"
        },
        "width": {
          "description": "The width in pixels",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaPlayableEntryBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseEntryFilter"
        }
      ],
      "description": "",
      "properties": {
        "durationGreaterThan": {
          "type": "integer"
        },
        "durationGreaterThanOrEqual": {
          "type": "integer"
        },
        "durationLessThan": {
          "type": "integer"
        },
        "durationLessThanOrEqual": {
          "type": "integer"
        },
        "durationTypeMatchOr": {
          "type": "string"
        },
        "lastPlayedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "lastPlayedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaPlayableEntryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPlayableEntryBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaPlayerDeliveryType": {
      "description": "",
      "properties": {
        "enabledByDefault": {
          "type": "boolean"
        },
        "flashvars": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "minVersion": {
          "type": "string"
        }
      }
    },
    "KalturaPlayerEmbedCodeType": {
      "description": "",
      "properties": {
        "entryOnly": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "minVersion": {
          "type": "string"
        }
      }
    },
    "KalturaPlaylist": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseEntry"
        }
      ],
      "description": "",
      "properties": {
        "duration": {
          "description": "The duration in seconds",
          "readOnly": true,
          "type": "integer"
        },
        "executeUrl": {
          "description": "The url for this playlist",
          "readOnly": true,
          "type": "string"
        },
        "filters": {
          "items": {
            "$ref": "#/definitions/KalturaMediaEntryFilterForPlaylist"
          },
          "type": "array"
        },
        "playlistContent": {
          "description": "Content of the playlist - \n\t XML if the playlistType is dynamic \n\t text if the playlistType is static \n\t url if the playlistType is mRss",
          "type": "string"
        },
        "playlistType": {
          "description": "Type of playlist",
          "enum": [
            3,
            10,
            101
          ],
          "enumLabels": [
            "STATIC_LIST",
            "DYNAMIC",
            "EXTERNAL"
          ],
          "type": "integer"
        },
        "plays": {
          "description": "Number of plays",
          "readOnly": true,
          "type": "integer"
        },
        "totalResults": {
          "description": "Maximum count of results to be returned in playlist execution",
          "type": "integer"
        },
        "views": {
          "description": "Number of views",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaPlaylistBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseEntryFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaPlaylistFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPlaylistBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaPlaylistListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPlaylist"
          },
          "type": "array"
        }
      }
    },
    "KalturaPluginData": {
      "description": "",
      "properties": {}
    },
    "KalturaPostConvertJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaConvartableJobData"
        }
      ],
      "description": "",
      "properties": {
        "createThumb": {
          "description": "Indicates if a thumbnail should be created",
          "type": "boolean"
        },
        "customData": {
          "type": "string"
        },
        "flavorAssetId": {
          "type": "string"
        },
        "thumbBitrate": {
          "description": "The bit rate of the movie, will be used to comapare if this thumbnail is the best we can have",
          "type": "integer"
        },
        "thumbHeight": {
          "description": "The height of the movie, will be used to comapare if this thumbnail is the best we can have",
          "type": "integer"
        },
        "thumbOffset": {
          "description": "The position of the thumbnail in the media file",
          "type": "integer"
        },
        "thumbPath": {
          "description": "The path of the created thumbnail",
          "type": "string"
        }
      }
    },
    "KalturaPreviewRestriction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSessionRestriction"
        }
      ],
      "description": "",
      "properties": {
        "previewLength": {
          "description": "The preview restriction length",
          "type": "integer"
        }
      }
    },
    "KalturaProvisionJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "backupEncoderIP": {
          "type": "string"
        },
        "backupStreamID": {
          "type": "string"
        },
        "encoderIP": {
          "type": "string"
        },
        "encoderPassword": {
          "type": "string"
        },
        "encoderUsername": {
          "type": "string"
        },
        "endDate": {
          "type": "integer"
        },
        "mediaType": {
          "type": "integer"
        },
        "primaryBroadcastingUrl": {
          "type": "string"
        },
        "returnVal": {
          "type": "string"
        },
        "rtmp": {
          "type": "string"
        },
        "secondaryBroadcastingUrl": {
          "type": "string"
        },
        "streamID": {
          "type": "string"
        },
        "streamName": {
          "type": "string"
        }
      }
    },
    "KalturaQuestionCuePoint": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCuePoint"
        }
      ],
      "description": "",
      "properties": {
        "explanation": {
          "type": "string"
        },
        "hint": {
          "type": "string"
        },
        "optionalAnswers": {
          "items": {
            "$ref": "#/definitions/KalturaOptionalAnswer"
          },
          "type": "array"
        },
        "question": {
          "type": "string"
        }
      }
    },
    "KalturaQuestionCuePointBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCuePointFilter"
        }
      ],
      "description": "",
      "properties": {
        "questionLike": {
          "type": "string"
        },
        "questionMultiLikeAnd": {
          "type": "string"
        },
        "questionMultiLikeOr": {
          "type": "string"
        }
      }
    },
    "KalturaQuestionCuePointFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaQuestionCuePointBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaQuiz": {
      "description": "",
      "properties": {
        "allowAnswerUpdate": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "showCorrectAfterSubmission": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "showCorrectKeyOnAnswer": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "showResultOnAnswer": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "uiAttributes": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        },
        "version": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaQuizAdvancedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSearchItem"
        }
      ],
      "description": "",
      "properties": {
        "isQuiz": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaQuizFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "entryIdEqual": {
          "description": "This filter should be in use for retrieving only a specific quiz entry (identified by its entryId).",
          "type": "string"
        },
        "entryIdIn": {
          "description": "This filter should be in use for retrieving few specific quiz entries (string should include comma separated list of entryId strings).",
          "type": "string"
        }
      }
    },
    "KalturaQuizListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaQuiz"
          },
          "type": "array"
        }
      }
    },
    "KalturaQuizUserEntry": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUserEntry"
        }
      ],
      "description": "",
      "properties": {
        "score": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaQuizUserEntryBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUserEntryFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaQuizUserEntryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaQuizUserEntryBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaRecalculateCacheJobData": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaRecalculateResponseProfileCacheJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRecalculateCacheJobData"
        }
      ],
      "description": "",
      "properties": {
        "cachedObjectType": {
          "description": "Class name",
          "type": "string"
        },
        "endObjectKey": {
          "type": "string"
        },
        "ksType": {
          "enum": [
            0,
            2
          ],
          "enumLabels": [
            "USER",
            "ADMIN"
          ],
          "type": "integer"
        },
        "objectId": {
          "type": "string"
        },
        "protocol": {
          "description": "http / https",
          "type": "string"
        },
        "startObjectKey": {
          "type": "string"
        },
        "userRoles": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        }
      }
    },
    "KalturaRegexCondition": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMatchCondition"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaRelatedFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaRemoteDropFolder": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDropFolder"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaRemoteDropFolderBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDropFolderFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaRemoteDropFolderFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRemoteDropFolderBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaRemotePath": {
      "description": "",
      "properties": {
        "storageProfileId": {
          "readOnly": true,
          "type": "integer"
        },
        "uri": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaRemotePathListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaRemotePath"
          },
          "type": "array"
        }
      }
    },
    "KalturaRemoteStorageResource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUrlResource"
        }
      ],
      "description": "Used to ingest media that is available on remote server and accessible using the supplied URL, the media file won't be downloaded but a file sync object of URL type will point to the media URL.\n ",
      "properties": {
        "storageProfileId": {
          "description": "ID of storage profile to be associated with the created file sync, used for file serving URL composing.",
          "type": "integer"
        }
      }
    },
    "KalturaRemoteStorageResources": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaContentResource"
        }
      ],
      "description": "Used to ingest media that is available on remote server and accessible using the supplied URL, the media file won't be downloaded but a file sync object of URL type will point to the media URL.\n ",
      "properties": {
        "resources": {
          "items": {
            "$ref": "#/definitions/KalturaRemoteStorageResource"
          },
          "type": "array"
        }
      }
    },
    "KalturaReport": {
      "description": "",
      "properties": {
        "createdAt": {
          "description": "Creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "description": "Report description",
          "type": "string"
        },
        "id": {
          "description": "Report id",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Report name",
          "type": "string"
        },
        "partnerId": {
          "description": "Partner id associated with the report",
          "type": "integer"
        },
        "query": {
          "description": "Report query",
          "type": "string"
        },
        "systemName": {
          "description": "Used to identify system reports in a friendly way",
          "type": "string"
        },
        "updatedAt": {
          "description": "Last update date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaReportBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        }
      }
    },
    "KalturaReportBaseTotal": {
      "description": "",
      "properties": {
        "data": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "KalturaReportFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaReportBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaReportGraph": {
      "description": "",
      "properties": {
        "data": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "KalturaReportInputBaseFilter": {
      "description": "",
      "properties": {
        "fromDate": {
          "description": "Start date as Unix timestamp (In seconds)",
          "type": "integer"
        },
        "fromDay": {
          "description": "Start day as string (YYYYMMDD)",
          "type": "string"
        },
        "toDate": {
          "description": "End date as Unix timestamp (In seconds)",
          "type": "integer"
        },
        "toDay": {
          "description": "End date as string (YYYYMMDD)",
          "type": "string"
        }
      }
    },
    "KalturaReportInputFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaReportInputBaseFilter"
        }
      ],
      "description": "",
      "properties": {
        "categories": {
          "description": "Search onjects in specified categories",
          "type": "string"
        },
        "interval": {
          "description": "Aggregated results according to interval",
          "enum": [
            "days",
            "months"
          ],
          "enumLabels": [
            "DAYS",
            "MONTHS"
          ],
          "type": "string"
        },
        "keywords": {
          "description": "Search keywords to filter objects",
          "type": "string"
        },
        "searchInAdminTags": {
          "description": "Search keywords in onjects admin tags",
          "type": "boolean"
        },
        "searchInTags": {
          "description": "Search keywords in onjects tags",
          "type": "boolean"
        },
        "timeZoneOffset": {
          "description": "Time zone offset in minutes",
          "type": "integer"
        }
      }
    },
    "KalturaReportListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaReport"
          },
          "type": "array"
        }
      }
    },
    "KalturaReportResponse": {
      "description": "",
      "properties": {
        "columns": {
          "type": "string"
        },
        "results": {
          "items": {
            "$ref": "#/definitions/KalturaString"
          },
          "type": "array"
        }
      }
    },
    "KalturaReportTable": {
      "description": "",
      "properties": {
        "data": {
          "readOnly": true,
          "type": "string"
        },
        "header": {
          "readOnly": true,
          "type": "string"
        },
        "totalCount": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaReportTotal": {
      "description": "",
      "properties": {
        "data": {
          "type": "string"
        },
        "header": {
          "type": "string"
        }
      }
    },
    "KalturaRequestConfiguration": {
      "description": "Define client request optional configurations\n /",
      "properties": {
        "ks": {
          "description": "Kaltura API session",
          "type": "string"
        },
        "partnerId": {
          "description": "Impersonated partner id",
          "type": "integer"
        },
        "responseProfile": {
          "$ref": "#/definitions/KalturaBaseResponseProfile"
        }
      }
    },
    "KalturaResource": {
      "abstract": true,
      "description": "Used to ingest entry object, as single resource or list of resources accompanied by asset params ids.\n ",
      "properties": {}
    },
    "KalturaResponseProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDetachedResponseProfile"
        }
      ],
      "description": "",
      "properties": {
        "createdAt": {
          "description": "Creation time as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "Auto generated numeric identifier",
          "readOnly": true,
          "type": "integer"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "ENABLED",
            "DELETED"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "systemName": {
          "description": "Unique system name",
          "type": "string"
        },
        "updatedAt": {
          "description": "Update time as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "version": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaResponseProfileBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "ENABLED",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaResponseProfileCacheRecalculateOptions": {
      "description": "",
      "properties": {
        "cachedObjectType": {
          "description": "Class name",
          "type": "string"
        },
        "endObjectKey": {
          "type": "string"
        },
        "isFirstLoop": {
          "type": "boolean"
        },
        "jobCreatedAt": {
          "type": "integer"
        },
        "limit": {
          "description": "Maximum number of keys to recalculate",
          "type": "integer"
        },
        "objectId": {
          "type": "string"
        },
        "startObjectKey": {
          "type": "string"
        }
      }
    },
    "KalturaResponseProfileCacheRecalculateResults": {
      "description": "",
      "properties": {
        "lastObjectKey": {
          "description": "Last recalculated id",
          "type": "string"
        },
        "recalculated": {
          "description": "Number of recalculated keys",
          "type": "integer"
        }
      }
    },
    "KalturaResponseProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaResponseProfileBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaResponseProfileHolder": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseResponseProfile"
        }
      ],
      "description": "",
      "properties": {
        "id": {
          "description": "Auto generated numeric identifier",
          "type": "integer"
        },
        "systemName": {
          "description": "Unique system name",
          "type": "string"
        }
      }
    },
    "KalturaResponseProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaResponseProfile"
          },
          "type": "array"
        }
      }
    },
    "KalturaResponseProfileMapping": {
      "description": "",
      "properties": {
        "allowNull": {
          "type": "boolean"
        },
        "filterProperty": {
          "type": "string"
        },
        "parentProperty": {
          "type": "string"
        }
      }
    },
    "KalturaRule": {
      "description": "",
      "properties": {
        "actions": {
          "items": {
            "$ref": "#/definitions/KalturaRuleAction"
          },
          "type": "array"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/KalturaCondition"
          },
          "type": "array"
        },
        "contexts": {
          "items": {
            "$ref": "#/definitions/KalturaContextTypeHolder"
          },
          "type": "array"
        },
        "message": {
          "description": "Message to be thrown to the player in case the rule is fulfilled",
          "type": "string"
        },
        "stopProcessing": {
          "description": "Indicates that this rule is enough and no need to continue checking the rest of the rules",
          "type": "boolean"
        }
      }
    },
    "KalturaRuleAction": {
      "abstract": true,
      "description": "",
      "properties": {
        "type": {
          "description": "The type of the action",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "enumLabels": [
            "BLOCK",
            "PREVIEW",
            "LIMIT_FLAVORS",
            "ADD_TO_STORAGE",
            "LIMIT_DELIVERY_PROFILES",
            "SERVE_FROM_REMOTE_SERVER"
          ],
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaScheduledTaskJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "maxResults": {
          "type": "integer"
        },
        "referenceTime": {
          "type": "integer"
        },
        "resultsFilePath": {
          "type": "string"
        }
      }
    },
    "KalturaScheduledTaskProfile": {
      "description": "",
      "properties": {
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "lastExecutionStartedAt": {
          "type": "integer"
        },
        "maxTotalCountAllowed": {
          "description": "The maximum number of result count allowed to be processed by this profile per execution",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "objectFilter": {
          "$ref": "#/definitions/KalturaFilter"
        },
        "objectFilterEngineType": {
          "description": "The type of engine to use to list objects using the given \"objectFilter\"",
          "enum": [
            "1"
          ],
          "enumLabels": [
            "ENTRY"
          ],
          "type": "string"
        },
        "objectTasks": {
          "items": {
            "$ref": "#/definitions/KalturaObjectTask"
          },
          "type": "array"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "enumLabels": [
            "DISABLED",
            "ACTIVE",
            "DELETED",
            "SUSPENDED",
            "DRY_RUN_ONLY"
          ],
          "type": "integer"
        },
        "systemName": {
          "type": "string"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaScheduledTaskProfileBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "lastExecutionStartedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "lastExecutionStartedAtLessThanOrEqual": {
          "type": "integer"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "enumLabels": [
            "DISABLED",
            "ACTIVE",
            "DELETED",
            "SUSPENDED",
            "DRY_RUN_ONLY"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaScheduledTaskProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaScheduledTaskProfileBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaScheduledTaskProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaScheduledTaskProfile"
          },
          "type": "array"
        }
      }
    },
    "KalturaScheduler": {
      "description": "",
      "properties": {
        "configs": {
          "items": {
            "$ref": "#/definitions/KalturaSchedulerConfig"
          },
          "type": "array"
        },
        "configuredId": {
          "description": "The id as configured in the batch config",
          "type": "integer"
        },
        "createdAt": {
          "description": "creation time",
          "readOnly": true,
          "type": "integer"
        },
        "host": {
          "description": "The host name",
          "type": "string"
        },
        "id": {
          "description": "The id of the Scheduler",
          "readOnly": true,
          "type": "integer"
        },
        "lastStatus": {
          "description": "last status time",
          "readOnly": true,
          "type": "integer"
        },
        "lastStatusStr": {
          "description": "last status formated",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The scheduler name",
          "type": "string"
        },
        "statuses": {
          "items": {
            "$ref": "#/definitions/KalturaSchedulerStatus"
          },
          "type": "array"
        },
        "workers": {
          "items": {
            "$ref": "#/definitions/KalturaSchedulerWorker"
          },
          "type": "array"
        }
      }
    },
    "KalturaSchedulerConfig": {
      "description": "",
      "properties": {
        "commandId": {
          "description": "Id of the control panel command that created this config item",
          "type": "string"
        },
        "commandStatus": {
          "description": "The status of the control panel command",
          "type": "string"
        },
        "createdBy": {
          "description": "Creator name",
          "type": "string"
        },
        "id": {
          "description": "The id of the Category",
          "readOnly": true,
          "type": "integer"
        },
        "schedulerConfiguredId": {
          "description": "The configured id of the scheduler",
          "type": "integer"
        },
        "schedulerId": {
          "description": "The id of the scheduler",
          "type": "integer"
        },
        "schedulerName": {
          "description": "The name of the scheduler",
          "type": "string"
        },
        "updatedBy": {
          "description": "Updater name",
          "type": "string"
        },
        "value": {
          "description": "The value of the variable",
          "type": "string"
        },
        "variable": {
          "description": "The name of the variable",
          "type": "string"
        },
        "variablePart": {
          "description": "The part of the variable",
          "type": "string"
        },
        "workerConfiguredId": {
          "description": "The configured id of the job worker",
          "type": "integer"
        },
        "workerId": {
          "description": "The id of the job worker",
          "type": "integer"
        },
        "workerName": {
          "description": "The name of the job worker",
          "type": "string"
        }
      }
    },
    "KalturaSchedulerListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaScheduler"
          },
          "type": "array"
        }
      }
    },
    "KalturaSchedulerStatus": {
      "description": "",
      "properties": {
        "id": {
          "description": "The id of the Category",
          "readOnly": true,
          "type": "integer"
        },
        "schedulerConfiguredId": {
          "description": "The configured id of the scheduler",
          "type": "integer"
        },
        "schedulerId": {
          "description": "The id of the scheduler",
          "readOnly": true,
          "type": "integer"
        },
        "type": {
          "description": "The status type",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "enumLabels": [
            "RUNNING_BATCHES_COUNT",
            "RUNNING_BATCHES_CPU",
            "RUNNING_BATCHES_MEMORY",
            "RUNNING_BATCHES_NETWORK",
            "RUNNING_BATCHES_DISC_IO",
            "RUNNING_BATCHES_DISC_SPACE",
            "RUNNING_BATCHES_IS_RUNNING"
          ],
          "type": "integer"
        },
        "value": {
          "description": "The status value",
          "type": "integer"
        },
        "workerConfiguredId": {
          "description": "The configured id of the job worker",
          "type": "integer"
        },
        "workerId": {
          "description": "The id of the worker",
          "readOnly": true,
          "type": "integer"
        },
        "workerType": {
          "description": "The type of the job worker.",
          "enum": [
            "0",
            "caption.parsemultilanguagecaptionasset",
            "captionSearch.parseCaptionAsset",
            "contentDistribution.DistributionDelete",
            "contentDistribution.DistributionDisable",
            "contentDistribution.DistributionEnable",
            "contentDistribution.DistributionFetchReport",
            "contentDistribution.DistributionSubmit",
            "contentDistribution.DistributionSync",
            "contentDistribution.DistributionUpdate",
            "dropFolder.DropFolderContentProcessor",
            "dropFolder.DropFolderWatcher",
            "eventNotification.EventNotificationHandler",
            "scheduledTask.ScheduledTask",
            "tagSearch.IndexTagsByPrivacyContext",
            "tagSearch.TagResolve",
            "virusScan.VirusScan",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "10",
            "11",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41"
          ],
          "enumLabels": [
            "CONVERT",
            "PARSE_MULTI_LANGUAGE_CAPTION_ASSET",
            "PARSE_CAPTION_ASSET",
            "DISTRIBUTION_DELETE",
            "DISTRIBUTION_DISABLE",
            "DISTRIBUTION_ENABLE",
            "DISTRIBUTION_FETCH_REPORT",
            "DISTRIBUTION_SUBMIT",
            "DISTRIBUTION_SYNC",
            "DISTRIBUTION_UPDATE",
            "DROP_FOLDER_CONTENT_PROCESSOR",
            "DROP_FOLDER_WATCHER",
            "EVENT_NOTIFICATION_HANDLER",
            "SCHEDULED_TASK",
            "INDEX_TAGS",
            "TAG_RESOLVE",
            "VIRUS_SCAN",
            "IMPORT",
            "DELETE",
            "FLATTEN",
            "BULKUPLOAD",
            "DVDCREATOR",
            "DOWNLOAD",
            "OOCONVERT",
            "CONVERT_PROFILE",
            "POSTCONVERT",
            "EXTRACT_MEDIA",
            "MAIL",
            "NOTIFICATION",
            "CLEANUP",
            "SCHEDULER_HELPER",
            "BULKDOWNLOAD",
            "DB_CLEANUP",
            "PROVISION_PROVIDE",
            "CONVERT_COLLECTION",
            "STORAGE_EXPORT",
            "PROVISION_DELETE",
            "STORAGE_DELETE",
            "EMAIL_INGESTION",
            "METADATA_IMPORT",
            "METADATA_TRANSFORM",
            "FILESYNC_IMPORT",
            "CAPTURE_THUMB",
            "DELETE_FILE",
            "INDEX",
            "MOVE_CATEGORY_ENTRIES",
            "COPY",
            "CONCAT",
            "CONVERT_LIVE_SEGMENT",
            "COPY_PARTNER",
            "VALIDATE_LIVE_MEDIA_SERVERS",
            "SYNC_CATEGORY_PRIVACY_CONTEXT",
            "LIVE_REPORT_EXPORT",
            "RECALCULATE_CACHE"
          ],
          "type": "string"
        }
      }
    },
    "KalturaSchedulerWorker": {
      "description": "",
      "properties": {
        "avgWait": {
          "description": "Avarage time between creation and queue time",
          "type": "integer"
        },
        "avgWork": {
          "description": "Avarage time between queue time end finish time",
          "type": "integer"
        },
        "configs": {
          "items": {
            "$ref": "#/definitions/KalturaSchedulerConfig"
          },
          "type": "array"
        },
        "configuredId": {
          "description": "The id as configured in the batch config",
          "type": "integer"
        },
        "id": {
          "description": "The id of the Worker",
          "readOnly": true,
          "type": "integer"
        },
        "lastStatus": {
          "description": "last status time",
          "type": "integer"
        },
        "lastStatusStr": {
          "description": "last status formated",
          "type": "string"
        },
        "lockedJobs": {
          "items": {
            "$ref": "#/definitions/KalturaBatchJob"
          },
          "type": "array"
        },
        "name": {
          "description": "The scheduler name",
          "type": "string"
        },
        "schedulerConfiguredId": {
          "description": "The id of the scheduler as configured in the batch config",
          "type": "integer"
        },
        "schedulerId": {
          "description": "The id of the Scheduler",
          "type": "integer"
        },
        "statuses": {
          "items": {
            "$ref": "#/definitions/KalturaSchedulerStatus"
          },
          "type": "array"
        },
        "type": {
          "description": "The worker type",
          "enum": [
            "0",
            "caption.parsemultilanguagecaptionasset",
            "captionSearch.parseCaptionAsset",
            "contentDistribution.DistributionDelete",
            "contentDistribution.DistributionDisable",
            "contentDistribution.DistributionEnable",
            "contentDistribution.DistributionFetchReport",
            "contentDistribution.DistributionSubmit",
            "contentDistribution.DistributionSync",
            "contentDistribution.DistributionUpdate",
            "dropFolder.DropFolderContentProcessor",
            "dropFolder.DropFolderWatcher",
            "eventNotification.EventNotificationHandler",
            "scheduledTask.ScheduledTask",
            "tagSearch.IndexTagsByPrivacyContext",
            "tagSearch.TagResolve",
            "virusScan.VirusScan",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "10",
            "11",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41"
          ],
          "enumLabels": [
            "CONVERT",
            "PARSE_MULTI_LANGUAGE_CAPTION_ASSET",
            "PARSE_CAPTION_ASSET",
            "DISTRIBUTION_DELETE",
            "DISTRIBUTION_DISABLE",
            "DISTRIBUTION_ENABLE",
            "DISTRIBUTION_FETCH_REPORT",
            "DISTRIBUTION_SUBMIT",
            "DISTRIBUTION_SYNC",
            "DISTRIBUTION_UPDATE",
            "DROP_FOLDER_CONTENT_PROCESSOR",
            "DROP_FOLDER_WATCHER",
            "EVENT_NOTIFICATION_HANDLER",
            "SCHEDULED_TASK",
            "INDEX_TAGS",
            "TAG_RESOLVE",
            "VIRUS_SCAN",
            "IMPORT",
            "DELETE",
            "FLATTEN",
            "BULKUPLOAD",
            "DVDCREATOR",
            "DOWNLOAD",
            "OOCONVERT",
            "CONVERT_PROFILE",
            "POSTCONVERT",
            "EXTRACT_MEDIA",
            "MAIL",
            "NOTIFICATION",
            "CLEANUP",
            "SCHEDULER_HELPER",
            "BULKDOWNLOAD",
            "DB_CLEANUP",
            "PROVISION_PROVIDE",
            "CONVERT_COLLECTION",
            "STORAGE_EXPORT",
            "PROVISION_DELETE",
            "STORAGE_DELETE",
            "EMAIL_INGESTION",
            "METADATA_IMPORT",
            "METADATA_TRANSFORM",
            "FILESYNC_IMPORT",
            "CAPTURE_THUMB",
            "DELETE_FILE",
            "INDEX",
            "MOVE_CATEGORY_ENTRIES",
            "COPY",
            "CONCAT",
            "CONVERT_LIVE_SEGMENT",
            "COPY_PARTNER",
            "VALIDATE_LIVE_MEDIA_SERVERS",
            "SYNC_CATEGORY_PRIVACY_CONTEXT",
            "LIVE_REPORT_EXPORT",
            "RECALCULATE_CACHE"
          ],
          "type": "string"
        },
        "typeName": {
          "description": "The friendly name of the type",
          "type": "string"
        }
      }
    },
    "KalturaSchedulerWorkerListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSchedulerWorker"
          },
          "type": "array"
        }
      }
    },
    "KalturaScope": {
      "description": "",
      "properties": {}
    },
    "KalturaScpDropFolder": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSshDropFolder"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaScpDropFolderBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSshDropFolderFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaScpDropFolderFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaScpDropFolderBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaSearch": {
      "description": "",
      "properties": {
        "authData": {
          "type": "string"
        },
        "extraData": {
          "description": "Use this field to pass dynamic data for searching\n\t For example - if you set this field to \"mymovies_$partner_id\"\n\t The $partner_id will be automatically replcaed with your real partner Id",
          "type": "string"
        },
        "keyWords": {
          "type": "string"
        },
        "mediaType": {
          "enum": [
            1,
            2,
            5,
            201,
            202,
            203,
            204
          ],
          "enumLabels": [
            "VIDEO",
            "IMAGE",
            "AUDIO",
            "LIVE_STREAM_FLASH",
            "LIVE_STREAM_WINDOWS_MEDIA",
            "LIVE_STREAM_REAL_MEDIA",
            "LIVE_STREAM_QUICKTIME"
          ],
          "type": "integer"
        },
        "searchSource": {
          "enum": [
            3,
            4,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            20,
            21,
            22,
            23,
            24,
            28,
            100
          ],
          "enumLabels": [
            "FLICKR",
            "YOUTUBE",
            "MYSPACE",
            "PHOTOBUCKET",
            "JAMENDO",
            "CCMIXTER",
            "NYPL",
            "CURRENT",
            "MEDIA_COMMONS",
            "KALTURA",
            "KALTURA_USER_CLIPS",
            "ARCHIVE_ORG",
            "KALTURA_PARTNER",
            "METACAFE",
            "SEARCH_PROXY",
            "PARTNER_SPECIFIC"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaSearchAuthData": {
      "description": "",
      "properties": {
        "authData": {
          "description": "The authentication data that further should be used for search",
          "type": "string"
        },
        "loginUrl": {
          "description": "Login URL when user need to sign-in and authorize the search",
          "type": "string"
        },
        "message": {
          "description": "Information when there was an error",
          "type": "string"
        }
      }
    },
    "KalturaSearchComparableCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSearchCondition"
        }
      ],
      "description": "",
      "properties": {
        "comparison": {
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5"
          ],
          "enumLabels": [
            "EQUAL",
            "GREATER_THAN",
            "GREATER_THAN_OR_EQUAL",
            "LESS_THAN",
            "LESS_THAN_OR_EQUAL"
          ],
          "type": "string"
        }
      }
    },
    "KalturaSearchCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSearchItem"
        }
      ],
      "description": "",
      "properties": {
        "field": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "KalturaSearchItem": {
      "abstract": true,
      "description": "",
      "properties": {}
    },
    "KalturaSearchOperator": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSearchItem"
        }
      ],
      "description": "",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/KalturaSearchItem"
          },
          "type": "array"
        },
        "type": {
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "SEARCH_AND",
            "SEARCH_OR"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaSearchResult": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSearch"
        }
      ],
      "description": "",
      "properties": {
        "credit": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fileExt": {
          "type": "string"
        },
        "flashPlaybackType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "licenseType": {
          "enum": [
            -1,
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15
          ],
          "enumLabels": [
            "UNKNOWN",
            "NONE",
            "COPYRIGHTED",
            "PUBLIC_DOMAIN",
            "CREATIVECOMMONS_ATTRIBUTION",
            "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
            "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
            "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
            "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
            "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
            "GFDL",
            "GPL",
            "AFFERO_GPL",
            "LGPL",
            "BSD",
            "APACHE",
            "MOZILLA"
          ],
          "type": "integer"
        },
        "sourceLink": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "thumbUrl": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "KalturaSearchResultResponse": {
      "description": "",
      "properties": {
        "needMediaInfo": {
          "readOnly": true,
          "type": "boolean"
        },
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSearchResult"
          },
          "type": "array"
        }
      }
    },
    "KalturaServerFileResource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDataCenterContentResource"
        }
      ],
      "description": "Used to ingest media file that is already accessible on the shared disc.\n ",
      "properties": {
        "localFilePath": {
          "description": "Full path to the local file",
          "type": "string"
        }
      }
    },
    "KalturaSessionInfo": {
      "description": "",
      "properties": {
        "expiry": {
          "readOnly": true,
          "type": "integer"
        },
        "ks": {
          "readOnly": true,
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "privileges": {
          "readOnly": true,
          "type": "string"
        },
        "sessionType": {
          "enum": [
            0,
            2
          ],
          "enumLabels": [
            "USER",
            "ADMIN"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "userId": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaSessionRestriction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseRestriction"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaSftpDropFolder": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSshDropFolder"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaSftpDropFolderBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSshDropFolderFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaSftpDropFolderFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSftpDropFolderBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaShortLink": {
      "description": "",
      "properties": {
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "expiresAt": {
          "type": "integer"
        },
        "fullUrl": {
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "ENABLED",
            "DELETED"
          ],
          "type": "integer"
        },
        "systemName": {
          "type": "string"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "KalturaShortLinkBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "expiresAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "expiresAtLessThanOrEqual": {
          "type": "integer"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "ENABLED",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        },
        "userIdEqual": {
          "type": "string"
        },
        "userIdIn": {
          "type": "string"
        }
      }
    },
    "KalturaShortLinkFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaShortLinkBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaShortLinkListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaShortLink"
          },
          "type": "array"
        }
      }
    },
    "KalturaSiteCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMatchCondition"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaSiteRestriction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseRestriction"
        }
      ],
      "description": "",
      "properties": {
        "siteList": {
          "description": "Comma separated list of sites (domains) to allow or deny",
          "type": "string"
        },
        "siteRestrictionType": {
          "description": "The site restriction type (allow or deny)",
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "RESTRICT_SITE_LIST",
            "ALLOW_SITE_LIST"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaSourceFileSyncDescriptor": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFileSyncDescriptor"
        }
      ],
      "description": "",
      "properties": {
        "actualFileSyncLocalPath": {
          "description": "The translated path as used by the scheduler",
          "type": "string"
        },
        "assetId": {
          "type": "string"
        },
        "assetParamsId": {
          "type": "integer"
        }
      }
    },
    "KalturaSshDropFolder": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRemoteDropFolder"
        }
      ],
      "description": "",
      "properties": {
        "host": {
          "type": "string"
        },
        "passPhrase": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "privateKey": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "KalturaSshDropFolderBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRemoteDropFolderFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaSshDropFolderFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSshDropFolderBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaSshImportJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaImportJobData"
        }
      ],
      "description": "",
      "properties": {
        "passPhrase": {
          "type": "string"
        },
        "privateKey": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        }
      }
    },
    "KalturaSshUrlResource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUrlResource"
        }
      ],
      "description": "Used to ingest media that is available on remote SSH server and accessible using the supplied URL, media file will be downloaded using import job in order to make the asset ready.\n ",
      "properties": {
        "keyPassphrase": {
          "description": "Passphrase for SSH keys",
          "type": "string"
        },
        "privateKey": {
          "description": "SSH private key",
          "type": "string"
        },
        "publicKey": {
          "description": "SSH public key",
          "type": "string"
        }
      }
    },
    "KalturaStartWidgetSessionResponse": {
      "description": "",
      "properties": {
        "ks": {
          "readOnly": true,
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "userId": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaStatsEvent": {
      "description": "Will hold data from the Kaltura UI components to be passed on to the reports and analytics system\n ",
      "properties": {
        "applicationId": {
          "description": "kaltura application name",
          "type": "string"
        },
        "clientVer": {
          "type": "string"
        },
        "contextId": {
          "type": "integer"
        },
        "controlId": {
          "description": "the id of the GUI control - will be used in the future to better understand what the user clicked",
          "type": "string"
        },
        "currentPoint": {
          "description": "the timestamp along the video when the event happend",
          "type": "integer"
        },
        "duration": {
          "description": "the duration of the video in milliseconds - will make it much faster than quering the db for each entry",
          "type": "integer"
        },
        "entryId": {
          "type": "string"
        },
        "eventTimestamp": {
          "description": "the client's timestamp of this event",
          "type": "number"
        },
        "eventType": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40
          ],
          "enumLabels": [
            "WIDGET_LOADED",
            "MEDIA_LOADED",
            "PLAY",
            "PLAY_REACHED_25",
            "PLAY_REACHED_50",
            "PLAY_REACHED_75",
            "PLAY_REACHED_100",
            "OPEN_EDIT",
            "OPEN_VIRAL",
            "OPEN_DOWNLOAD",
            "OPEN_REPORT",
            "BUFFER_START",
            "BUFFER_END",
            "OPEN_FULL_SCREEN",
            "CLOSE_FULL_SCREEN",
            "REPLAY",
            "SEEK",
            "OPEN_UPLOAD",
            "SAVE_PUBLISH",
            "CLOSE_EDITOR",
            "PRE_BUMPER_PLAYED",
            "POST_BUMPER_PLAYED",
            "BUMPER_CLICKED",
            "PREROLL_STARTED",
            "MIDROLL_STARTED",
            "POSTROLL_STARTED",
            "OVERLAY_STARTED",
            "PREROLL_CLICKED",
            "MIDROLL_CLICKED",
            "POSTROLL_CLICKED",
            "OVERLAY_CLICKED",
            "PREROLL_25",
            "PREROLL_50",
            "PREROLL_75",
            "MIDROLL_25",
            "MIDROLL_50",
            "MIDROLL_75",
            "POSTROLL_25",
            "POSTROLL_50",
            "POSTROLL_75"
          ],
          "type": "integer"
        },
        "featureType": {
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "NONE",
            "RELATED"
          ],
          "type": "integer"
        },
        "isFirstInSession": {
          "description": "will indicate if the event is thrown for the first video in the session",
          "type": "boolean"
        },
        "newPoint": {
          "description": "timestamp of the new point on the timeline of the video after the user seeks",
          "type": "integer"
        },
        "partnerId": {
          "type": "integer"
        },
        "processDuration": {
          "description": "the time in milliseconds the event took",
          "type": "integer"
        },
        "referrer": {
          "description": "the referrer of the client",
          "type": "string"
        },
        "seek": {
          "description": "true if the user ever used seek in this session",
          "type": "boolean"
        },
        "sessionId": {
          "description": "a unique string generated by the client that will represent the client-side session: the primary component will pass it on to other components that sprout from it",
          "type": "string"
        },
        "uiconfId": {
          "type": "integer"
        },
        "uniqueViewer": {
          "description": "the UV cookie - creates in the operational system and should be passed on ofr every event",
          "type": "string"
        },
        "userId": {
          "description": "the partner's user id",
          "type": "string"
        },
        "userIp": {
          "description": "will be retrieved from the request of the user",
          "readOnly": true,
          "type": "string"
        },
        "widgetId": {
          "type": "string"
        }
      }
    },
    "KalturaStatsKmcEvent": {
      "description": "Will hold data from the Kaltura UI components to be passed on to the reports and analytics system\n ",
      "properties": {
        "clientVer": {
          "type": "string"
        },
        "entryId": {
          "type": "string"
        },
        "eventTimestamp": {
          "description": "the client's timestamp of this event",
          "type": "number"
        },
        "kmcEventActionPath": {
          "type": "string"
        },
        "kmcEventType": {
          "enum": [
            1001,
            1010,
            1011,
            1012,
            1013,
            1014,
            1015,
            1016,
            1017,
            1018,
            1019,
            1020,
            1021,
            1022,
            1023,
            1030,
            1031,
            1032,
            1033,
            1034,
            1035,
            1036,
            1037,
            1038,
            1039,
            1040,
            1041,
            1042,
            1043,
            1044,
            1045,
            1046,
            1047,
            1048,
            1050,
            1051,
            1052,
            1053,
            1054,
            1055,
            1056,
            1057,
            1058,
            1059,
            1070,
            1071,
            1072,
            1073,
            1074,
            1075,
            1076,
            1077,
            1078,
            1079,
            1080,
            1081,
            1082,
            1083,
            1084,
            1085,
            1086,
            1087,
            1088,
            1089
          ],
          "enumLabels": [
            "CONTENT_PAGE_VIEW",
            "CONTENT_ADD_PLAYLIST",
            "CONTENT_EDIT_PLAYLIST",
            "CONTENT_DELETE_PLAYLIST",
            "CONTENT_EDIT_ENTRY",
            "CONTENT_CHANGE_THUMBNAIL",
            "CONTENT_ADD_TAGS",
            "CONTENT_REMOVE_TAGS",
            "CONTENT_ADD_ADMIN_TAGS",
            "CONTENT_REMOVE_ADMIN_TAGS",
            "CONTENT_DOWNLOAD",
            "CONTENT_APPROVE_MODERATION",
            "CONTENT_REJECT_MODERATION",
            "CONTENT_BULK_UPLOAD",
            "CONTENT_ADMIN_KCW_UPLOAD",
            "ACCOUNT_CHANGE_PARTNER_INFO",
            "ACCOUNT_CHANGE_LOGIN_INFO",
            "ACCOUNT_CONTACT_US_USAGE",
            "ACCOUNT_UPDATE_SERVER_SETTINGS",
            "ACCOUNT_ACCOUNT_OVERVIEW",
            "ACCOUNT_ACCESS_CONTROL",
            "ACCOUNT_TRANSCODING_SETTINGS",
            "ACCOUNT_ACCOUNT_UPGRADE",
            "ACCOUNT_SAVE_SERVER_SETTINGS",
            "ACCOUNT_ACCESS_CONTROL_DELETE",
            "ACCOUNT_SAVE_TRANSCODING_SETTINGS",
            "LOGIN",
            "DASHBOARD_IMPORT_CONTENT",
            "DASHBOARD_UPDATE_CONTENT",
            "DASHBOARD_ACCOUNT_CONTACT_US",
            "DASHBOARD_VIEW_REPORTS",
            "DASHBOARD_EMBED_PLAYER",
            "DASHBOARD_EMBED_PLAYLIST",
            "DASHBOARD_CUSTOMIZE_PLAYERS",
            "APP_STUDIO_NEW_PLAYER_SINGLE_VIDEO",
            "APP_STUDIO_NEW_PLAYER_PLAYLIST",
            "APP_STUDIO_NEW_PLAYER_MULTI_TAB_PLAYLIST",
            "APP_STUDIO_EDIT_PLAYER_SINGLE_VIDEO",
            "APP_STUDIO_EDIT_PLAYER_PLAYLIST",
            "APP_STUDIO_EDIT_PLAYER_MULTI_TAB_PLAYLIST",
            "APP_STUDIO_DUPLICATE_PLAYER",
            "CONTENT_CONTENT_GO_TO_PAGE",
            "CONTENT_DELETE_ITEM",
            "CONTENT_DELETE_MIX",
            "REPORTS_AND_ANALYTICS_BANDWIDTH_USAGE_TAB",
            "REPORTS_AND_ANALYTICS_CONTENT_REPORTS_TAB",
            "REPORTS_AND_ANALYTICS_USERS_AND_COMMUNITY_REPORTS_TAB",
            "REPORTS_AND_ANALYTICS_TOP_CONTRIBUTORS",
            "REPORTS_AND_ANALYTICS_MAP_OVERLAYS",
            "REPORTS_AND_ANALYTICS_TOP_SYNDICATIONS",
            "REPORTS_AND_ANALYTICS_TOP_CONTENT",
            "REPORTS_AND_ANALYTICS_CONTENT_DROPOFF",
            "REPORTS_AND_ANALYTICS_CONTENT_INTERACTIONS",
            "REPORTS_AND_ANALYTICS_CONTENT_CONTRIBUTIONS",
            "REPORTS_AND_ANALYTICS_VIDEO_DRILL_DOWN",
            "REPORTS_AND_ANALYTICS_CONTENT_DRILL_DOWN_INTERACTION",
            "REPORTS_AND_ANALYTICS_CONTENT_CONTRIBUTIONS_DRILLDOWN",
            "REPORTS_AND_ANALYTICS_VIDEO_DRILL_DOWN_DROPOFF",
            "REPORTS_AND_ANALYTICS_MAP_OVERLAYS_DRILLDOWN",
            "REPORTS_AND_ANALYTICS_TOP_SYNDICATIONS_DRILL_DOWN",
            "REPORTS_AND_ANALYTICS_BANDWIDTH_USAGE_VIEW_MONTHLY",
            "REPORTS_AND_ANALYTICS_BANDWIDTH_USAGE_VIEW_YEARLY",
            "CONTENT_ENTRY_DRILLDOWN",
            "CONTENT_OPEN_PREVIEW_AND_EMBED"
          ],
          "type": "integer"
        },
        "partnerId": {
          "type": "integer"
        },
        "sessionId": {
          "description": "a unique string generated by the client that will represent the client-side session: the primary component will pass it on to other components that sprout from it",
          "type": "string"
        },
        "uiconfId": {
          "type": "integer"
        },
        "userId": {
          "description": "the partner's user id",
          "type": "string"
        },
        "userIp": {
          "description": "will be retrieved from the request of the user",
          "readOnly": true,
          "type": "string"
        },
        "widgetId": {
          "type": "string"
        }
      }
    },
    "KalturaStorageAddAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRuleAction"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaStorageDeleteJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStorageJobData"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaStorageExportJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStorageJobData"
        }
      ],
      "description": "",
      "properties": {
        "createLink": {
          "type": "boolean"
        },
        "force": {
          "type": "boolean"
        }
      }
    },
    "KalturaStorageExportObjectTask": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaObjectTask"
        }
      ],
      "description": "",
      "properties": {
        "storageId": {
          "description": "Storage profile id",
          "type": "string"
        }
      }
    },
    "KalturaStorageJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "destFileSyncStoredPath": {
          "type": "string"
        },
        "ftpPassiveMode": {
          "type": "boolean"
        },
        "serverPassPhrase": {
          "type": "string"
        },
        "serverPassword": {
          "type": "string"
        },
        "serverPrivateKey": {
          "type": "string"
        },
        "serverPublicKey": {
          "type": "string"
        },
        "serverUrl": {
          "type": "string"
        },
        "serverUsername": {
          "type": "string"
        },
        "srcFileSyncId": {
          "type": "string"
        },
        "srcFileSyncLocalPath": {
          "type": "string"
        }
      }
    },
    "KalturaStorageProfile": {
      "description": "",
      "properties": {
        "allowAutoDelete": {
          "description": "Flag sugnifying that the storage exported content should be deleted when soure entry is deleted",
          "type": "integer"
        },
        "createFileLink": {
          "description": "Indicates to the local file transfer manager to create a link to the file instead of copying it",
          "type": "boolean"
        },
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "deliveryPriority": {
          "description": "Delivery Priority",
          "type": "integer"
        },
        "deliveryProfileIds": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        },
        "deliveryStatus": {
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "ACTIVE",
            "BLOCKED"
          ],
          "type": "integer"
        },
        "desciption": {
          "type": "string"
        },
        "flavorParamsIds": {
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "maxConcurrentConnections": {
          "type": "integer"
        },
        "maxFileSize": {
          "type": "integer"
        },
        "minFileSize": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "passPhrase": {
          "type": "string"
        },
        "pathManagerClass": {
          "type": "string"
        },
        "pathManagerParams": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        },
        "privateKey": {
          "type": "string"
        },
        "protocol": {
          "enum": [
            "kontiki.KONTIKI",
            "0",
            "1",
            "2",
            "3",
            "6",
            "7"
          ],
          "enumLabels": [
            "KONTIKI",
            "KALTURA_DC",
            "FTP",
            "SCP",
            "SFTP",
            "S3",
            "LOCAL"
          ],
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "readyBehavior": {
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "NO_IMPACT",
            "REQUIRED"
          ],
          "type": "integer"
        },
        "rules": {
          "items": {
            "$ref": "#/definitions/KalturaRule"
          },
          "type": "array"
        },
        "status": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "AUTOMATIC",
            "MANUAL"
          ],
          "type": "integer"
        },
        "storageBaseDir": {
          "type": "string"
        },
        "storageFtpPassiveMode": {
          "type": "boolean"
        },
        "storagePassword": {
          "type": "string"
        },
        "storageUrl": {
          "type": "string"
        },
        "storageUsername": {
          "type": "string"
        },
        "systemName": {
          "type": "string"
        },
        "trigger": {
          "description": "No need to create enum for temp field",
          "type": "integer"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaStorageProfileBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "protocolEqual": {
          "enum": [
            "kontiki.KONTIKI",
            "0",
            "1",
            "2",
            "3",
            "6",
            "7"
          ],
          "enumLabels": [
            "KONTIKI",
            "KALTURA_DC",
            "FTP",
            "SCP",
            "SFTP",
            "S3",
            "LOCAL"
          ],
          "type": "string"
        },
        "protocolIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "AUTOMATIC",
            "MANUAL"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaStorageProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStorageProfileBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaStorageProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaStorageProfile"
          },
          "type": "array"
        }
      }
    },
    "KalturaString": {
      "description": "A string representation to return an array of strings\n ",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "KalturaStringField": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStringValue"
        }
      ],
      "description": "A string representation to return evaluated dynamic value\n ",
      "properties": {}
    },
    "KalturaStringResource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaContentResource"
        }
      ],
      "description": "Used to ingest string content.\n ",
      "properties": {
        "content": {
          "description": "Textual content",
          "type": "string"
        }
      }
    },
    "KalturaStringValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of strings\n ",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "KalturaSwfFlavorParams": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParams"
        }
      ],
      "description": "",
      "properties": {
        "flashVersion": {
          "type": "integer"
        },
        "poly2Bitmap": {
          "type": "boolean"
        }
      }
    },
    "KalturaSwfFlavorParamsBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaSwfFlavorParamsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSwfFlavorParamsBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaSwfFlavorParamsOutput": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsOutput"
        }
      ],
      "description": "",
      "properties": {
        "flashVersion": {
          "type": "integer"
        },
        "poly2Bitmap": {
          "type": "boolean"
        }
      }
    },
    "KalturaSwfFlavorParamsOutputBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFlavorParamsOutputFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaSwfFlavorParamsOutputFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSwfFlavorParamsOutputBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaSyncCategoryPrivacyContextJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "categoryId": {
          "description": "category id",
          "type": "integer"
        },
        "lastUpdatedCategoryCreatedAt": {
          "description": "Saves the last sub category creation date that was updated\n     In case of crash the batch will restart from that point",
          "type": "integer"
        },
        "lastUpdatedCategoryEntryCreatedAt": {
          "description": "Saves the last category entry creation date that was updated\n     In case of crash the batch will restart from that point",
          "type": "integer"
        }
      }
    },
    "KalturaSyndicationDistributionProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionProfile"
        }
      ],
      "description": "",
      "properties": {
        "feedId": {
          "readOnly": true,
          "type": "string"
        },
        "xsl": {
          "type": "string"
        }
      }
    },
    "KalturaSyndicationDistributionProfileBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionProfileFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaSyndicationDistributionProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSyndicationDistributionProfileBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaSyndicationDistributionProvider": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionProvider"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaSyndicationDistributionProviderBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDistributionProviderFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaSyndicationFeedEntryCount": {
      "description": "",
      "properties": {
        "actualEntryCount": {
          "description": "count of entries that will appear in the feed (including all relevant filters)",
          "type": "integer"
        },
        "requireTranscodingCount": {
          "description": "count of entries that requires transcoding in order to be included in feed",
          "type": "integer"
        },
        "totalEntryCount": {
          "description": "the total count of entries that should appear in the feed without flavor filtering",
          "type": "integer"
        }
      }
    },
    "KalturaSystemPartnerConfiguration": {
      "description": "",
      "properties": {
        "adminEmail": {
          "type": "string"
        },
        "adminName": {
          "type": "string"
        },
        "adminSessionRoleId": {
          "type": "integer"
        },
        "allowMultiNotification": {
          "type": "boolean"
        },
        "alwaysAllowedPermissionNames": {
          "type": "string"
        },
        "apiAccessControlId": {
          "type": "integer"
        },
        "audioThumbEntryId": {
          "type": "string"
        },
        "autoModerateEntryFilter": {
          "$ref": "#/definitions/KalturaBaseEntryFilter"
        },
        "bulkUploadNotificationsEmail": {
          "type": "string"
        },
        "cacheFlavorVersion": {
          "type": "integer"
        },
        "cdnHost": {
          "type": "string"
        },
        "cdnHostWhiteList": {
          "type": "string"
        },
        "crmId": {
          "type": "string"
        },
        "crmLink": {
          "type": "string"
        },
        "customDeliveryTypes": {
          "items": {
            "$ref": "#/definitions/KalturaKeyBooleanValue"
          },
          "type": "array"
        },
        "defThumbDensity": {
          "type": "integer"
        },
        "defThumbOffset": {
          "type": "integer"
        },
        "defaultDeliveryType": {
          "type": "string"
        },
        "defaultEmbedCodeType": {
          "type": "string"
        },
        "defaultEntitlementEnforcement": {
          "type": "boolean"
        },
        "defaultLiveStreamEntrySourceType": {
          "enum": [
            "velocix.VELOCIX_LIVE",
            "1",
            "2",
            "5",
            "6",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "42"
          ],
          "enumLabels": [
            "VELOCIX_LIVE",
            "FILE",
            "WEBCAM",
            "URL",
            "SEARCH_PROVIDER",
            "AKAMAI_LIVE",
            "MANUAL_LIVE_STREAM",
            "AKAMAI_UNIVERSAL_LIVE",
            "LIVE_STREAM",
            "LIVE_CHANNEL",
            "RECORDED_LIVE",
            "CLIP",
            "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
          ],
          "type": "string"
        },
        "deliveryProfileIds": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enableBulkUploadNotificationsEmails": {
          "type": "boolean"
        },
        "enforceDelivery": {
          "type": "boolean"
        },
        "extendedFreeTrail": {
          "type": "integer"
        },
        "extendedFreeTrailExpiryDate": {
          "description": "Unix timestamp (In seconds)",
          "type": "integer"
        },
        "extendedFreeTrailExpiryReason": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "importRemoteSourceForConvert": {
          "type": "boolean"
        },
        "internalUse": {
          "type": "boolean"
        },
        "isFirstLogin": {
          "type": "boolean"
        },
        "kmcVersion": {
          "type": "integer"
        },
        "language": {
          "enum": [
            "aa",
            "ab",
            "af",
            "am",
            "ar",
            "as",
            "ay",
            "az",
            "ba",
            "be",
            "bg",
            "bh",
            "bi",
            "bn",
            "bo",
            "br",
            "ca",
            "co",
            "cs",
            "cy",
            "da",
            "de",
            "dz",
            "el",
            "en",
            "eo",
            "es",
            "et",
            "eu",
            "fa",
            "fi",
            "fj",
            "fo",
            "fr",
            "fy",
            "ga",
            "gd",
            "gl",
            "gn",
            "gu",
            "gv",
            "ha",
            "he",
            "hi",
            "hr",
            "hu",
            "hy",
            "ia",
            "id",
            "ie",
            "ik",
            "in",
            "is",
            "it",
            "iu",
            "iw",
            "ja",
            "ji",
            "jv",
            "ka",
            "kk",
            "kl",
            "km",
            "kn",
            "ko",
            "ks",
            "ku",
            "ky",
            "la",
            "li",
            "ln",
            "lo",
            "lt",
            "lv",
            "mg",
            "mi",
            "mk",
            "ml",
            "mn",
            "mo",
            "mr",
            "ms",
            "mt",
            "multilingual",
            "my",
            "na",
            "ne",
            "nl",
            "no",
            "oc",
            "om",
            "or",
            "pa",
            "pl",
            "ps",
            "pt",
            "qu",
            "rm",
            "rn",
            "ro",
            "ru",
            "rw",
            "sa",
            "sd",
            "sg",
            "sh",
            "si",
            "sk",
            "sl",
            "sm",
            "sn",
            "so",
            "sq",
            "sr",
            "ss",
            "st",
            "su",
            "sv",
            "sw",
            "ta",
            "te",
            "tg",
            "th",
            "ti",
            "tk",
            "tl",
            "tn",
            "to",
            "tr",
            "ts",
            "tt",
            "tw",
            "ug",
            "uk",
            "ur",
            "uz",
            "vi",
            "vo",
            "wo",
            "xh",
            "yi",
            "yo",
            "zh",
            "zu"
          ],
          "enumLabels": [
            "AA",
            "AB",
            "AF",
            "AM",
            "AR",
            "AS_",
            "AY",
            "AZ",
            "BA",
            "BE",
            "BG",
            "BH",
            "BI",
            "BN",
            "BO",
            "BR",
            "CA",
            "CO",
            "CS",
            "CY",
            "DA",
            "DE",
            "DZ",
            "EL",
            "EN",
            "EO",
            "ES",
            "ET",
            "EU",
            "FA",
            "FI",
            "FJ",
            "FO",
            "FR",
            "FY",
            "GA",
            "GD",
            "GL",
            "GN",
            "GU",
            "GV",
            "HA",
            "HE",
            "HI",
            "HR",
            "HU",
            "HY",
            "IA",
            "ID",
            "IE",
            "IK",
            "IN",
            "IS",
            "IT",
            "IU",
            "IW",
            "JA",
            "JI",
            "JV",
            "KA",
            "KK",
            "KL",
            "KM",
            "KN",
            "KO",
            "KS",
            "KU",
            "KY",
            "LA",
            "LI",
            "LN",
            "LO",
            "LT",
            "LV",
            "MG",
            "MI",
            "MK",
            "ML",
            "MN",
            "MO",
            "MR",
            "MS",
            "MT",
            "MU",
            "MY",
            "NA",
            "NE",
            "NL",
            "NO",
            "OC",
            "OM",
            "OR_",
            "PA",
            "PL",
            "PS",
            "PT",
            "QU",
            "RM",
            "RN",
            "RO",
            "RU",
            "RW",
            "SA",
            "SD",
            "SG",
            "SH",
            "SI",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SQ",
            "SR",
            "SS",
            "ST",
            "SU",
            "SV",
            "SW",
            "TA",
            "TE",
            "TG",
            "TH",
            "TI",
            "TK",
            "TL",
            "TN",
            "TO",
            "TR",
            "TS",
            "TT",
            "TW",
            "UG",
            "UK",
            "UR",
            "UZ",
            "VI",
            "VO",
            "WO",
            "XH",
            "YI",
            "YO",
            "ZH",
            "ZU"
          ],
          "type": "string"
        },
        "limits": {
          "items": {
            "$ref": "#/definitions/KalturaSystemPartnerLimit"
          },
          "type": "array"
        },
        "liveStreamProvisionParams": {
          "type": "string"
        },
        "liveThumbEntryId": {
          "type": "string"
        },
        "loginBlockPeriod": {
          "type": "integer"
        },
        "logoutUrl": {
          "type": "string"
        },
        "mediaProtocol": {
          "description": "http/https, rtmp/rtmpe",
          "type": "string"
        },
        "moderateContent": {
          "type": "boolean"
        },
        "monitorUsage": {
          "type": "integer"
        },
        "notificationsConfig": {
          "type": "string"
        },
        "numPrevPassToKeep": {
          "type": "integer"
        },
        "partnerGroupType": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "PUBLISHER",
            "VAR_GROUP",
            "GROUP",
            "TEMPLATE"
          ],
          "type": "integer"
        },
        "partnerName": {
          "type": "string"
        },
        "partnerPackage": {
          "type": "integer"
        },
        "partnerPackageClassOfService": {
          "type": "string"
        },
        "partnerParentId": {
          "type": "integer"
        },
        "passReplaceFreq": {
          "type": "integer"
        },
        "permissions": {
          "items": {
            "$ref": "#/definitions/KalturaPermission"
          },
          "type": "array"
        },
        "referenceId": {
          "type": "string"
        },
        "restrictEntryByMetadata": {
          "type": "boolean"
        },
        "restrictThumbnailByKs": {
          "type": "integer"
        },
        "storageDeleteFromKaltura": {
          "type": "boolean"
        },
        "storageServePriority": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "KALTURA_ONLY",
            "KALTURA_FIRST",
            "EXTERNAL_FIRST",
            "EXTERNAL_ONLY"
          ],
          "type": "integer"
        },
        "streamerType": {
          "description": "http/rtmp/hdnetwork",
          "type": "string"
        },
        "supportAnimatedThumbnails": {
          "type": "boolean"
        },
        "thumbnailHost": {
          "type": "string"
        },
        "userSessionRoleId": {
          "type": "integer"
        },
        "verticalClasiffication": {
          "type": "string"
        }
      }
    },
    "KalturaSystemPartnerFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerFilter"
        }
      ],
      "description": "",
      "properties": {
        "partnerParentIdEqual": {
          "type": "integer"
        },
        "partnerParentIdIn": {
          "type": "string"
        }
      }
    },
    "KalturaSystemPartnerLimit": {
      "description": "",
      "properties": {
        "max": {
          "type": "number"
        },
        "type": {
          "enum": [
            "ACCESS_CONTROLS",
            "ADMIN_LOGIN_USERS",
            "BULK_SIZE",
            "END_USERS",
            "ENTRIES",
            "LIVE_STREAM_INPUTS",
            "LIVE_STREAM_OUTPUTS",
            "LOGIN_USERS",
            "MONTHLY_BANDWIDTH",
            "MONTHLY_STORAGE",
            "MONTHLY_STORAGE_AND_BANDWIDTH",
            "MONTHLY_STREAM_ENTRIES",
            "PUBLISHERS",
            "USER_LOGIN_ATTEMPTS"
          ],
          "enumLabels": [
            "ACCESS_CONTROLS",
            "ADMIN_LOGIN_USERS",
            "BULK_SIZE",
            "END_USERS",
            "ENTRIES",
            "LIVE_STREAM_INPUTS",
            "LIVE_STREAM_OUTPUTS",
            "LOGIN_USERS",
            "MONTHLY_BANDWIDTH",
            "MONTHLY_STORAGE",
            "MONTHLY_STORAGE_AND_BANDWIDTH",
            "MONTHLY_STREAM_ENTRIES",
            "PUBLISHERS",
            "USER_LOGIN_ATTEMPTS"
          ],
          "type": "string"
        }
      }
    },
    "KalturaSystemPartnerOveragedLimit": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSystemPartnerLimit"
        }
      ],
      "description": "",
      "properties": {
        "overagePrice": {
          "type": "number"
        },
        "overageUnit": {
          "type": "number"
        }
      }
    },
    "KalturaSystemPartnerPackage": {
      "description": "",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "KalturaSystemPartnerUsageFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "fromDate": {
          "description": "Date range from",
          "type": "integer"
        },
        "timezoneOffset": {
          "description": "Time zone offset",
          "type": "integer"
        },
        "toDate": {
          "description": "Date range to",
          "type": "integer"
        }
      }
    },
    "KalturaSystemPartnerUsageItem": {
      "description": "",
      "properties": {
        "audioEntriesCount": {
          "description": "Number of new audio entries created during specific date range",
          "type": "integer"
        },
        "avgStorage": {
          "description": "The average amount of storage consumption during the given date range for the specific publisher",
          "type": "number"
        },
        "bandwidth": {
          "description": "The total bandwidth usage during the given date range (in MB)",
          "type": "number"
        },
        "combinedBandwidthStorage": {
          "description": "The combined amount of bandwidth and storage consumed during the given date range for the specific publisher",
          "type": "number"
        },
        "deletedStorage": {
          "description": "Amount of deleted storage in MB",
          "type": "number"
        },
        "entriesCount": {
          "description": "Number of new entries created during specific date range",
          "type": "integer"
        },
        "imageEntriesCount": {
          "description": "Number of new image entries created during specific date range",
          "type": "integer"
        },
        "mixEntriesCount": {
          "description": "Number of new mix entries created during specific date range",
          "type": "integer"
        },
        "partnerCreatedAt": {
          "description": "Partner creation date (Unix timestamp)",
          "type": "integer"
        },
        "partnerId": {
          "description": "Partner ID",
          "type": "integer"
        },
        "partnerName": {
          "description": "Partner name",
          "type": "string"
        },
        "partnerPackage": {
          "description": "Partner package",
          "type": "integer"
        },
        "partnerStatus": {
          "description": "Partner status",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "enumLabels": [
            "DELETED",
            "ACTIVE",
            "BLOCKED",
            "FULL_BLOCK"
          ],
          "type": "integer"
        },
        "peakStorage": {
          "description": "The peak amount of storage consumption during the given date range for the specific publisher",
          "type": "number"
        },
        "plays": {
          "description": "Number of plays in the specific date range",
          "type": "integer"
        },
        "storage": {
          "description": "The change in storage consumption (new uploads) during the given date range (in MB)",
          "type": "number"
        },
        "totalEntriesCount": {
          "description": "Total number of entries",
          "type": "integer"
        },
        "totalStorage": {
          "description": "The total storage consumption (in MB)",
          "type": "number"
        },
        "transcodingUsage": {
          "description": "Amount of transcoding usage in MB",
          "type": "number"
        },
        "videoEntriesCount": {
          "description": "Number of new video entries created during specific date range",
          "type": "integer"
        },
        "views": {
          "description": "Number of player loads in the specific date range",
          "type": "integer"
        }
      }
    },
    "KalturaSystemPartnerUsageListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSystemPartnerUsageItem"
          },
          "type": "array"
        }
      }
    },
    "KalturaTag": {
      "description": "",
      "properties": {
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "instanceCount": {
          "readOnly": true,
          "type": "integer"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "tag": {
          "readOnly": true,
          "type": "string"
        },
        "taggedObjectType": {
          "enum": [
            "1",
            "2"
          ],
          "enumLabels": [
            "ENTRY",
            "CATEGORY"
          ],
          "readOnly": true,
          "type": "string"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaTagFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "instanceCountEqual": {
          "type": "integer"
        },
        "instanceCountIn": {
          "type": "integer"
        },
        "objectTypeEqual": {
          "enum": [
            "1",
            "2"
          ],
          "enumLabels": [
            "ENTRY",
            "CATEGORY"
          ],
          "type": "string"
        },
        "tagEqual": {
          "type": "string"
        },
        "tagStartsWith": {
          "type": "string"
        }
      }
    },
    "KalturaTagListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaTag"
          },
          "type": "array"
        }
      }
    },
    "KalturaThumbAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAsset"
        }
      ],
      "description": "",
      "properties": {
        "height": {
          "description": "The height of the Flavor Asset",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the asset",
          "enum": [
            -1,
            0,
            1,
            2,
            3,
            7,
            9
          ],
          "enumLabels": [
            "ERROR",
            "QUEUED",
            "CAPTURING",
            "READY",
            "DELETED",
            "IMPORTING",
            "EXPORTING"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "thumbParamsId": {
          "description": "The Flavor Params used to create this Flavor Asset",
          "type": "integer"
        },
        "width": {
          "description": "The width of the Flavor Asset",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaThumbAssetBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "description": "",
      "properties": {
        "statusEqual": {
          "enum": [
            -1,
            0,
            1,
            2,
            3,
            7,
            9
          ],
          "enumLabels": [
            "ERROR",
            "QUEUED",
            "CAPTURING",
            "READY",
            "DELETED",
            "IMPORTING",
            "EXPORTING"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "statusNotIn": {
          "type": "string"
        },
        "thumbParamsIdEqual": {
          "type": "integer"
        },
        "thumbParamsIdIn": {
          "type": "string"
        }
      }
    },
    "KalturaThumbAssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaThumbAssetBaseFilter"
        }
      ],
      "description": "",
      "properties": {
        "typeIn": {
          "type": "string"
        }
      }
    },
    "KalturaThumbAssetListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaThumbAsset"
          },
          "type": "array"
        }
      }
    },
    "KalturaThumbCuePoint": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCuePoint"
        }
      ],
      "description": "",
      "properties": {
        "assetId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "subType": {
          "description": "The sub type of the ThumbCuePoint",
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "SLIDE",
            "CHAPTER"
          ],
          "type": "integer"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "KalturaThumbCuePointBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCuePointFilter"
        }
      ],
      "description": "",
      "properties": {
        "descriptionLike": {
          "type": "string"
        },
        "descriptionMultiLikeAnd": {
          "type": "string"
        },
        "descriptionMultiLikeOr": {
          "type": "string"
        },
        "subTypeEqual": {
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "SLIDE",
            "CHAPTER"
          ],
          "type": "integer"
        },
        "subTypeIn": {
          "type": "string"
        },
        "titleLike": {
          "type": "string"
        },
        "titleMultiLikeAnd": {
          "type": "string"
        },
        "titleMultiLikeOr": {
          "type": "string"
        }
      }
    },
    "KalturaThumbCuePointFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaThumbCuePointBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaThumbParams": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetParams"
        }
      ],
      "description": "",
      "properties": {
        "backgroundColor": {
          "description": "Hexadecimal value",
          "type": "string"
        },
        "cropHeight": {
          "type": "integer"
        },
        "cropType": {
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "enumLabels": [
            "RESIZE",
            "RESIZE_WITH_PADDING",
            "CROP",
            "CROP_FROM_TOP",
            "RESIZE_WITH_FORCE"
          ],
          "type": "integer"
        },
        "cropWidth": {
          "type": "integer"
        },
        "cropX": {
          "type": "integer"
        },
        "cropY": {
          "type": "integer"
        },
        "density": {
          "description": "The image density (dpi) for example: 72 or 96",
          "type": "integer"
        },
        "format": {
          "description": "The container format of the Flavor Params",
          "enum": [
            "3gp",
            "applehttp",
            "avi",
            "bmp",
            "copy",
            "flv",
            "hls",
            "isma",
            "ismv",
            "jpg",
            "m2ts",
            "m4v",
            "mkv",
            "mov",
            "mp3",
            "mp4",
            "mpeg",
            "mpegts",
            "mxf",
            "ogg",
            "ogv",
            "pdf",
            "png",
            "swf",
            "wav",
            "webm",
            "wma",
            "wmv",
            "wvm"
          ],
          "enumLabels": [
            "_3GP",
            "APPLEHTTP",
            "AVI",
            "BMP",
            "COPY",
            "FLV",
            "HLS",
            "ISMA",
            "ISMV",
            "JPG",
            "M2TS",
            "M4V",
            "MKV",
            "MOV",
            "MP3",
            "MP4",
            "MPEG",
            "MPEGTS",
            "MXF",
            "OGG",
            "OGV",
            "PDF",
            "PNG",
            "SWF",
            "WAV",
            "WEBM",
            "WMA",
            "WMV",
            "WVM"
          ],
          "type": "string"
        },
        "height": {
          "type": "integer"
        },
        "quality": {
          "type": "integer"
        },
        "scaleHeight": {
          "type": "number"
        },
        "scaleWidth": {
          "type": "number"
        },
        "sourceParamsId": {
          "description": "Id of the flavor params or the thumbnail params to be used as source for the thumbnail creation",
          "type": "integer"
        },
        "stripProfiles": {
          "description": "Strip profiles and comments",
          "type": "boolean"
        },
        "videoOffset": {
          "type": "number"
        },
        "videoOffsetInPercentage": {
          "description": "Create thumbnail from the videoLengthpercentage second",
          "type": "integer"
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "KalturaThumbParamsBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetParamsFilter"
        }
      ],
      "description": "",
      "properties": {
        "formatEqual": {
          "enum": [
            "3gp",
            "applehttp",
            "avi",
            "bmp",
            "copy",
            "flv",
            "hls",
            "isma",
            "ismv",
            "jpg",
            "m2ts",
            "m4v",
            "mkv",
            "mov",
            "mp3",
            "mp4",
            "mpeg",
            "mpegts",
            "mxf",
            "ogg",
            "ogv",
            "pdf",
            "png",
            "swf",
            "wav",
            "webm",
            "wma",
            "wmv",
            "wvm"
          ],
          "enumLabels": [
            "_3GP",
            "APPLEHTTP",
            "AVI",
            "BMP",
            "COPY",
            "FLV",
            "HLS",
            "ISMA",
            "ISMV",
            "JPG",
            "M2TS",
            "M4V",
            "MKV",
            "MOV",
            "MP3",
            "MP4",
            "MPEG",
            "MPEGTS",
            "MXF",
            "OGG",
            "OGV",
            "PDF",
            "PNG",
            "SWF",
            "WAV",
            "WEBM",
            "WMA",
            "WMV",
            "WVM"
          ],
          "type": "string"
        }
      }
    },
    "KalturaThumbParamsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaThumbParamsBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaThumbParamsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaThumbParams"
          },
          "type": "array"
        }
      }
    },
    "KalturaThumbParamsOutput": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaThumbParams"
        }
      ],
      "description": "",
      "properties": {
        "rotate": {
          "type": "integer"
        },
        "thumbAssetId": {
          "type": "string"
        },
        "thumbAssetVersion": {
          "type": "string"
        },
        "thumbParamsId": {
          "type": "integer"
        },
        "thumbParamsVersion": {
          "type": "string"
        }
      }
    },
    "KalturaThumbParamsOutputBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaThumbParamsFilter"
        }
      ],
      "description": "",
      "properties": {
        "thumbAssetIdEqual": {
          "type": "string"
        },
        "thumbAssetVersionEqual": {
          "type": "string"
        },
        "thumbParamsIdEqual": {
          "type": "integer"
        },
        "thumbParamsVersionEqual": {
          "type": "string"
        }
      }
    },
    "KalturaThumbParamsOutputFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaThumbParamsOutputBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaThumbParamsOutputListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaThumbParamsOutput"
          },
          "type": "array"
        }
      }
    },
    "KalturaThumbnailServeOptions": {
      "description": "",
      "properties": {
        "download": {
          "type": "boolean"
        }
      }
    },
    "KalturaTimeContextField": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaIntegerField"
        }
      ],
      "description": "Represents the current time context on Kaltura servers\n ",
      "properties": {
        "offset": {
          "description": "Time offset in seconds since current time",
          "type": "integer"
        }
      }
    },
    "KalturaTimedThumbAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaThumbAsset"
        }
      ],
      "description": "",
      "properties": {
        "cuePointId": {
          "description": "Associated thumb cue point ID",
          "type": "string"
        }
      }
    },
    "KalturaTimedThumbAssetBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaThumbAssetFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaTimedThumbAssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaTimedThumbAssetBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaTrackEntry": {
      "description": "",
      "properties": {
        "changedProperties": {
          "type": "string"
        },
        "context": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "entryId": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "ks": {
          "type": "string"
        },
        "paramStr1": {
          "type": "string"
        },
        "paramStr2": {
          "type": "string"
        },
        "paramStr3": {
          "type": "string"
        },
        "partnerId": {
          "type": "integer"
        },
        "psVersion": {
          "type": "string"
        },
        "trackEventType": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "enumLabels": [
            "UPLOADED_FILE",
            "WEBCAM_COMPLETED",
            "IMPORT_STARTED",
            "ADD_ENTRY",
            "UPDATE_ENTRY",
            "DELETED_ENTRY"
          ],
          "type": "integer"
        },
        "updatedAt": {
          "type": "integer"
        },
        "userId": {
          "type": "string"
        },
        "userIp": {
          "type": "string"
        }
      }
    },
    "KalturaTrackEntryListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaTrackEntry"
          },
          "type": "array"
        }
      }
    },
    "KalturaTransformMetadataJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "destVersion": {
          "type": "integer"
        },
        "destXsdPath": {
          "type": "string"
        },
        "metadataProfileId": {
          "type": "integer"
        },
        "srcVersion": {
          "type": "integer"
        },
        "srcXslPath": {
          "type": "string"
        }
      }
    },
    "KalturaTubeMogulSyndicationFeed": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSyndicationFeed"
        }
      ],
      "description": "",
      "properties": {
        "category": {
          "enum": [
            "Animals &amp; Pets",
            "Arts &amp; Animation",
            "Autos",
            "Comedy",
            "Commercials/Promotional",
            "Entertainment",
            "Family &amp; Kids",
            "How To/Instructional/DIY",
            "Music",
            "News &amp; Blogs",
            "Science &amp; Technology",
            "Sports",
            "Travel &amp; Places",
            "Video Games",
            "Vlogs &amp; People"
          ],
          "enumLabels": [
            "ANIMALS_AND_PETS",
            "ARTS_AND_ANIMATION",
            "AUTOS",
            "COMEDY",
            "COMMERCIALS_PROMOTIONAL",
            "ENTERTAINMENT",
            "FAMILY_AND_KIDS",
            "HOW_TO_INSTRUCTIONAL_DIY",
            "MUSIC",
            "NEWS_AND_BLOGS",
            "SCIENCE_AND_TECHNOLOGY",
            "SPORTS",
            "TRAVEL_AND_PLACES",
            "VIDEO_GAMES",
            "VLOGS_PEOPLE"
          ],
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaTubeMogulSyndicationFeedBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSyndicationFeedFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaTubeMogulSyndicationFeedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaTubeMogulSyndicationFeedBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaTypedArray": {
      "abstract": true,
      "description": "",
      "properties": {
        "count": {
          "type": "integer"
        }
      }
    },
    "KalturaUiConf": {
      "description": "",
      "properties": {
        "confFile": {
          "type": "string"
        },
        "confFileFeatures": {
          "type": "string"
        },
        "confFilePath": {
          "readOnly": true,
          "type": "string"
        },
        "confVars": {
          "type": "string"
        },
        "config": {
          "type": "string"
        },
        "createdAt": {
          "description": "Entry creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "creationMode": {
          "enum": [
            2,
            3
          ],
          "enumLabels": [
            "WIZARD",
            "ADVANCED"
          ],
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "height": {
          "type": "integer"
        },
        "html5Url": {
          "type": "string"
        },
        "htmlParams": {
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Name of the uiConf, this is not a primary key",
          "type": "string"
        },
        "objType": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21
          ],
          "enumLabels": [
            "PLAYER",
            "CONTRIBUTION_WIZARD",
            "SIMPLE_EDITOR",
            "ADVANCED_EDITOR",
            "PLAYLIST",
            "APP_STUDIO",
            "KRECORD",
            "PLAYER_V3",
            "KMC_ACCOUNT",
            "KMC_ANALYTICS",
            "KMC_CONTENT",
            "KMC_DASHBOARD",
            "KMC_LOGIN",
            "PLAYER_SL",
            "CLIENTSIDE_ENCODER",
            "KMC_GENERAL",
            "KMC_ROLES_AND_PERMISSIONS",
            "CLIPPER",
            "KSR",
            "KUPLOAD",
            "WEBCASTING"
          ],
          "type": "integer"
        },
        "objTypeAsString": {
          "readOnly": true,
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "partnerTags": {
          "type": "string"
        },
        "swfUrl": {
          "type": "string"
        },
        "swfUrlVersion": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "updatedAt": {
          "description": "Entry creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "useCdn": {
          "type": "boolean"
        },
        "version": {
          "description": "UiConf version",
          "readOnly": true,
          "type": "string"
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "KalturaUiConfAdmin": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUiConf"
        }
      ],
      "description": "",
      "properties": {
        "isPublic": {
          "type": "boolean"
        }
      }
    },
    "KalturaUiConfAdminBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUiConfFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaUiConfAdminFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUiConfAdminBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaUiConfAdminListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaUiConfAdmin"
          },
          "type": "array"
        }
      }
    },
    "KalturaUiConfBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "creationModeEqual": {
          "enum": [
            2,
            3
          ],
          "enumLabels": [
            "WIZARD",
            "ADVANCED"
          ],
          "type": "integer"
        },
        "creationModeIn": {
          "type": "string"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "nameLike": {
          "type": "string"
        },
        "objTypeEqual": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21
          ],
          "enumLabels": [
            "PLAYER",
            "CONTRIBUTION_WIZARD",
            "SIMPLE_EDITOR",
            "ADVANCED_EDITOR",
            "PLAYLIST",
            "APP_STUDIO",
            "KRECORD",
            "PLAYER_V3",
            "KMC_ACCOUNT",
            "KMC_ANALYTICS",
            "KMC_CONTENT",
            "KMC_DASHBOARD",
            "KMC_LOGIN",
            "PLAYER_SL",
            "CLIENTSIDE_ENCODER",
            "KMC_GENERAL",
            "KMC_ROLES_AND_PERMISSIONS",
            "CLIPPER",
            "KSR",
            "KUPLOAD",
            "WEBCASTING"
          ],
          "type": "integer"
        },
        "objTypeIn": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "partnerTagsMultiLikeAnd": {
          "type": "string"
        },
        "partnerTagsMultiLikeOr": {
          "type": "string"
        },
        "tagsMultiLikeAnd": {
          "type": "string"
        },
        "tagsMultiLikeOr": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        },
        "versionEqual": {
          "type": "string"
        },
        "versionMultiLikeAnd": {
          "type": "string"
        },
        "versionMultiLikeOr": {
          "type": "string"
        }
      }
    },
    "KalturaUiConfFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUiConfBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaUiConfListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaUiConf"
          },
          "type": "array"
        }
      }
    },
    "KalturaUiConfTypeInfo": {
      "description": "Info about uiconf type\n ",
      "properties": {
        "directory": {
          "description": "The direcotry this type is saved at",
          "type": "string"
        },
        "filename": {
          "description": "Filename for this UiConf type",
          "type": "string"
        },
        "type": {
          "description": "UiConf Type",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21
          ],
          "enumLabels": [
            "PLAYER",
            "CONTRIBUTION_WIZARD",
            "SIMPLE_EDITOR",
            "ADVANCED_EDITOR",
            "PLAYLIST",
            "APP_STUDIO",
            "KRECORD",
            "PLAYER_V3",
            "KMC_ACCOUNT",
            "KMC_ANALYTICS",
            "KMC_CONTENT",
            "KMC_DASHBOARD",
            "KMC_LOGIN",
            "PLAYER_SL",
            "CLIENTSIDE_ENCODER",
            "KMC_GENERAL",
            "KMC_ROLES_AND_PERMISSIONS",
            "CLIPPER",
            "KSR",
            "KUPLOAD",
            "WEBCASTING"
          ],
          "type": "integer"
        },
        "versions": {
          "items": {
            "$ref": "#/definitions/KalturaString"
          },
          "type": "array"
        }
      }
    },
    "KalturaUploadResponse": {
      "description": "",
      "properties": {
        "errorCode": {
          "enum": [
            0,
            1,
            2
          ],
          "enumLabels": [
            "NO_ERROR",
            "GENERAL_ERROR",
            "PARTIAL_UPLOAD"
          ],
          "type": "integer"
        },
        "errorDescription": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer"
        },
        "uploadTokenId": {
          "type": "string"
        }
      }
    },
    "KalturaUploadToken": {
      "description": "",
      "properties": {
        "createdAt": {
          "description": "Creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "fileName": {
          "description": "Name of the file for the upload token, can be empty when the upload token is created and will be updated internally after the file is uploaded",
          "type": "string"
        },
        "fileSize": {
          "description": "File size in bytes, can be empty when the upload token is created and will be updated internally after the file is uploaded",
          "type": "number"
        },
        "id": {
          "description": "Upload token unique ID",
          "readOnly": true,
          "type": "string"
        },
        "partnerId": {
          "description": "Partner ID of the upload token",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "Status of the upload token",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "enumLabels": [
            "PENDING",
            "PARTIAL_UPLOAD",
            "FULL_UPLOAD",
            "CLOSED",
            "TIMED_OUT",
            "DELETED"
          ],
          "readOnly": true,
          "type": "integer"
        },
        "updatedAt": {
          "description": "Last update date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "uploadedFileSize": {
          "description": "Uploaded file size in bytes, can be used to identify how many bytes were uploaded before resuming",
          "readOnly": true,
          "type": "number"
        },
        "userId": {
          "description": "User id for the upload token",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaUploadTokenBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "fileNameEqual": {
          "type": "string"
        },
        "fileSizeEqual": {
          "type": "number"
        },
        "idEqual": {
          "type": "string"
        },
        "idIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "enumLabels": [
            "PENDING",
            "PARTIAL_UPLOAD",
            "FULL_UPLOAD",
            "CLOSED",
            "TIMED_OUT",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "userIdEqual": {
          "type": "string"
        }
      }
    },
    "KalturaUploadTokenFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUploadTokenBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaUploadTokenListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaUploadToken"
          },
          "type": "array"
        }
      }
    },
    "KalturaUploadedFileTokenResource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDataCenterContentResource"
        }
      ],
      "description": "Used to ingest media that uploaded to the system and represented by token that returned from upload.upload action or uploadToken.add action.\n ",
      "properties": {
        "token": {
          "description": "Token that returned from upload.upload action or uploadToken.add action.",
          "type": "string"
        }
      }
    },
    "KalturaUrlRecognizer": {
      "description": "",
      "properties": {
        "hosts": {
          "description": "The hosts that are recognized",
          "type": "string"
        },
        "uriPrefix": {
          "description": "The URI prefix we use for security",
          "type": "string"
        }
      }
    },
    "KalturaUrlRecognizerAkamaiG2O": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUrlRecognizer"
        }
      ],
      "description": "",
      "properties": {
        "headerData": {
          "description": "headerData",
          "type": "string"
        },
        "headerSign": {
          "description": "headerSign",
          "type": "string"
        },
        "salt": {
          "description": "salt",
          "type": "string"
        },
        "timeout": {
          "description": "timeout",
          "type": "integer"
        }
      }
    },
    "KalturaUrlResource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaContentResource"
        }
      ],
      "description": "Used to ingest media that is available on remote server and accessible using the supplied URL, media file will be downloaded using import job in order to make the asset ready.\n ",
      "properties": {
        "forceAsyncDownload": {
          "description": "Force Import Job",
          "type": "boolean"
        },
        "url": {
          "description": "Remote URL, FTP, HTTP or HTTPS",
          "type": "string"
        }
      }
    },
    "KalturaUrlTokenizer": {
      "description": "",
      "properties": {
        "key": {
          "description": "key",
          "type": "string"
        },
        "window": {
          "description": "Window",
          "type": "integer"
        }
      }
    },
    "KalturaUrlTokenizerAkamaiHttp": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUrlTokenizer"
        }
      ],
      "description": "",
      "properties": {
        "paramName": {
          "description": "param",
          "type": "string"
        },
        "rootDir": {
          "type": "string"
        }
      }
    },
    "KalturaUrlTokenizerAkamaiRtmp": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUrlTokenizer"
        }
      ],
      "description": "",
      "properties": {
        "aifp": {
          "type": "string"
        },
        "profile": {
          "description": "profile",
          "type": "string"
        },
        "type": {
          "description": "Type",
          "type": "string"
        },
        "usePrefix": {
          "type": "boolean"
        }
      }
    },
    "KalturaUrlTokenizerAkamaiRtsp": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUrlTokenizer"
        }
      ],
      "description": "",
      "properties": {
        "cpcode": {
          "description": "Cp-Code",
          "type": "integer"
        },
        "host": {
          "description": "host",
          "type": "string"
        }
      }
    },
    "KalturaUrlTokenizerAkamaiSecureHd": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUrlTokenizer"
        }
      ],
      "description": "",
      "properties": {
        "aclPostfix": {
          "type": "string"
        },
        "customPostfixes": {
          "type": "string"
        },
        "paramName": {
          "type": "string"
        },
        "rootDir": {
          "type": "string"
        },
        "useCookieHosts": {
          "type": "string"
        }
      }
    },
    "KalturaUrlTokenizerBitGravity": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUrlTokenizer"
        }
      ],
      "description": "",
      "properties": {
        "hashPatternRegex": {
          "description": "hashPatternRegex",
          "type": "string"
        }
      }
    },
    "KalturaUrlTokenizerCloudFront": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUrlTokenizer"
        }
      ],
      "description": "",
      "properties": {
        "keyPairId": {
          "type": "string"
        },
        "rootDir": {
          "type": "string"
        }
      }
    },
    "KalturaUrlTokenizerLevel3": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUrlTokenizer"
        }
      ],
      "description": "",
      "properties": {
        "expiryName": {
          "description": "expiryName",
          "type": "string"
        },
        "gen": {
          "description": "gen",
          "type": "string"
        },
        "paramName": {
          "description": "paramName",
          "type": "string"
        }
      }
    },
    "KalturaUrlTokenizerLimeLight": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUrlTokenizer"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaUrlTokenizerVelocix": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUrlTokenizer"
        }
      ],
      "description": "",
      "properties": {
        "authPrefix": {
          "description": "secure URL prefix",
          "type": "string"
        },
        "hdsPaths": {
          "description": "hdsPaths",
          "type": "string"
        },
        "paramName": {
          "description": "tokenParamName",
          "type": "string"
        }
      }
    },
    "KalturaUser": {
      "description": "",
      "properties": {
        "adminTags": {
          "description": "Admin tags can be updated only by using an admin session",
          "type": "string"
        },
        "allowedPartnerIds": {
          "type": "string"
        },
        "allowedPartnerPackages": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "createdAt": {
          "description": "Creation date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "dateOfBirth": {
          "type": "integer"
        },
        "deletedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "gender": {
          "enum": [
            0,
            1,
            2
          ],
          "enumLabels": [
            "UNKNOWN",
            "MALE",
            "FEMALE"
          ],
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "indexedPartnerDataInt": {
          "type": "integer"
        },
        "indexedPartnerDataString": {
          "type": "string"
        },
        "isAccountOwner": {
          "readOnly": true,
          "type": "boolean"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "language": {
          "enum": [
            "aa",
            "ab",
            "af",
            "am",
            "ar",
            "as",
            "ay",
            "az",
            "ba",
            "be",
            "bg",
            "bh",
            "bi",
            "bn",
            "bo",
            "br",
            "ca",
            "co",
            "cs",
            "cy",
            "da",
            "de",
            "dz",
            "el",
            "en",
            "eo",
            "es",
            "et",
            "eu",
            "fa",
            "fi",
            "fj",
            "fo",
            "fr",
            "fy",
            "ga",
            "gd",
            "gl",
            "gn",
            "gu",
            "gv",
            "ha",
            "he",
            "hi",
            "hr",
            "hu",
            "hy",
            "ia",
            "id",
            "ie",
            "ik",
            "in",
            "is",
            "it",
            "iu",
            "iw",
            "ja",
            "ji",
            "jv",
            "ka",
            "kk",
            "kl",
            "km",
            "kn",
            "ko",
            "ks",
            "ku",
            "ky",
            "la",
            "li",
            "ln",
            "lo",
            "lt",
            "lv",
            "mg",
            "mi",
            "mk",
            "ml",
            "mn",
            "mo",
            "mr",
            "ms",
            "mt",
            "multilingual",
            "my",
            "na",
            "ne",
            "nl",
            "no",
            "oc",
            "om",
            "or",
            "pa",
            "pl",
            "ps",
            "pt",
            "qu",
            "rm",
            "rn",
            "ro",
            "ru",
            "rw",
            "sa",
            "sd",
            "sg",
            "sh",
            "si",
            "sk",
            "sl",
            "sm",
            "sn",
            "so",
            "sq",
            "sr",
            "ss",
            "st",
            "su",
            "sv",
            "sw",
            "ta",
            "te",
            "tg",
            "th",
            "ti",
            "tk",
            "tl",
            "tn",
            "to",
            "tr",
            "ts",
            "tt",
            "tw",
            "ug",
            "uk",
            "ur",
            "uz",
            "vi",
            "vo",
            "wo",
            "xh",
            "yi",
            "yo",
            "zh",
            "zu"
          ],
          "enumLabels": [
            "AA",
            "AB",
            "AF",
            "AM",
            "AR",
            "AS_",
            "AY",
            "AZ",
            "BA",
            "BE",
            "BG",
            "BH",
            "BI",
            "BN",
            "BO",
            "BR",
            "CA",
            "CO",
            "CS",
            "CY",
            "DA",
            "DE",
            "DZ",
            "EL",
            "EN",
            "EO",
            "ES",
            "ET",
            "EU",
            "FA",
            "FI",
            "FJ",
            "FO",
            "FR",
            "FY",
            "GA",
            "GD",
            "GL",
            "GN",
            "GU",
            "GV",
            "HA",
            "HE",
            "HI",
            "HR",
            "HU",
            "HY",
            "IA",
            "ID",
            "IE",
            "IK",
            "IN",
            "IS",
            "IT",
            "IU",
            "IW",
            "JA",
            "JI",
            "JV",
            "KA",
            "KK",
            "KL",
            "KM",
            "KN",
            "KO",
            "KS",
            "KU",
            "KY",
            "LA",
            "LI",
            "LN",
            "LO",
            "LT",
            "LV",
            "MG",
            "MI",
            "MK",
            "ML",
            "MN",
            "MO",
            "MR",
            "MS",
            "MT",
            "MU",
            "MY",
            "NA",
            "NE",
            "NL",
            "NO",
            "OC",
            "OM",
            "OR_",
            "PA",
            "PL",
            "PS",
            "PT",
            "QU",
            "RM",
            "RN",
            "RO",
            "RU",
            "RW",
            "SA",
            "SD",
            "SG",
            "SH",
            "SI",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SQ",
            "SR",
            "SS",
            "ST",
            "SU",
            "SV",
            "SW",
            "TA",
            "TE",
            "TG",
            "TH",
            "TI",
            "TK",
            "TL",
            "TN",
            "TO",
            "TR",
            "TS",
            "TT",
            "TW",
            "UG",
            "UK",
            "UR",
            "UZ",
            "VI",
            "VO",
            "WO",
            "XH",
            "YI",
            "YO",
            "ZH",
            "ZU"
          ],
          "type": "string"
        },
        "lastLoginTime": {
          "readOnly": true,
          "type": "integer"
        },
        "lastName": {
          "type": "string"
        },
        "loginEnabled": {
          "readOnly": true,
          "type": "boolean"
        },
        "partnerData": {
          "description": "Can be used to store various partner related data as a string",
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "password": {
          "type": "string"
        },
        "roleIds": {
          "type": "string"
        },
        "roleNames": {
          "readOnly": true,
          "type": "string"
        },
        "screenName": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "status": {
          "enum": [
            0,
            1,
            2
          ],
          "enumLabels": [
            "BLOCKED",
            "ACTIVE",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusUpdatedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "storageSize": {
          "readOnly": true,
          "type": "integer"
        },
        "tags": {
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "type": {
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "USER",
            "GROUP"
          ],
          "type": "integer"
        },
        "updatedAt": {
          "description": "Last update date as Unix timestamp (In seconds)",
          "readOnly": true,
          "type": "integer"
        },
        "zip": {
          "type": "string"
        }
      }
    },
    "KalturaUserAgentCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRegexCondition"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaUserAgentContextField": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStringField"
        }
      ],
      "description": "Represents the current request user agent context\n ",
      "properties": {}
    },
    "KalturaUserAgentRestriction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseRestriction"
        }
      ],
      "description": "",
      "properties": {
        "userAgentRegexList": {
          "description": "A comma seperated list of user agent regular expressions",
          "type": "string"
        },
        "userAgentRestrictionType": {
          "description": "User agent restriction type (Allow or deny)",
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "RESTRICT_LIST",
            "ALLOW_LIST"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaUserBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "emailLike": {
          "type": "string"
        },
        "emailStartsWith": {
          "type": "string"
        },
        "firstNameStartsWith": {
          "type": "string"
        },
        "isAdminEqual": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "lastNameStartsWith": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "screenNameLike": {
          "type": "string"
        },
        "screenNameStartsWith": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            0,
            1,
            2
          ],
          "enumLabels": [
            "BLOCKED",
            "ACTIVE",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "tagsMultiLikeAnd": {
          "type": "string"
        },
        "tagsMultiLikeOr": {
          "type": "string"
        },
        "typeEqual": {
          "enum": [
            0,
            1
          ],
          "enumLabels": [
            "USER",
            "GROUP"
          ],
          "type": "integer"
        },
        "typeIn": {
          "type": "string"
        }
      }
    },
    "KalturaUserEmailContextField": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaStringField"
        }
      ],
      "description": "Represents the current session user e-mail address context\n ",
      "properties": {}
    },
    "KalturaUserEntry": {
      "abstract": true,
      "description": "",
      "properties": {
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "entryId": {
          "type": "string"
        },
        "id": {
          "description": "unique auto-generated identifier",
          "readOnly": true,
          "type": "integer"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "enum": [
            "quiz.3",
            "1",
            "2"
          ],
          "enumLabels": [
            "QUIZ_SUBMITTED",
            "ACTIVE",
            "DELETED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "enum": [
            "quiz.QUIZ"
          ],
          "enumLabels": [
            "QUIZ"
          ],
          "readOnly": true,
          "type": "string"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "KalturaUserEntryBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "entryIdEqual": {
          "type": "string"
        },
        "entryIdIn": {
          "type": "string"
        },
        "entryIdNotIn": {
          "type": "string"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "idNotIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            "quiz.3",
            "1",
            "2"
          ],
          "enumLabels": [
            "QUIZ_SUBMITTED",
            "ACTIVE",
            "DELETED"
          ],
          "type": "string"
        },
        "typeEqual": {
          "enum": [
            "quiz.QUIZ"
          ],
          "enumLabels": [
            "QUIZ"
          ],
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        },
        "userIdEqual": {
          "type": "string"
        },
        "userIdIn": {
          "type": "string"
        },
        "userIdNotIn": {
          "type": "string"
        }
      }
    },
    "KalturaUserEntryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUserEntryBaseFilter"
        }
      ],
      "description": "",
      "properties": {
        "userIdEqualCurrent": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaUserEntryListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaUserEntry"
          },
          "type": "array"
        }
      }
    },
    "KalturaUserFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUserBaseFilter"
        }
      ],
      "description": "",
      "properties": {
        "firstNameOrLastNameStartsWith": {
          "type": "string"
        },
        "idEqual": {
          "type": "string"
        },
        "idIn": {
          "type": "string"
        },
        "idOrScreenNameStartsWith": {
          "type": "string"
        },
        "loginEnabledEqual": {
          "enum": [
            -1,
            0,
            1
          ],
          "enumLabels": [
            "NULL_VALUE",
            "FALSE_VALUE",
            "TRUE_VALUE"
          ],
          "type": "integer"
        },
        "permissionNamesMultiLikeAnd": {
          "description": "Permission names filter expression",
          "type": "string"
        },
        "permissionNamesMultiLikeOr": {
          "description": "Permission names filter expression",
          "type": "string"
        },
        "roleIdEqual": {
          "type": "string"
        },
        "roleIdsEqual": {
          "type": "string"
        },
        "roleIdsIn": {
          "type": "string"
        }
      }
    },
    "KalturaUserListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaUser"
          },
          "type": "array"
        }
      }
    },
    "KalturaUserLoginData": {
      "description": "",
      "properties": {
        "id": {
          "type": "string"
        },
        "loginEmail": {
          "type": "string"
        }
      }
    },
    "KalturaUserLoginDataBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "loginEmailEqual": {
          "type": "string"
        }
      }
    },
    "KalturaUserLoginDataFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUserLoginDataBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaUserLoginDataListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaUserLoginData"
          },
          "type": "array"
        }
      }
    },
    "KalturaUserRole": {
      "description": "",
      "properties": {
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "permissionNames": {
          "type": "string"
        },
        "status": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "ACTIVE",
            "BLOCKED",
            "DELETED"
          ],
          "type": "integer"
        },
        "systemName": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaUserRoleBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "descriptionLike": {
          "type": "string"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "nameEqual": {
          "type": "string"
        },
        "nameIn": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "ACTIVE",
            "BLOCKED",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "systemNameEqual": {
          "type": "string"
        },
        "systemNameIn": {
          "type": "string"
        },
        "tagsMultiLikeAnd": {
          "type": "string"
        },
        "tagsMultiLikeOr": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaUserRoleCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "",
      "properties": {
        "roleIds": {
          "description": "Comma separated list of role ids",
          "type": "string"
        }
      }
    },
    "KalturaUserRoleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUserRoleBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaUserRoleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaUserRole"
          },
          "type": "array"
        }
      }
    },
    "KalturaValue": {
      "abstract": true,
      "description": "A representation to return an array of values\n ",
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "KalturaVarConsolePartnerFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerFilter"
        }
      ],
      "description": "",
      "properties": {
        "groupTypeEq": {
          "description": "Eq filter for the partner's group type",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "PUBLISHER",
            "VAR_GROUP",
            "GROUP",
            "TEMPLATE"
          ],
          "type": "integer"
        },
        "groupTypeIn": {
          "description": "In filter for the partner's group type",
          "type": "string"
        },
        "partnerPermissionsExist": {
          "description": "Filter for partner permissions- filter contains comma-separated string of permission names which the returned partners should have.",
          "type": "string"
        }
      }
    },
    "KalturaVarPartnerUsageItem": {
      "description": "",
      "properties": {
        "audioEntriesCount": {
          "description": "Number of new audio entries created during specific date range",
          "type": "integer"
        },
        "avgStorage": {
          "description": "The average amount of storage consumption during the given date range for the specific publisher",
          "type": "number"
        },
        "bandwidth": {
          "description": "The total bandwidth usage during the given date range (in MB)",
          "type": "number"
        },
        "combinedStorageBandwidth": {
          "description": "The combined amount of bandwidth and storage consumed during the given date range for the specific publisher",
          "type": "number"
        },
        "dateId": {
          "description": "TGhe date at which the report was taken - Unix Timestamp",
          "type": "string"
        },
        "deletedStorage": {
          "description": "The deleted storage consumption (new uploads) during the given date range (in MB)",
          "type": "number"
        },
        "entriesCount": {
          "description": "Number of new entries created during specific date range",
          "type": "integer"
        },
        "imageEntriesCount": {
          "description": "Number of new image entries created during specific date range",
          "type": "integer"
        },
        "mixEntriesCount": {
          "description": "Number of new mix entries created during specific date range",
          "type": "integer"
        },
        "partnerCreatedAt": {
          "description": "Partner creation date (Unix timestamp)",
          "type": "integer"
        },
        "partnerId": {
          "description": "Partner ID",
          "type": "integer"
        },
        "partnerName": {
          "description": "Partner name",
          "type": "string"
        },
        "partnerPackage": {
          "description": "Partner package",
          "type": "integer"
        },
        "partnerStatus": {
          "description": "Partner status",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "enumLabels": [
            "DELETED",
            "ACTIVE",
            "BLOCKED",
            "FULL_BLOCK"
          ],
          "type": "integer"
        },
        "peakStorage": {
          "description": "The peak amount of storage consumption during the given date range for the specific publisher",
          "type": "number"
        },
        "plays": {
          "description": "Number of plays in the specific date range",
          "type": "integer"
        },
        "storage": {
          "description": "The added storage consumption (new uploads) during the given date range (in MB)",
          "type": "number"
        },
        "totalEntriesCount": {
          "description": "Total number of entries",
          "type": "integer"
        },
        "totalStorage": {
          "description": "The total storage consumption (in MB)",
          "type": "number"
        },
        "transcodingUsage": {
          "description": "Amount of transcoding usage in MB",
          "type": "number"
        },
        "videoEntriesCount": {
          "description": "Number of new video entries created during specific date range",
          "type": "integer"
        },
        "views": {
          "description": "Number of player loads in the specific date range",
          "type": "integer"
        }
      }
    },
    "KalturaVarPartnerUsageTotalItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaVarPartnerUsageItem"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaVelocixProvisionJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProvisionJobData"
        }
      ],
      "description": "",
      "properties": {
        "password": {
          "type": "string"
        },
        "provisioningParams": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "KalturaVirusScanJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaJobData"
        }
      ],
      "description": "",
      "properties": {
        "flavorAssetId": {
          "type": "string"
        },
        "scanResult": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumLabels": [
            "SCAN_ERROR",
            "FILE_IS_CLEAN",
            "FILE_WAS_CLEANED",
            "FILE_INFECTED"
          ],
          "type": "integer"
        },
        "srcFilePath": {
          "type": "string"
        },
        "virusFoundAction": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "enumLabels": [
            "NONE",
            "DELETE",
            "CLEAN_NONE",
            "CLEAN_DELETE"
          ],
          "type": "integer"
        }
      }
    },
    "KalturaVirusScanProfile": {
      "description": "",
      "properties": {
        "actionIfInfected": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "enumLabels": [
            "NONE",
            "DELETE",
            "CLEAN_NONE",
            "CLEAN_DELETE"
          ],
          "type": "integer"
        },
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "engineType": {
          "enum": [
            "clamAVScanEngine.ClamAV"
          ],
          "enumLabels": [
            "CLAMAV_SCAN_ENGINE"
          ],
          "type": "string"
        },
        "entryFilter": {
          "$ref": "#/definitions/KalturaBaseEntryFilter"
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "ENABLED",
            "DELETED"
          ],
          "type": "integer"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaVirusScanProfileBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "engineTypeEqual": {
          "enum": [
            "clamAVScanEngine.ClamAV"
          ],
          "enumLabels": [
            "CLAMAV_SCAN_ENGINE"
          ],
          "type": "string"
        },
        "engineTypeIn": {
          "type": "string"
        },
        "idEqual": {
          "type": "integer"
        },
        "idIn": {
          "type": "string"
        },
        "nameEqual": {
          "type": "string"
        },
        "nameLike": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "partnerIdIn": {
          "type": "string"
        },
        "statusEqual": {
          "enum": [
            1,
            2,
            3
          ],
          "enumLabels": [
            "DISABLED",
            "ENABLED",
            "DELETED"
          ],
          "type": "integer"
        },
        "statusIn": {
          "type": "string"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaVirusScanProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaVirusScanProfileBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaVirusScanProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaVirusScanProfile"
          },
          "type": "array"
        }
      }
    },
    "KalturaWebcamTokenResource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDataCenterContentResource"
        }
      ],
      "description": "Used to ingest media that streamed to the system and represented by token that returned from media server such as FMS or red5.\n ",
      "properties": {
        "token": {
          "description": "Token that returned from media server such as FMS or red5.",
          "type": "string"
        }
      }
    },
    "KalturaWidget": {
      "description": "",
      "properties": {
        "addEmbedHtml5Support": {
          "description": "Addes the HTML5 script line to the widget's embed code",
          "type": "boolean"
        },
        "createdAt": {
          "readOnly": true,
          "type": "integer"
        },
        "enforceEntitlement": {
          "description": "Should enforce entitlement on feed entries",
          "type": "boolean"
        },
        "entryId": {
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "partnerData": {
          "description": "Can be used to store various partner related data as a string",
          "type": "string"
        },
        "partnerId": {
          "readOnly": true,
          "type": "integer"
        },
        "privacyContext": {
          "description": "Set privacy context for search entries that assiged to private and public categories within a category privacy context.",
          "type": "string"
        },
        "rootWidgetId": {
          "readOnly": true,
          "type": "string"
        },
        "securityPolicy": {
          "type": "integer"
        },
        "securityType": {
          "enum": [
            1,
            2
          ],
          "enumLabels": [
            "NONE",
            "TIMEHASH"
          ],
          "type": "integer"
        },
        "sourceWidgetId": {
          "type": "string"
        },
        "uiConfId": {
          "type": "integer"
        },
        "updatedAt": {
          "readOnly": true,
          "type": "integer"
        },
        "widgetHTML": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "KalturaWidgetBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "",
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "type": "integer"
        },
        "entryIdEqual": {
          "type": "string"
        },
        "idEqual": {
          "type": "string"
        },
        "idIn": {
          "type": "string"
        },
        "partnerDataLike": {
          "type": "string"
        },
        "partnerIdEqual": {
          "type": "integer"
        },
        "rootWidgetIdEqual": {
          "type": "string"
        },
        "sourceWidgetIdEqual": {
          "type": "string"
        },
        "uiConfIdEqual": {
          "type": "integer"
        },
        "updatedAtGreaterThanOrEqual": {
          "type": "integer"
        },
        "updatedAtLessThanOrEqual": {
          "type": "integer"
        }
      }
    },
    "KalturaWidgetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaWidgetBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaWidgetListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaWidget"
          },
          "type": "array"
        }
      }
    },
    "KalturaWorkerQueueFilter": {
      "description": "",
      "properties": {
        "filter": {
          "$ref": "#/definitions/KalturaBatchJobFilter"
        },
        "jobType": {
          "enum": [
            "0",
            "caption.parsemultilanguagecaptionasset",
            "captionSearch.parseCaptionAsset",
            "contentDistribution.DistributionDelete",
            "contentDistribution.DistributionDisable",
            "contentDistribution.DistributionEnable",
            "contentDistribution.DistributionFetchReport",
            "contentDistribution.DistributionSubmit",
            "contentDistribution.DistributionSync",
            "contentDistribution.DistributionUpdate",
            "dropFolder.DropFolderContentProcessor",
            "dropFolder.DropFolderWatcher",
            "eventNotification.EventNotificationHandler",
            "scheduledTask.ScheduledTask",
            "tagSearch.IndexTagsByPrivacyContext",
            "tagSearch.TagResolve",
            "virusScan.VirusScan",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "10",
            "11",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41"
          ],
          "enumLabels": [
            "CONVERT",
            "PARSE_MULTI_LANGUAGE_CAPTION_ASSET",
            "PARSE_CAPTION_ASSET",
            "DISTRIBUTION_DELETE",
            "DISTRIBUTION_DISABLE",
            "DISTRIBUTION_ENABLE",
            "DISTRIBUTION_FETCH_REPORT",
            "DISTRIBUTION_SUBMIT",
            "DISTRIBUTION_SYNC",
            "DISTRIBUTION_UPDATE",
            "DROP_FOLDER_CONTENT_PROCESSOR",
            "DROP_FOLDER_WATCHER",
            "EVENT_NOTIFICATION_HANDLER",
            "SCHEDULED_TASK",
            "INDEX_TAGS",
            "TAG_RESOLVE",
            "VIRUS_SCAN",
            "IMPORT",
            "DELETE",
            "FLATTEN",
            "BULKUPLOAD",
            "DVDCREATOR",
            "DOWNLOAD",
            "OOCONVERT",
            "CONVERT_PROFILE",
            "POSTCONVERT",
            "EXTRACT_MEDIA",
            "MAIL",
            "NOTIFICATION",
            "CLEANUP",
            "SCHEDULER_HELPER",
            "BULKDOWNLOAD",
            "DB_CLEANUP",
            "PROVISION_PROVIDE",
            "CONVERT_COLLECTION",
            "STORAGE_EXPORT",
            "PROVISION_DELETE",
            "STORAGE_DELETE",
            "EMAIL_INGESTION",
            "METADATA_IMPORT",
            "METADATA_TRANSFORM",
            "FILESYNC_IMPORT",
            "CAPTURE_THUMB",
            "DELETE_FILE",
            "INDEX",
            "MOVE_CATEGORY_ENTRIES",
            "COPY",
            "CONCAT",
            "CONVERT_LIVE_SEGMENT",
            "COPY_PARTNER",
            "VALIDATE_LIVE_MEDIA_SERVERS",
            "SYNC_CATEGORY_PRIVACY_CONTEXT",
            "LIVE_REPORT_EXPORT",
            "RECALCULATE_CACHE"
          ],
          "type": "string"
        },
        "schedulerId": {
          "type": "integer"
        },
        "workerId": {
          "type": "integer"
        }
      }
    },
    "KalturaYahooSyndicationFeed": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSyndicationFeed"
        }
      ],
      "description": "",
      "properties": {
        "adultContent": {
          "enum": [
            "adult",
            "nonadult"
          ],
          "enumLabels": [
            "ADULT",
            "NON_ADULT"
          ],
          "type": "string"
        },
        "category": {
          "enum": [
            "Action",
            "Animals",
            "Art &amp; Animation",
            "Commercials",
            "Entertainment &amp; TV",
            "Family",
            "Food",
            "Funny Videos",
            "Games",
            "Health &amp; Beauty",
            "How-To",
            "Movies &amp; Shorts",
            "Music",
            "News &amp; Politics",
            "People &amp; Vlogs",
            "Products &amp; Tech.",
            "Science &amp; Environment",
            "Sports",
            "Transportation",
            "Travel"
          ],
          "enumLabels": [
            "ACTION",
            "ANIMALS",
            "ART_AND_ANIMATION",
            "COMMERCIALS",
            "ENTERTAINMENT_AND_TV",
            "FAMILY",
            "FOOD",
            "FUNNY_VIDEOS",
            "GAMES",
            "HEALTH_AND_BEAUTY",
            "HOW_TO",
            "MOVIES_AND_SHORTS",
            "MUSIC",
            "NEWS_AND_POLITICS",
            "PEOPLE_AND_VLOGS",
            "PRODUCTS_AND_TECH",
            "SCIENCE_AND_ENVIRONMENT",
            "SPORTS",
            "TRANSPORTATION",
            "TRAVEL"
          ],
          "readOnly": true,
          "type": "string"
        },
        "feedDescription": {
          "description": "feed description",
          "type": "string"
        },
        "feedLandingPage": {
          "description": "feed landing page (i.e publisher website)",
          "type": "string"
        }
      }
    },
    "KalturaYahooSyndicationFeedBaseFilter": {
      "abstract": true,
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSyndicationFeedFilter"
        }
      ],
      "description": "",
      "properties": {}
    },
    "KalturaYahooSyndicationFeedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaYahooSyndicationFeedBaseFilter"
        }
      ],
      "description": "",
      "properties": {}
    }
  },
  "host": "www.kaltura.com",
  "info": {
    "description": "The Kaltura API",
    "title": "Kaltura",
    "version": "3"
  },
  "paths": {
    "/service/accesscontrol/action/add": {
      "get": {
        "description": "Add new Access Control Profile\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The name of the Access Control Profile",
            "in": "query",
            "name": "accessControl[name]",
            "type": "string"
          },
          {
            "description": "System name of the Access Control Profile",
            "in": "query",
            "name": "accessControl[systemName]",
            "type": "string"
          },
          {
            "description": "The description of the Access Control Profile",
            "in": "query",
            "name": "accessControl[description]",
            "type": "string"
          },
          {
            "description": "True if this Conversion Profile is the default",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "accessControl[isDefault]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "accessControl[restrictions]",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAccessControl"
            }
          }
        },
        "tags": [
          "accessControl"
        ]
      }
    },
    "/service/accesscontrol/action/delete": {
      "get": {
        "description": "Delete Access Control Profile by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "accessControl"
        ]
      }
    },
    "/service/accesscontrol/action/get": {
      "get": {
        "description": "Get Access Control Profile by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAccessControl"
            }
          }
        },
        "tags": [
          "accessControl"
        ]
      }
    },
    "/service/accesscontrol/action/list": {
      "get": {
        "description": "List Access Control Profiles by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAccessControlListResponse"
            }
          }
        },
        "tags": [
          "accessControl"
        ]
      }
    },
    "/service/accesscontrol/action/update": {
      "get": {
        "description": "Update Access Control Profile by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The name of the Access Control Profile",
            "in": "query",
            "name": "accessControl[name]",
            "type": "string"
          },
          {
            "description": "System name of the Access Control Profile",
            "in": "query",
            "name": "accessControl[systemName]",
            "type": "string"
          },
          {
            "description": "The description of the Access Control Profile",
            "in": "query",
            "name": "accessControl[description]",
            "type": "string"
          },
          {
            "description": "True if this Conversion Profile is the default",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "accessControl[isDefault]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "accessControl[restrictions]",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAccessControl"
            }
          }
        },
        "tags": [
          "accessControl"
        ]
      }
    },
    "/service/accesscontrolprofile/action/add": {
      "get": {
        "description": "Add new access control profile\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The name of the Access Control Profile",
            "in": "query",
            "name": "accessControlProfile[name]",
            "type": "string"
          },
          {
            "description": "System name of the Access Control Profile",
            "in": "query",
            "name": "accessControlProfile[systemName]",
            "type": "string"
          },
          {
            "description": "The description of the Access Control Profile",
            "in": "query",
            "name": "accessControlProfile[description]",
            "type": "string"
          },
          {
            "description": "True if this access control profile is the partner default",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "accessControlProfile[isDefault]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "accessControlProfile[rules]",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAccessControlProfile"
            }
          }
        },
        "tags": [
          "accessControlProfile"
        ]
      }
    },
    "/service/accesscontrolprofile/action/delete": {
      "get": {
        "description": "Delete access control profile by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "accessControlProfile"
        ]
      }
    },
    "/service/accesscontrolprofile/action/get": {
      "get": {
        "description": "Get access control profile by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAccessControlProfile"
            }
          }
        },
        "tags": [
          "accessControlProfile"
        ]
      }
    },
    "/service/accesscontrolprofile/action/list": {
      "get": {
        "description": "List access control profiles by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAccessControlProfileListResponse"
            }
          }
        },
        "tags": [
          "accessControlProfile"
        ]
      }
    },
    "/service/accesscontrolprofile/action/update": {
      "get": {
        "description": "Update access control profile by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The name of the Access Control Profile",
            "in": "query",
            "name": "accessControlProfile[name]",
            "type": "string"
          },
          {
            "description": "System name of the Access Control Profile",
            "in": "query",
            "name": "accessControlProfile[systemName]",
            "type": "string"
          },
          {
            "description": "The description of the Access Control Profile",
            "in": "query",
            "name": "accessControlProfile[description]",
            "type": "string"
          },
          {
            "description": "True if this access control profile is the partner default",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "accessControlProfile[isDefault]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "accessControlProfile[rules]",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAccessControlProfile"
            }
          }
        },
        "tags": [
          "accessControlProfile"
        ]
      }
    },
    "/service/adminconsole_entryadmin/action/get": {
      "get": {
        "description": "Get base entry by ID with no filters.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired version of the data",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntry"
            }
          }
        },
        "tags": [
          "entryAdmin"
        ]
      }
    },
    "/service/adminconsole_entryadmin/action/getByFlavorId": {
      "get": {
        "description": "Get base entry by flavor ID with no filters.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "flavorId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired version of the data",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntry"
            }
          }
        },
        "tags": [
          "entryAdmin"
        ]
      }
    },
    "/service/adminconsole_entryadmin/action/getTracks": {
      "get": {
        "description": "Get base entry by ID with no filters.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTrackEntryListResponse"
            }
          }
        },
        "tags": [
          "entryAdmin"
        ]
      }
    },
    "/service/adminconsole_reportadmin/action/add": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Partner id associated with the report",
            "in": "query",
            "name": "report[partnerId]",
            "type": "integer"
          },
          {
            "description": "Report name",
            "in": "query",
            "name": "report[name]",
            "type": "string"
          },
          {
            "description": "Used to identify system reports in a friendly way",
            "in": "query",
            "name": "report[systemName]",
            "type": "string"
          },
          {
            "description": "Report description",
            "in": "query",
            "name": "report[description]",
            "type": "string"
          },
          {
            "description": "Report query",
            "in": "query",
            "name": "report[query]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaReport"
            }
          }
        },
        "tags": [
          "reportAdmin"
        ]
      }
    },
    "/service/adminconsole_reportadmin/action/delete": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "reportAdmin"
        ]
      }
    },
    "/service/adminconsole_reportadmin/action/executeDebug": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaReportResponse"
            }
          }
        },
        "tags": [
          "reportAdmin"
        ]
      }
    },
    "/service/adminconsole_reportadmin/action/get": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaReport"
            }
          }
        },
        "tags": [
          "reportAdmin"
        ]
      }
    },
    "/service/adminconsole_reportadmin/action/getCsvUrl": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "reportPartnerId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "reportAdmin"
        ]
      }
    },
    "/service/adminconsole_reportadmin/action/getParameters": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "reportAdmin"
        ]
      }
    },
    "/service/adminconsole_reportadmin/action/list": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaReportListResponse"
            }
          }
        },
        "tags": [
          "reportAdmin"
        ]
      }
    },
    "/service/adminconsole_reportadmin/action/update": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Partner id associated with the report",
            "in": "query",
            "name": "report[partnerId]",
            "type": "integer"
          },
          {
            "description": "Report name",
            "in": "query",
            "name": "report[name]",
            "type": "string"
          },
          {
            "description": "Used to identify system reports in a friendly way",
            "in": "query",
            "name": "report[systemName]",
            "type": "string"
          },
          {
            "description": "Report description",
            "in": "query",
            "name": "report[description]",
            "type": "string"
          },
          {
            "description": "Report query",
            "in": "query",
            "name": "report[query]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaReport"
            }
          }
        },
        "tags": [
          "reportAdmin"
        ]
      }
    },
    "/service/adminconsole_uiconfadmin/action/add": {
      "get": {
        "description": "Adds new UIConf with no partner limitation\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "uiConf[isPublic]",
            "type": "boolean"
          },
          {
            "description": "Name of the uiConf, this is not a primary key",
            "in": "query",
            "name": "uiConf[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[description]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21
            ],
            "enumLabels": [
              "PLAYER",
              "CONTRIBUTION_WIZARD",
              "SIMPLE_EDITOR",
              "ADVANCED_EDITOR",
              "PLAYLIST",
              "APP_STUDIO",
              "KRECORD",
              "PLAYER_V3",
              "KMC_ACCOUNT",
              "KMC_ANALYTICS",
              "KMC_CONTENT",
              "KMC_DASHBOARD",
              "KMC_LOGIN",
              "PLAYER_SL",
              "CLIENTSIDE_ENCODER",
              "KMC_GENERAL",
              "KMC_ROLES_AND_PERMISSIONS",
              "CLIPPER",
              "KSR",
              "KUPLOAD",
              "WEBCASTING"
            ],
            "in": "query",
            "name": "uiConf[objType]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[width]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[height]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[htmlParams]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[swfUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[confFile]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[confFileFeatures]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[config]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[confVars]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[useCdn]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "uiConf[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[swfUrlVersion]",
            "type": "string"
          },
          {
            "enum": [
              2,
              3
            ],
            "enumLabels": [
              "WIZARD",
              "ADVANCED"
            ],
            "in": "query",
            "name": "uiConf[creationMode]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[html5Url]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[partnerTags]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUiConfAdmin"
            }
          }
        },
        "tags": [
          "uiConfAdmin"
        ]
      }
    },
    "/service/adminconsole_uiconfadmin/action/delete": {
      "get": {
        "description": "Delete an existing UIConf with no partner limitation\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "uiConfAdmin"
        ]
      }
    },
    "/service/adminconsole_uiconfadmin/action/get": {
      "get": {
        "description": "Retrieve a UIConf by id with no partner limitation\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUiConfAdmin"
            }
          }
        },
        "tags": [
          "uiConfAdmin"
        ]
      }
    },
    "/service/adminconsole_uiconfadmin/action/list": {
      "get": {
        "description": "Retrieve a list of available UIConfs  with no partner limitation\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaUiConfAdminBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21
            ],
            "enumLabels": [
              "PLAYER",
              "CONTRIBUTION_WIZARD",
              "SIMPLE_EDITOR",
              "ADVANCED_EDITOR",
              "PLAYLIST",
              "APP_STUDIO",
              "KRECORD",
              "PLAYER_V3",
              "KMC_ACCOUNT",
              "KMC_ANALYTICS",
              "KMC_CONTENT",
              "KMC_DASHBOARD",
              "KMC_LOGIN",
              "PLAYER_SL",
              "CLIENTSIDE_ENCODER",
              "KMC_GENERAL",
              "KMC_ROLES_AND_PERMISSIONS",
              "CLIPPER",
              "KSR",
              "KUPLOAD",
              "WEBCASTING"
            ],
            "in": "query",
            "name": "filter[objTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[objTypeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              2,
              3
            ],
            "enumLabels": [
              "WIZARD",
              "ADVANCED"
            ],
            "in": "query",
            "name": "filter[creationModeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[creationModeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[versionEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[versionMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[versionMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerTagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerTagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUiConfAdminListResponse"
            }
          }
        },
        "tags": [
          "uiConfAdmin"
        ]
      }
    },
    "/service/adminconsole_uiconfadmin/action/update": {
      "get": {
        "description": "Update an existing UIConf with no partner limitation\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[isPublic]",
            "type": "boolean"
          },
          {
            "description": "Name of the uiConf, this is not a primary key",
            "in": "query",
            "name": "uiConf[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[description]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21
            ],
            "enumLabels": [
              "PLAYER",
              "CONTRIBUTION_WIZARD",
              "SIMPLE_EDITOR",
              "ADVANCED_EDITOR",
              "PLAYLIST",
              "APP_STUDIO",
              "KRECORD",
              "PLAYER_V3",
              "KMC_ACCOUNT",
              "KMC_ANALYTICS",
              "KMC_CONTENT",
              "KMC_DASHBOARD",
              "KMC_LOGIN",
              "PLAYER_SL",
              "CLIENTSIDE_ENCODER",
              "KMC_GENERAL",
              "KMC_ROLES_AND_PERMISSIONS",
              "CLIPPER",
              "KSR",
              "KUPLOAD",
              "WEBCASTING"
            ],
            "in": "query",
            "name": "uiConf[objType]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[width]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[height]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[htmlParams]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[swfUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[confFile]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[confFileFeatures]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[config]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[confVars]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[useCdn]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "uiConf[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[swfUrlVersion]",
            "type": "string"
          },
          {
            "enum": [
              2,
              3
            ],
            "enumLabels": [
              "WIZARD",
              "ADVANCED"
            ],
            "in": "query",
            "name": "uiConf[creationMode]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[html5Url]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[partnerTags]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUiConfAdmin"
            }
          }
        },
        "tags": [
          "uiConfAdmin"
        ]
      }
    },
    "/service/adminuser/action/login": {
      "get": {
        "description": "Get an admin session using admin email and password (Used for login to the KMC application)\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "password",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "partnerId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "adminUser"
        ]
      }
    },
    "/service/adminuser/action/resetPassword": {
      "get": {
        "description": "Reset admin user password and send it to the users email address\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "adminUser"
        ]
      }
    },
    "/service/adminuser/action/setInitialPassword": {
      "get": {
        "description": "Set initial users password\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "hashKey",
            "required": false,
            "type": "string"
          },
          {
            "description": "new password to set",
            "in": "query",
            "name": "newPassword",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "adminUser"
        ]
      }
    },
    "/service/adminuser/action/updatePassword": {
      "get": {
        "description": "Update admin user password and email\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "password",
            "required": false,
            "type": "string"
          },
          {
            "description": "Optional, provide only when you want to update the email",
            "in": "query",
            "name": "newEmail",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "newPassword",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAdminUser"
            }
          }
        },
        "tags": [
          "adminUser"
        ]
      }
    },
    "/service/annotation_annotation/action/add": {
      "get": {
        "description": "Allows you to add an annotation object associated with an entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAnnotation",
              "KalturaAdCuePoint",
              "KalturaAnswerCuePoint",
              "KalturaCodeCuePoint",
              "KalturaEventCuePoint",
              "KalturaQuestionCuePoint",
              "KalturaThumbCuePoint"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "annotation[entryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[triggeredAt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "annotation[tags]",
            "type": "string"
          },
          {
            "description": "Start time in milliseconds",
            "in": "query",
            "name": "annotation[startTime]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "annotation[partnerData]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[partnerSortValue]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "annotation[forceStop]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "annotation[thumbOffset]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "annotation[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[parentId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[text]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "string"
          },
          {
            "description": "End time in milliseconds",
            "in": "query",
            "name": "annotation[endTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "integer"
          },
          {
            "description": "Is the annotation public.",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "annotation[isPublic]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "integer"
          },
          {
            "description": "Should the cue point get indexed on the entry.",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "annotation[searchableOnEntry]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "integer"
          },
          {
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "CUSTOM",
              "VAST",
              "VAST_2_0",
              "VPAID"
            ],
            "in": "query",
            "name": "annotation[protocolType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[sourceUrl]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "VIDEO",
              "OVERLAY"
            ],
            "in": "query",
            "name": "annotation[adType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[title]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[endTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "integer"
          },
          {
            "description": "Duration in milliseconds",
            "in": "query",
            "name": "annotation[duration]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "annotation[parentId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[quizUserEntryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[answerKey]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[correctAnswerKeys]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            }
          },
          {
            "in": "query",
            "name": "annotation[code]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[description]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[endTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePoint"
            },
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "BROADCAST_START",
              "BROADCAST_END"
            ],
            "in": "query",
            "name": "annotation[eventType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[optionalAnswers]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "array"
          },
          {
            "in": "query",
            "name": "annotation[hint]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[question]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[explanation]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[assetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[description]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[title]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "string"
          },
          {
            "description": "The sub type of the ThumbCuePoint",
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "SLIDE",
              "CHAPTER"
            ],
            "in": "query",
            "name": "annotation[subType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAnnotation"
            }
          }
        },
        "tags": [
          "annotation"
        ]
      }
    },
    "/service/annotation_annotation/action/addFromBulk": {
      "get": {
        "description": "Allows you to add multiple cue points objects by uploading XML that contains multiple cue point definitions\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCuePointListResponse"
            }
          }
        },
        "tags": [
          "annotation"
        ]
      }
    },
    "/service/annotation_annotation/action/count": {
      "get": {
        "description": "count cue point objects by filter\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAdCuePointBaseFilter",
              "KalturaAnnotationBaseFilter",
              "KalturaAnswerCuePointBaseFilter",
              "KalturaCodeCuePointBaseFilter",
              "KalturaEventCuePointBaseFilter",
              "KalturaQuestionCuePointBaseFilter",
              "KalturaThumbCuePointBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[freeText]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[userIdEqualCurrent]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[userIdCurrent]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "enum": [
              "adCuePoint.Ad",
              "annotation.Annotation",
              "codeCuePoint.Code",
              "eventCuePoint.Event",
              "quiz.QUIZ_ANSWER",
              "quiz.QUIZ_QUESTION",
              "thumbCuePoint.Thumb"
            ],
            "enumLabels": [
              "AD",
              "ANNOTATION",
              "CODE",
              "EVENT",
              "QUIZ_ANSWER",
              "QUIZ_QUESTION",
              "THUMB"
            ],
            "in": "query",
            "name": "filter[cuePointTypeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[cuePointTypeIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "READY",
              "DELETED",
              "HANDLED",
              "PENDING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[triggeredAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[triggeredAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[tagsLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[startTimeGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[startTimeLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[userIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[forceStopEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "CUSTOM",
              "VAST",
              "VAST_2_0",
              "VPAID"
            ],
            "in": "query",
            "name": "filter[protocolTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[protocolTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[parentIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parentIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[isPublicEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[codeLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "BROADCAST_START",
              "BROADCAST_END"
            ],
            "in": "query",
            "name": "filter[eventTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[eventTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "SLIDE",
              "CHAPTER"
            ],
            "in": "query",
            "name": "filter[subTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[subTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "annotation"
        ]
      }
    },
    "/service/annotation_annotation/action/delete": {
      "get": {
        "description": "delete cue point by id, and delete all children cue points\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "annotation"
        ]
      }
    },
    "/service/annotation_annotation/action/get": {
      "get": {
        "description": "Retrieve an CuePoint object by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCuePoint"
            }
          }
        },
        "tags": [
          "annotation"
        ]
      }
    },
    "/service/annotation_annotation/action/list": {
      "get": {
        "description": "List annotation objects by filter and pager\n\t",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAdCuePointBaseFilter",
              "KalturaAnnotationBaseFilter",
              "KalturaAnswerCuePointBaseFilter",
              "KalturaCodeCuePointBaseFilter",
              "KalturaEventCuePointBaseFilter",
              "KalturaQuestionCuePointBaseFilter",
              "KalturaThumbCuePointBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[freeText]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[userIdEqualCurrent]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[userIdCurrent]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "enum": [
              "adCuePoint.Ad",
              "annotation.Annotation",
              "codeCuePoint.Code",
              "eventCuePoint.Event",
              "quiz.QUIZ_ANSWER",
              "quiz.QUIZ_QUESTION",
              "thumbCuePoint.Thumb"
            ],
            "enumLabels": [
              "AD",
              "ANNOTATION",
              "CODE",
              "EVENT",
              "QUIZ_ANSWER",
              "QUIZ_QUESTION",
              "THUMB"
            ],
            "in": "query",
            "name": "filter[cuePointTypeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[cuePointTypeIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "READY",
              "DELETED",
              "HANDLED",
              "PENDING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[triggeredAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[triggeredAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[tagsLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[startTimeGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[startTimeLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[userIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[forceStopEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "CUSTOM",
              "VAST",
              "VAST_2_0",
              "VPAID"
            ],
            "in": "query",
            "name": "filter[protocolTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[protocolTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[parentIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parentIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[isPublicEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[codeLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "BROADCAST_START",
              "BROADCAST_END"
            ],
            "in": "query",
            "name": "filter[eventTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[eventTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "SLIDE",
              "CHAPTER"
            ],
            "in": "query",
            "name": "filter[subTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[subTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAnnotationListResponse"
            }
          }
        },
        "tags": [
          "annotation"
        ]
      }
    },
    "/service/annotation_annotation/action/serveBulk": {
      "get": {
        "description": "Download multiple cue points objects as XML definitions\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAdCuePointBaseFilter",
              "KalturaAnnotationBaseFilter",
              "KalturaAnswerCuePointBaseFilter",
              "KalturaCodeCuePointBaseFilter",
              "KalturaEventCuePointBaseFilter",
              "KalturaQuestionCuePointBaseFilter",
              "KalturaThumbCuePointBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[freeText]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[userIdEqualCurrent]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[userIdCurrent]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "enum": [
              "adCuePoint.Ad",
              "annotation.Annotation",
              "codeCuePoint.Code",
              "eventCuePoint.Event",
              "quiz.QUIZ_ANSWER",
              "quiz.QUIZ_QUESTION",
              "thumbCuePoint.Thumb"
            ],
            "enumLabels": [
              "AD",
              "ANNOTATION",
              "CODE",
              "EVENT",
              "QUIZ_ANSWER",
              "QUIZ_QUESTION",
              "THUMB"
            ],
            "in": "query",
            "name": "filter[cuePointTypeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[cuePointTypeIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "READY",
              "DELETED",
              "HANDLED",
              "PENDING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[triggeredAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[triggeredAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[tagsLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[startTimeGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[startTimeLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[userIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[forceStopEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "CUSTOM",
              "VAST",
              "VAST_2_0",
              "VPAID"
            ],
            "in": "query",
            "name": "filter[protocolTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[protocolTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[parentIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parentIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[isPublicEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[codeLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "BROADCAST_START",
              "BROADCAST_END"
            ],
            "in": "query",
            "name": "filter[eventTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[eventTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "SLIDE",
              "CHAPTER"
            ],
            "in": "query",
            "name": "filter[subTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[subTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "annotation"
        ]
      }
    },
    "/service/annotation_annotation/action/update": {
      "get": {
        "description": "Update annotation by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaAnnotation",
              "KalturaAdCuePoint",
              "KalturaAnswerCuePoint",
              "KalturaCodeCuePoint",
              "KalturaEventCuePoint",
              "KalturaQuestionCuePoint",
              "KalturaThumbCuePoint"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "annotation[entryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[triggeredAt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "annotation[tags]",
            "type": "string"
          },
          {
            "description": "Start time in milliseconds",
            "in": "query",
            "name": "annotation[startTime]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "annotation[partnerData]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[partnerSortValue]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "annotation[forceStop]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "annotation[thumbOffset]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "annotation[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[parentId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[text]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "string"
          },
          {
            "description": "End time in milliseconds",
            "in": "query",
            "name": "annotation[endTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "integer"
          },
          {
            "description": "Is the annotation public.",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "annotation[isPublic]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "integer"
          },
          {
            "description": "Should the cue point get indexed on the entry.",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "annotation[searchableOnEntry]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "integer"
          },
          {
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "CUSTOM",
              "VAST",
              "VAST_2_0",
              "VPAID"
            ],
            "in": "query",
            "name": "annotation[protocolType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[sourceUrl]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "VIDEO",
              "OVERLAY"
            ],
            "in": "query",
            "name": "annotation[adType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[title]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[endTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "integer"
          },
          {
            "description": "Duration in milliseconds",
            "in": "query",
            "name": "annotation[duration]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "annotation[parentId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[quizUserEntryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[answerKey]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[correctAnswerKeys]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            }
          },
          {
            "in": "query",
            "name": "annotation[code]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[description]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[endTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePoint"
            },
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "BROADCAST_START",
              "BROADCAST_END"
            ],
            "in": "query",
            "name": "annotation[eventType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[optionalAnswers]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "array"
          },
          {
            "in": "query",
            "name": "annotation[hint]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[question]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[explanation]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[assetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[description]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "annotation[title]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "string"
          },
          {
            "description": "The sub type of the ThumbCuePoint",
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "SLIDE",
              "CHAPTER"
            ],
            "in": "query",
            "name": "annotation[subType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAnnotation"
            }
          }
        },
        "tags": [
          "annotation"
        ]
      }
    },
    "/service/apptoken/action/add": {
      "get": {
        "description": "Add new application authentication token\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Expiry time of current token (unix timestamp in seconds)",
            "in": "query",
            "name": "appToken[expiry]",
            "type": "integer"
          },
          {
            "description": "Type of KS (Kaltura Session) that created using the current token",
            "enum": [
              0,
              2
            ],
            "enumLabels": [
              "USER",
              "ADMIN"
            ],
            "in": "query",
            "name": "appToken[sessionType]",
            "type": "integer"
          },
          {
            "description": "User id of KS (Kaltura Session) that created using the current token",
            "in": "query",
            "name": "appToken[sessionUserId]",
            "type": "string"
          },
          {
            "description": "Expiry duration of KS (Kaltura Session) that created using the current token (in seconds)",
            "in": "query",
            "name": "appToken[sessionDuration]",
            "type": "integer"
          },
          {
            "description": "Comma separated privileges to be applied on KS (Kaltura Session) that created using the current token",
            "in": "query",
            "name": "appToken[sessionPrivileges]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAppToken"
            }
          }
        },
        "tags": [
          "appToken"
        ]
      }
    },
    "/service/apptoken/action/delete": {
      "get": {
        "description": "Delete application authentication token by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "appToken"
        ]
      }
    },
    "/service/apptoken/action/get": {
      "get": {
        "description": "Get application authentication token by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAppToken"
            }
          }
        },
        "tags": [
          "appToken"
        ]
      }
    },
    "/service/apptoken/action/list": {
      "get": {
        "description": "List application authentication tokens by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAppTokenListResponse"
            }
          }
        },
        "tags": [
          "appToken"
        ]
      }
    },
    "/service/apptoken/action/startSession": {
      "get": {
        "description": "Starts a new KS (kaltura Session) based on application authentication token id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "application token id",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "hashed token, built of sha1 on current KS concatenated with the application token",
            "in": "query",
            "name": "tokenHash",
            "required": false,
            "type": "string"
          },
          {
            "description": "session user id, will be ignored if a different user id already defined on the application token",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "description": "session type, will be ignored if a different session type already defined on the application token\n\n",
            "enum": [
              "0",
              "2"
            ],
            "enumLabels": [
              "USER",
              "ADMIN"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "integer"
          },
          {
            "description": "session expiry (in seconds), could be overwritten by shorter expiry of the application token and the session-expiry that defined on the application token ",
            "in": "query",
            "name": "expiry",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSessionInfo"
            }
          }
        },
        "tags": [
          "appToken"
        ]
      }
    },
    "/service/apptoken/action/update": {
      "get": {
        "description": "Update application authentication token by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Expiry time of current token (unix timestamp in seconds)",
            "in": "query",
            "name": "appToken[expiry]",
            "type": "integer"
          },
          {
            "description": "Type of KS (Kaltura Session) that created using the current token",
            "enum": [
              0,
              2
            ],
            "enumLabels": [
              "USER",
              "ADMIN"
            ],
            "in": "query",
            "name": "appToken[sessionType]",
            "type": "integer"
          },
          {
            "description": "User id of KS (Kaltura Session) that created using the current token",
            "in": "query",
            "name": "appToken[sessionUserId]",
            "type": "string"
          },
          {
            "description": "Expiry duration of KS (Kaltura Session) that created using the current token (in seconds)",
            "in": "query",
            "name": "appToken[sessionDuration]",
            "type": "integer"
          },
          {
            "description": "Comma separated privileges to be applied on KS (Kaltura Session) that created using the current token",
            "in": "query",
            "name": "appToken[sessionPrivileges]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAppToken"
            }
          }
        },
        "tags": [
          "appToken"
        ]
      }
    },
    "/service/attachment_attachmentasset/action/add": {
      "get": {
        "description": "Add attachment asset\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The filename of the attachment asset content",
            "in": "query",
            "name": "attachmentAsset[filename]",
            "type": "string"
          },
          {
            "description": "Attachment asset title",
            "in": "query",
            "name": "attachmentAsset[title]",
            "type": "string"
          },
          {
            "description": "The attachment format",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "TEXT",
              "MEDIA",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "attachmentAsset[format]",
            "type": "string"
          },
          {
            "description": "Tags used to identify the Flavor Asset in various scenarios",
            "in": "query",
            "name": "attachmentAsset[tags]",
            "type": "string"
          },
          {
            "description": "The file extension",
            "in": "query",
            "name": "attachmentAsset[fileExt]",
            "type": "string"
          },
          {
            "description": "Partner private data",
            "in": "query",
            "name": "attachmentAsset[partnerData]",
            "type": "string"
          },
          {
            "description": "Partner friendly description",
            "in": "query",
            "name": "attachmentAsset[partnerDescription]",
            "type": "string"
          },
          {
            "description": "Comma separated list of source flavor params ids",
            "in": "query",
            "name": "attachmentAsset[actualSourceAssetParamsIds]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAttachmentAsset"
            }
          }
        },
        "tags": [
          "attachmentAsset"
        ]
      }
    },
    "/service/attachment_attachmentasset/action/delete": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "attachmentAssetId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "attachmentAsset"
        ]
      }
    },
    "/service/attachment_attachmentasset/action/get": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "attachmentAssetId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAttachmentAsset"
            }
          }
        },
        "tags": [
          "attachmentAsset"
        ]
      }
    },
    "/service/attachment_attachmentasset/action/getRemotePaths": {
      "get": {
        "description": "Get remote storage existing paths for the asset\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRemotePathListResponse"
            }
          }
        },
        "tags": [
          "attachmentAsset"
        ]
      }
    },
    "/service/attachment_attachmentasset/action/getUrl": {
      "get": {
        "description": "Get download URL for the asset\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "storageId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "attachmentAsset"
        ]
      }
    },
    "/service/attachment_attachmentasset/action/list": {
      "get": {
        "description": "List attachment Assets by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAttachmentAssetBaseFilter",
              "KalturaCaptionAssetBaseFilter",
              "KalturaFlavorAssetBaseFilter",
              "KalturaThumbAssetBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[sizeGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[sizeLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[tagsLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[deletedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[deletedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "TEXT",
              "MEDIA",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "filter[formatEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[formatIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              2,
              3,
              7,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "READY",
              "DELETED",
              "IMPORTING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[captionParamsIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[captionParamsIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "SRT",
              "DFXP",
              "WEBVTT"
            ],
            "in": "query",
            "name": "filter[formatEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[formatIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              2,
              3,
              7,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "READY",
              "DELETED",
              "IMPORTING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "CONVERTING",
              "READY",
              "DELETED",
              "NOT_APPLICABLE",
              "TEMP",
              "WAIT_FOR_CONVERT",
              "IMPORTING",
              "VALIDATING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[thumbParamsIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[thumbParamsIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              7,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "CAPTURING",
              "READY",
              "DELETED",
              "IMPORTING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAttachmentAssetListResponse"
            }
          }
        },
        "tags": [
          "attachmentAsset"
        ]
      }
    },
    "/service/attachment_attachmentasset/action/serve": {
      "get": {
        "description": "Serves attachment by its id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "attachmentAssetId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "attachmentAsset"
        ]
      }
    },
    "/service/attachment_attachmentasset/action/setContent": {
      "get": {
        "description": "Update content of attachment asset\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaUrlResource",
              "KalturaDataCenterContentResource",
              "KalturaAssetResource",
              "KalturaEntryResource",
              "KalturaFileSyncResource",
              "KalturaOperationResource",
              "KalturaRemoteStorageResources",
              "KalturaStringResource"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Remote URL, FTP, HTTP or HTTPS",
            "in": "query",
            "name": "contentResource[url]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaUrlResource"
            },
            "type": "string"
          },
          {
            "description": "Force Import Job",
            "in": "query",
            "name": "contentResource[forceAsyncDownload]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaUrlResource"
            },
            "type": "boolean"
          },
          {
            "description": "ID of the source asset",
            "in": "query",
            "name": "contentResource[assetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetResource"
            },
            "type": "string"
          },
          {
            "description": "ID of the source entry",
            "in": "query",
            "name": "contentResource[entryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEntryResource"
            },
            "type": "string"
          },
          {
            "description": "ID of the source flavor params, set to null to use the source flavor",
            "in": "query",
            "name": "contentResource[flavorParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEntryResource"
            },
            "type": "integer"
          },
          {
            "description": "The object type of the file sync object",
            "in": "query",
            "name": "contentResource[fileSyncObjectType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "integer"
          },
          {
            "description": "The object sub-type of the file sync object",
            "in": "query",
            "name": "contentResource[objectSubType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "integer"
          },
          {
            "description": "The object id of the file sync object",
            "in": "query",
            "name": "contentResource[objectId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "string"
          },
          {
            "description": "The version of the file sync object",
            "in": "query",
            "name": "contentResource[version]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "contentResource[resource]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaOperationResource"
            }
          },
          {
            "in": "query",
            "name": "contentResource[operationAttributes]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaOperationResource"
            },
            "type": "array"
          },
          {
            "description": "ID of alternative asset params to be used instead of the system default flavor params",
            "in": "query",
            "name": "contentResource[assetParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaOperationResource"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "contentResource[resources]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaRemoteStorageResources"
            },
            "type": "array"
          },
          {
            "description": "Textual content",
            "in": "query",
            "name": "contentResource[content]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaStringResource"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAttachmentAsset"
            }
          }
        },
        "tags": [
          "attachmentAsset"
        ]
      }
    },
    "/service/attachment_attachmentasset/action/update": {
      "get": {
        "description": "Update attachment asset\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "The filename of the attachment asset content",
            "in": "query",
            "name": "attachmentAsset[filename]",
            "type": "string"
          },
          {
            "description": "Attachment asset title",
            "in": "query",
            "name": "attachmentAsset[title]",
            "type": "string"
          },
          {
            "description": "The attachment format",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "TEXT",
              "MEDIA",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "attachmentAsset[format]",
            "type": "string"
          },
          {
            "description": "Tags used to identify the Flavor Asset in various scenarios",
            "in": "query",
            "name": "attachmentAsset[tags]",
            "type": "string"
          },
          {
            "description": "The file extension",
            "in": "query",
            "name": "attachmentAsset[fileExt]",
            "type": "string"
          },
          {
            "description": "Partner private data",
            "in": "query",
            "name": "attachmentAsset[partnerData]",
            "type": "string"
          },
          {
            "description": "Partner friendly description",
            "in": "query",
            "name": "attachmentAsset[partnerDescription]",
            "type": "string"
          },
          {
            "description": "Comma separated list of source flavor params ids",
            "in": "query",
            "name": "attachmentAsset[actualSourceAssetParamsIds]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAttachmentAsset"
            }
          }
        },
        "tags": [
          "attachmentAsset"
        ]
      }
    },
    "/service/baseentry/action/add": {
      "get": {
        "description": "Generic add entry, should be used when the uploaded entry type is not known.\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaDataEntry",
              "KalturaDocumentEntry",
              "KalturaPlayableEntry",
              "KalturaPlaylist"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "entry[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "entry[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "entry[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "entry[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "entry[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "entry[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "entry[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "entry[categoriesIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entry[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "entry[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "entry[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "entry[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "entry[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "entry[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "entry[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "entry[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "entry[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "entry[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "entry[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entry[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "entry[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "entry[entitledUsersPublish]",
            "type": "string"
          },
          {
            "description": "The data of the entry",
            "in": "query",
            "name": "entry[dataContent]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDataEntry"
            },
            "type": "string"
          },
          {
            "description": "indicator whether to return the object for get action with the dataContent field.",
            "in": "query",
            "name": "entry[retrieveDataContentByGet]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDataEntry"
            },
            "type": "boolean"
          },
          {
            "description": "The type of the document",
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "entry[documentType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntry"
            },
            "type": "integer"
          },
          {
            "description": "The duration in miliseconds",
            "in": "query",
            "name": "entry[msDuration]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntry"
            },
            "type": "integer"
          },
          {
            "description": "Content of the playlist - \n\t XML if the playlistType is dynamic \n\t text if the playlistType is static \n\t url if the playlistType is mRss",
            "in": "query",
            "name": "entry[playlistContent]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlaylist"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "entry[filters]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlaylist"
            },
            "type": "array"
          },
          {
            "description": "Maximum count of results to be returned in playlist execution",
            "in": "query",
            "name": "entry[totalResults]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlaylist"
            },
            "type": "integer"
          },
          {
            "description": "Type of playlist",
            "enum": [
              3,
              10,
              101
            ],
            "enumLabels": [
              "STATIC_LIST",
              "DYNAMIC",
              "EXTERNAL"
            ],
            "in": "query",
            "name": "entry[playlistType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlaylist"
            },
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntry"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/addContent": {
      "get": {
        "description": "Attach content resource to entry in status NO_MEDIA\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaContentResource",
              "KalturaAssetParamsResourceContainer",
              "KalturaAssetsParamsResourceContainers"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "resource[resource]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetParamsResourceContainer"
            }
          },
          {
            "description": "The asset params to associate with the reaource",
            "in": "query",
            "name": "resource[assetParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetParamsResourceContainer"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "resource[resources]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetsParamsResourceContainers"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntry"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/addFromUploadedFile": {
      "get": {
        "description": "Generic add entry using an uploaded file, should be used when the uploaded entry type is not known.\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaDataEntry",
              "KalturaDocumentEntry",
              "KalturaPlayableEntry",
              "KalturaPlaylist"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "entry[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "entry[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "entry[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "entry[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "entry[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "entry[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "entry[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "entry[categoriesIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entry[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "entry[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "entry[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "entry[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "entry[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "entry[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "entry[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "entry[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "entry[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "entry[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "entry[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entry[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "entry[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "entry[entitledUsersPublish]",
            "type": "string"
          },
          {
            "description": "The data of the entry",
            "in": "query",
            "name": "entry[dataContent]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDataEntry"
            },
            "type": "string"
          },
          {
            "description": "indicator whether to return the object for get action with the dataContent field.",
            "in": "query",
            "name": "entry[retrieveDataContentByGet]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDataEntry"
            },
            "type": "boolean"
          },
          {
            "description": "The type of the document",
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "entry[documentType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntry"
            },
            "type": "integer"
          },
          {
            "description": "The duration in miliseconds",
            "in": "query",
            "name": "entry[msDuration]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntry"
            },
            "type": "integer"
          },
          {
            "description": "Content of the playlist - \n\t XML if the playlistType is dynamic \n\t text if the playlistType is static \n\t url if the playlistType is mRss",
            "in": "query",
            "name": "entry[playlistContent]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlaylist"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "entry[filters]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlaylist"
            },
            "type": "array"
          },
          {
            "description": "Maximum count of results to be returned in playlist execution",
            "in": "query",
            "name": "entry[totalResults]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlaylist"
            },
            "type": "integer"
          },
          {
            "description": "Type of playlist",
            "enum": [
              3,
              10,
              101
            ],
            "enumLabels": [
              "STATIC_LIST",
              "DYNAMIC",
              "EXTERNAL"
            ],
            "in": "query",
            "name": "entry[playlistType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlaylist"
            },
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "uploadTokenId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntry"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/anonymousRank": {
      "get": {
        "description": "Anonymously rank an entry, no validation is done on duplicate rankings.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "rank",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/approve": {
      "get": {
        "description": "Approve the entry and mark the pending flags (if any) as moderated (this will make the entry playable).\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/clone": {
      "get": {
        "description": "Clone an entry with optional attributes to apply to the clone\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Id of entry to clone",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntry"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/count": {
      "get": {
        "description": "Count base entries by filter.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaPlayableEntryBaseFilter",
              "KalturaDataEntryBaseFilter",
              "KalturaDocumentEntryBaseFilter",
              "KalturaPlaylistBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[freeText]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[isRoot]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[categoriesFullNameIn]",
            "type": "string"
          },
          {
            "description": "All entries within this categoy or in child categories",
            "in": "query",
            "name": "filter[categoryAncestorIdIn]",
            "type": "string"
          },
          {
            "description": "The id of the original entry",
            "in": "query",
            "name": "filter[redirectFromEntryId]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only a specific entry (identified by its entryId).",
            "in": "query",
            "name": "filter[idEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving few specific entries (string should include comma separated list of entryId strings).",
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idNotIn]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It should include only one string to search for in entry names (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[nameLike]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry names, while applying an OR logic to retrieve entries that contain at least one input string (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[nameMultiLikeOr]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry names, while applying an AND logic to retrieve entries that contain all input strings (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[nameMultiLikeAnd]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving entries with a specific name.",
            "in": "query",
            "name": "filter[nameEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries which were uploaded by/assigned to users of a specific Kaltura Partner (identified by Partner ID).",
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "description": "This filter should be in use for retrieving only entries within Kaltura network which were uploaded by/assigned to users of few Kaltura Partners  (string should include comma separated list of PartnerIDs)",
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "description": "This filter parameter should be in use for retrieving only entries, uploaded by/assigned to a specific user (identified by user Id).",
            "in": "query",
            "name": "filter[userIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[creatorIdEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It should include only one string to search for in entry tags (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[tagsLike]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, while applying an OR logic to retrieve entries that contain at least one input string (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, while applying an AND logic to retrieve entries that contain all input strings (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It should include only one string to search for in entry tags set by an ADMIN user (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[adminTagsLike]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, set by an ADMIN user, while applying an OR logic to retrieve entries that contain at least one input string (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[adminTagsMultiLikeOr]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, set by an ADMIN user, while applying an AND logic to retrieve entries that contain all input strings (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[adminTagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[categoriesMatchAnd]",
            "type": "string"
          },
          {
            "description": "All entries within these categories or their child categories.",
            "in": "query",
            "name": "filter[categoriesMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[categoriesNotContains]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[categoriesIdsMatchAnd]",
            "type": "string"
          },
          {
            "description": "All entries of the categories, excluding their child categories.\n\t To include entries of the child categories, use categoryAncestorIdIn, or categoriesMatchOr.",
            "in": "query",
            "name": "filter[categoriesIdsMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[categoriesIdsNotContains]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[categoriesIdsEmpty]",
            "type": "integer"
          },
          {
            "description": "This filter should be in use for retrieving only entries, at a specific {",
            "enum": [
              "-2",
              "-1",
              "virusScan.ScanFailure",
              "0",
              "virusScan.Infected",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ],
            "enumLabels": [
              "ERROR_IMPORTING",
              "ERROR_CONVERTING",
              "SCAN_FAILURE",
              "IMPORT",
              "INFECTED",
              "PRECONVERT",
              "READY",
              "DELETED",
              "PENDING",
              "MODERATE",
              "BLOCKED",
              "NO_CONTENT"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries, not at a specific {",
            "enum": [
              "-2",
              "-1",
              "virusScan.ScanFailure",
              "0",
              "virusScan.Infected",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ],
            "enumLabels": [
              "ERROR_IMPORTING",
              "ERROR_CONVERTING",
              "SCAN_FAILURE",
              "IMPORT",
              "INFECTED",
              "PRECONVERT",
              "READY",
              "DELETED",
              "PENDING",
              "MODERATE",
              "BLOCKED",
              "NO_CONTENT"
            ],
            "in": "query",
            "name": "filter[statusNotEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries, at few specific {",
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries, not at few specific {",
            "in": "query",
            "name": "filter[statusNotIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              5,
              6
            ],
            "enumLabels": [
              "PENDING_MODERATION",
              "APPROVED",
              "REJECTED",
              "FLAGGED_FOR_REVIEW",
              "AUTO_APPROVED"
            ],
            "in": "query",
            "name": "filter[moderationStatusEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              5,
              6
            ],
            "enumLabels": [
              "PENDING_MODERATION",
              "APPROVED",
              "REJECTED",
              "FLAGGED_FOR_REVIEW",
              "AUTO_APPROVED"
            ],
            "in": "query",
            "name": "filter[moderationStatusNotEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[moderationStatusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[moderationStatusNotIn]",
            "type": "string"
          },
          {
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "filter[typeEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving entries of few {",
            "in": "query",
            "name": "filter[typeIn]",
            "type": "string"
          },
          {
            "description": "This filter parameter should be in use for retrieving only entries which were created at Kaltura system after a specific time/date (standard timestamp format).",
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "This filter parameter should be in use for retrieving only entries which were created at Kaltura system before a specific time/date (standard timestamp format).",
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[totalRankLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[totalRankGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[groupIdEqual]",
            "type": "integer"
          },
          {
            "description": "This filter should be in use for retrieving specific entries while search match the input string within all of the following metadata attributes: name, description, tags, adminTags.",
            "in": "query",
            "name": "filter[searchTextMatchAnd]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries while search match the input string within at least one of the following metadata attributes: name, description, tags, adminTags.",
            "in": "query",
            "name": "filter[searchTextMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[accessControlIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[accessControlIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[startDateGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[startDateLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[startDateGreaterThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[startDateLessThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endDateGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endDateLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endDateGreaterThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endDateLessThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[referenceIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[referenceIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[replacingEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[replacingEntryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[replacedEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[replacedEntryIdIn]",
            "type": "string"
          },
          {
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "enumLabels": [
              "NONE",
              "APPROVED_BUT_NOT_READY",
              "READY_BUT_NOT_APPROVED",
              "NOT_READY_AND_NOT_APPROVED",
              "FAILED"
            ],
            "in": "query",
            "name": "filter[replacementStatusEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[replacementStatusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[rootEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[rootEntryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parentEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entitledUsersEditMatchAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entitledUsersPublishMatchAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsNameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsAdminTagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsAdminTagsNameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsNameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsAdminTagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsAdminTagsNameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[lastPlayedAtGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[lastPlayedAtLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThan]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThan]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationTypeMatchOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "filter[documentTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[documentTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/delete": {
      "get": {
        "description": "Delete an entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Entry id to delete",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/export": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "storageProfileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntry"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/flag": {
      "get": {
        "description": "Flag inappropriate entry for moderation.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "If moderation flag is set for entry, this is the flagged entry id",
            "in": "query",
            "name": "moderationFlag[flaggedEntryId]",
            "type": "string"
          },
          {
            "description": "If moderation flag is set for user, this is the flagged user id",
            "in": "query",
            "name": "moderationFlag[flaggedUserId]",
            "type": "string"
          },
          {
            "description": "The comment that was added to the flag",
            "in": "query",
            "name": "moderationFlag[comments]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "enumLabels": [
              "SEXUAL_CONTENT",
              "VIOLENT_REPULSIVE",
              "HARMFUL_DANGEROUS",
              "SPAM_COMMERCIALS",
              "COPYRIGHT",
              "TERMS_OF_USE_VIOLATION"
            ],
            "in": "query",
            "name": "moderationFlag[flagType]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/get": {
      "get": {
        "description": "Get base entry by ID.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired version of the data",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntry"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/getByIds": {
      "get": {
        "description": "Get an array of KalturaBaseEntry objects by a comma-separated list of ids.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Comma separated string of entry ids",
            "in": "query",
            "name": "entryIds",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/getContextData": {
      "get": {
        "description": "This action delivers entry-related data, based on the user's context: access control, restriction, playback format and storage information.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Id of the current flavor.",
            "in": "query",
            "name": "contextDataParams[flavorAssetId]",
            "type": "string"
          },
          {
            "description": "The tags of the flavors that should be used for playback.",
            "in": "query",
            "name": "contextDataParams[flavorTags]",
            "type": "string"
          },
          {
            "description": "Playback streamer type: RTMP, HTTP, appleHttps, rtsp, sl.",
            "in": "query",
            "name": "contextDataParams[streamerType]",
            "type": "string"
          },
          {
            "description": "Protocol of the specific media object.",
            "in": "query",
            "name": "contextDataParams[mediaProtocol]",
            "type": "string"
          },
          {
            "description": "URL to be used to test domain conditions.",
            "in": "query",
            "name": "contextDataParams[referrer]",
            "type": "string"
          },
          {
            "description": "IP to be used to test geographic location conditions.",
            "in": "query",
            "name": "contextDataParams[ip]",
            "type": "string"
          },
          {
            "description": "Kaltura session to be used to test session and user conditions.",
            "in": "query",
            "name": "contextDataParams[ks]",
            "type": "string"
          },
          {
            "description": "Browser or client application to be used to test agent conditions.",
            "in": "query",
            "name": "contextDataParams[userAgent]",
            "type": "string"
          },
          {
            "description": "Unix timestamp (In seconds) to be used to test entry scheduling, keep null to use now.",
            "in": "query",
            "name": "contextDataParams[time]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "contextDataParams[contexts]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "contextDataParams[hashes]",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntryContextDataResult"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/getRemotePaths": {
      "get": {
        "description": "Get remote storage existing paths for the asset.\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRemotePathListResponse"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/index": {
      "get": {
        "description": "Index an entry by id.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "shouldUpdate",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/list": {
      "get": {
        "description": "List base entries by filter with paging support.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaPlayableEntryBaseFilter",
              "KalturaDataEntryBaseFilter",
              "KalturaDocumentEntryBaseFilter",
              "KalturaPlaylistBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[freeText]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[isRoot]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[categoriesFullNameIn]",
            "type": "string"
          },
          {
            "description": "All entries within this categoy or in child categories",
            "in": "query",
            "name": "filter[categoryAncestorIdIn]",
            "type": "string"
          },
          {
            "description": "The id of the original entry",
            "in": "query",
            "name": "filter[redirectFromEntryId]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only a specific entry (identified by its entryId).",
            "in": "query",
            "name": "filter[idEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving few specific entries (string should include comma separated list of entryId strings).",
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idNotIn]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It should include only one string to search for in entry names (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[nameLike]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry names, while applying an OR logic to retrieve entries that contain at least one input string (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[nameMultiLikeOr]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry names, while applying an AND logic to retrieve entries that contain all input strings (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[nameMultiLikeAnd]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving entries with a specific name.",
            "in": "query",
            "name": "filter[nameEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries which were uploaded by/assigned to users of a specific Kaltura Partner (identified by Partner ID).",
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "description": "This filter should be in use for retrieving only entries within Kaltura network which were uploaded by/assigned to users of few Kaltura Partners  (string should include comma separated list of PartnerIDs)",
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "description": "This filter parameter should be in use for retrieving only entries, uploaded by/assigned to a specific user (identified by user Id).",
            "in": "query",
            "name": "filter[userIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[creatorIdEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It should include only one string to search for in entry tags (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[tagsLike]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, while applying an OR logic to retrieve entries that contain at least one input string (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, while applying an AND logic to retrieve entries that contain all input strings (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It should include only one string to search for in entry tags set by an ADMIN user (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[adminTagsLike]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, set by an ADMIN user, while applying an OR logic to retrieve entries that contain at least one input string (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[adminTagsMultiLikeOr]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, set by an ADMIN user, while applying an AND logic to retrieve entries that contain all input strings (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "filter[adminTagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[categoriesMatchAnd]",
            "type": "string"
          },
          {
            "description": "All entries within these categories or their child categories.",
            "in": "query",
            "name": "filter[categoriesMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[categoriesNotContains]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[categoriesIdsMatchAnd]",
            "type": "string"
          },
          {
            "description": "All entries of the categories, excluding their child categories.\n\t To include entries of the child categories, use categoryAncestorIdIn, or categoriesMatchOr.",
            "in": "query",
            "name": "filter[categoriesIdsMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[categoriesIdsNotContains]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[categoriesIdsEmpty]",
            "type": "integer"
          },
          {
            "description": "This filter should be in use for retrieving only entries, at a specific {",
            "enum": [
              "-2",
              "-1",
              "virusScan.ScanFailure",
              "0",
              "virusScan.Infected",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ],
            "enumLabels": [
              "ERROR_IMPORTING",
              "ERROR_CONVERTING",
              "SCAN_FAILURE",
              "IMPORT",
              "INFECTED",
              "PRECONVERT",
              "READY",
              "DELETED",
              "PENDING",
              "MODERATE",
              "BLOCKED",
              "NO_CONTENT"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries, not at a specific {",
            "enum": [
              "-2",
              "-1",
              "virusScan.ScanFailure",
              "0",
              "virusScan.Infected",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ],
            "enumLabels": [
              "ERROR_IMPORTING",
              "ERROR_CONVERTING",
              "SCAN_FAILURE",
              "IMPORT",
              "INFECTED",
              "PRECONVERT",
              "READY",
              "DELETED",
              "PENDING",
              "MODERATE",
              "BLOCKED",
              "NO_CONTENT"
            ],
            "in": "query",
            "name": "filter[statusNotEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries, at few specific {",
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries, not at few specific {",
            "in": "query",
            "name": "filter[statusNotIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              5,
              6
            ],
            "enumLabels": [
              "PENDING_MODERATION",
              "APPROVED",
              "REJECTED",
              "FLAGGED_FOR_REVIEW",
              "AUTO_APPROVED"
            ],
            "in": "query",
            "name": "filter[moderationStatusEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              5,
              6
            ],
            "enumLabels": [
              "PENDING_MODERATION",
              "APPROVED",
              "REJECTED",
              "FLAGGED_FOR_REVIEW",
              "AUTO_APPROVED"
            ],
            "in": "query",
            "name": "filter[moderationStatusNotEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[moderationStatusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[moderationStatusNotIn]",
            "type": "string"
          },
          {
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "filter[typeEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving entries of few {",
            "in": "query",
            "name": "filter[typeIn]",
            "type": "string"
          },
          {
            "description": "This filter parameter should be in use for retrieving only entries which were created at Kaltura system after a specific time/date (standard timestamp format).",
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "This filter parameter should be in use for retrieving only entries which were created at Kaltura system before a specific time/date (standard timestamp format).",
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[totalRankLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[totalRankGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[groupIdEqual]",
            "type": "integer"
          },
          {
            "description": "This filter should be in use for retrieving specific entries while search match the input string within all of the following metadata attributes: name, description, tags, adminTags.",
            "in": "query",
            "name": "filter[searchTextMatchAnd]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries while search match the input string within at least one of the following metadata attributes: name, description, tags, adminTags.",
            "in": "query",
            "name": "filter[searchTextMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[accessControlIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[accessControlIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[startDateGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[startDateLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[startDateGreaterThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[startDateLessThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endDateGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endDateLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endDateGreaterThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endDateLessThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[referenceIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[referenceIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[replacingEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[replacingEntryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[replacedEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[replacedEntryIdIn]",
            "type": "string"
          },
          {
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "enumLabels": [
              "NONE",
              "APPROVED_BUT_NOT_READY",
              "READY_BUT_NOT_APPROVED",
              "NOT_READY_AND_NOT_APPROVED",
              "FAILED"
            ],
            "in": "query",
            "name": "filter[replacementStatusEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[replacementStatusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[rootEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[rootEntryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parentEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entitledUsersEditMatchAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entitledUsersPublishMatchAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsNameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsAdminTagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsAdminTagsNameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsNameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsAdminTagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsAdminTagsNameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[lastPlayedAtGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[lastPlayedAtLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThan]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThan]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationTypeMatchOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "filter[documentTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[documentTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntryListResponse"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/listByReferenceId": {
      "get": {
        "description": "List base entries by filter according to reference id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Entry Reference ID",
            "in": "query",
            "name": "refId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntryListResponse"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/listFlags": {
      "get": {
        "description": "List all pending flags for the entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaModerationFlagListResponse"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/reject": {
      "get": {
        "description": "Reject the entry and mark the pending flags (if any) as moderated (this will make the entry non-playable).\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/update": {
      "get": {
        "description": "Update base entry. Only the properties that were set will be updated.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Entry id to update",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaDataEntry",
              "KalturaDocumentEntry",
              "KalturaPlayableEntry",
              "KalturaPlaylist"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "baseEntry[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "baseEntry[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "baseEntry[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "baseEntry[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "baseEntry[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "baseEntry[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "baseEntry[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "baseEntry[categoriesIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "baseEntry[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "baseEntry[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "baseEntry[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "baseEntry[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "baseEntry[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "baseEntry[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "baseEntry[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "baseEntry[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "baseEntry[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "baseEntry[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "baseEntry[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "baseEntry[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "baseEntry[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "baseEntry[entitledUsersPublish]",
            "type": "string"
          },
          {
            "description": "The data of the entry",
            "in": "query",
            "name": "baseEntry[dataContent]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDataEntry"
            },
            "type": "string"
          },
          {
            "description": "indicator whether to return the object for get action with the dataContent field.",
            "in": "query",
            "name": "baseEntry[retrieveDataContentByGet]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDataEntry"
            },
            "type": "boolean"
          },
          {
            "description": "The type of the document",
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "baseEntry[documentType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntry"
            },
            "type": "integer"
          },
          {
            "description": "The duration in miliseconds",
            "in": "query",
            "name": "baseEntry[msDuration]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntry"
            },
            "type": "integer"
          },
          {
            "description": "Content of the playlist - \n\t XML if the playlistType is dynamic \n\t text if the playlistType is static \n\t url if the playlistType is mRss",
            "in": "query",
            "name": "baseEntry[playlistContent]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlaylist"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "baseEntry[filters]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlaylist"
            },
            "type": "array"
          },
          {
            "description": "Maximum count of results to be returned in playlist execution",
            "in": "query",
            "name": "baseEntry[totalResults]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlaylist"
            },
            "type": "integer"
          },
          {
            "description": "Type of playlist",
            "enum": [
              3,
              10,
              101
            ],
            "enumLabels": [
              "STATIC_LIST",
              "DYNAMIC",
              "EXTERNAL"
            ],
            "in": "query",
            "name": "baseEntry[playlistType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlaylist"
            },
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntry"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/updateContent": {
      "get": {
        "description": "Update the content resource associated with the entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Entry id to update",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaContentResource",
              "KalturaAssetParamsResourceContainer",
              "KalturaAssetsParamsResourceContainers"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "resource[resource]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetParamsResourceContainer"
            }
          },
          {
            "description": "The asset params to associate with the reaource",
            "in": "query",
            "name": "resource[assetParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetParamsResourceContainer"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "resource[resources]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetsParamsResourceContainers"
            },
            "type": "array"
          },
          {
            "description": "The conversion profile id to be used on the entry",
            "in": "query",
            "name": "conversionProfileId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "If true manually created thumbnails will not be deleted on entry replacement",
            "in": "query",
            "name": "advancedOptions[keepManualThumbnails]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntry"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/updateThumbnailFromSourceEntry": {
      "get": {
        "description": "Update entry thumbnail from a different entry by a specified time offset (in seconds).\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Media entry id",
            "in": "query",
            "name": "sourceEntryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Time offset (in seconds)",
            "in": "query",
            "name": "timeOffset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntry"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/updateThumbnailFromUrl": {
      "get": {
        "description": "Update entry thumbnail using url.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "file url",
            "in": "query",
            "name": "url",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntry"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/updateThumbnailJpeg": {
      "get": {
        "description": "Update entry thumbnail using a raw jpeg file.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntry"
            }
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/baseentry/action/upload": {
      "get": {
        "description": "Upload a file to Kaltura, that can be used to create an entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "baseEntry"
        ]
      }
    },
    "/service/bulkupload/action/abort": {
      "get": {
        "description": "Aborts the bulk upload and all its child jobs\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "job id",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUpload"
            }
          }
        },
        "tags": [
          "bulkUpload"
        ]
      }
    },
    "/service/bulkupload/action/add": {
      "get": {
        "description": "Add new bulk upload batch job\n\t Conversion profile id can be specified in the API or in the CSV file, the one in the CSV file will be stronger.\n\t If no conversion profile was specified, partner's default will be used\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Convertion profile id to use for converting the current bulk (-1 to use partner's default)",
            "in": "query",
            "name": "conversionProfileId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "bulkUploadCsv.CSV",
              "bulkUploadFilter.FILTER",
              "bulkUploadXml.XML",
              "dropFolderXmlBulkUpload.DROP_FOLDER_XML"
            ],
            "enumLabels": [
              "CSV",
              "FILTER",
              "XML",
              "DROP_FOLDER_XML"
            ],
            "in": "query",
            "name": "bulkUploadType",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "uploadedBy",
            "required": false,
            "type": "string"
          },
          {
            "description": "Friendly name of the file, used to be recognized later in the logs.",
            "in": "query",
            "name": "fileName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUpload"
            }
          }
        },
        "tags": [
          "bulkUpload"
        ]
      }
    },
    "/service/bulkupload/action/get": {
      "get": {
        "description": "Get bulk upload batch job by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUpload"
            }
          }
        },
        "tags": [
          "bulkUpload"
        ]
      }
    },
    "/service/bulkupload/action/list": {
      "get": {
        "description": "List bulk upload batch jobs\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUploadListResponse"
            }
          }
        },
        "tags": [
          "bulkUpload"
        ]
      }
    },
    "/service/bulkupload/action/serve": {
      "get": {
        "description": "serve action returan the original file.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "job id",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bulkUpload"
        ]
      }
    },
    "/service/bulkupload/action/serveLog": {
      "get": {
        "description": "serveLog action returan the original file.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "job id",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bulkUpload"
        ]
      }
    },
    "/service/bulkupload_bulk/action/abort": {
      "get": {
        "description": "Aborts the bulk upload and all its child jobs\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "job id",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUpload"
            }
          }
        },
        "tags": [
          "bulk"
        ]
      }
    },
    "/service/bulkupload_bulk/action/get": {
      "get": {
        "description": "Get bulk upload batch job by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUpload"
            }
          }
        },
        "tags": [
          "bulk"
        ]
      }
    },
    "/service/bulkupload_bulk/action/list": {
      "get": {
        "description": "List bulk upload batch jobs\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "bulkUploadFilter[uploadedOnGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "bulkUploadFilter[uploadedOnLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "bulkUploadFilter[uploadedOnEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "bulkUploadFilter[statusIn]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12
            ],
            "enumLabels": [
              "PENDING",
              "QUEUED",
              "PROCESSING",
              "PROCESSED",
              "MOVEFILE",
              "FINISHED",
              "FAILED",
              "ABORTED",
              "ALMOST_DONE",
              "RETRY",
              "FATAL",
              "DONT_PROCESS",
              "FINISHED_PARTIALLY"
            ],
            "in": "query",
            "name": "bulkUploadFilter[statusEqual]",
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "enumLabels": [
              "ENTRY",
              "CATEGORY",
              "USER",
              "CATEGORY_USER",
              "CATEGORY_ENTRY"
            ],
            "in": "query",
            "name": "bulkUploadFilter[bulkUploadObjectTypeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bulkUploadFilter[bulkUploadObjectTypeIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUploadListResponse"
            }
          }
        },
        "tags": [
          "bulk"
        ]
      }
    },
    "/service/bulkupload_bulk/action/serve": {
      "get": {
        "description": "serve action returns the original file.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "job id",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bulk"
        ]
      }
    },
    "/service/bulkupload_bulk/action/serveLog": {
      "get": {
        "description": "serveLog action returns the log file for the bulk-upload job.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "job id",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bulk"
        ]
      }
    },
    "/service/caption_captionasset/action/add": {
      "get": {
        "description": "Add caption asset\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The Caption Params used to create this Caption Asset",
            "in": "query",
            "name": "captionAsset[captionParamsId]",
            "type": "integer"
          },
          {
            "description": "The language of the caption asset content",
            "enum": [
              "Abkhazian",
              "Afar",
              "Afrikaans",
              "Albanian",
              "Amharic",
              "Arabic",
              "Armenian",
              "Assamese",
              "Aymara",
              "Azerbaijani",
              "Bashkir",
              "Basque",
              "Bengali (Bangla)",
              "Bhutani",
              "Bihari",
              "Bislama",
              "Breton",
              "Bulgarian",
              "Burmese",
              "Byelorussian (Belarusian)",
              "Cambodian",
              "Catalan",
              "Chinese",
              "Corsican",
              "Croatian",
              "Czech",
              "Danish",
              "Dutch",
              "English",
              "Esperanto",
              "Estonian",
              "Faeroese",
              "Farsi",
              "Fiji",
              "Finnish",
              "French",
              "Frisian",
              "Gaelic (Manx)",
              "Gaelic (Scottish)",
              "Galician",
              "Georgian",
              "German",
              "Greek",
              "Greenlandic",
              "Guarani",
              "Gujarati",
              "Hausa",
              "Hebrew",
              "Hebrew",
              "Hindi",
              "Hungarian",
              "Icelandic",
              "Indonesian",
              "Indonesian",
              "Interlingua",
              "Interlingue",
              "Inuktitut",
              "Inupiak",
              "Irish",
              "Italian",
              "Japanese",
              "Javanese",
              "Kannada",
              "Kashmiri",
              "Kazakh",
              "Kinyarwanda (Ruanda)",
              "Kirghiz",
              "Kirundi (Rundi)",
              "Korean",
              "Kurdish",
              "Laothian",
              "Latin",
              "Latvian (Lettish)",
              "Limburgish ( Limburger)",
              "Lingala",
              "Lithuanian",
              "Macedonian",
              "Malagasy",
              "Malay",
              "Malayalam",
              "Maltese",
              "Maori",
              "Marathi",
              "Moldavian",
              "Mongolian",
              "Multilingual",
              "Nauru",
              "Nepali",
              "Norwegian",
              "Occitan",
              "Oriya",
              "Oromo (Afan, Galla)",
              "Pashto (Pushto)",
              "Polish",
              "Portuguese",
              "Punjabi",
              "Quechua",
              "Rhaeto-Romance",
              "Romanian",
              "Russian",
              "Samoan",
              "Sangro",
              "Sanskrit",
              "Serbian",
              "Serbo-Croatian",
              "Sesotho",
              "Setswana",
              "Shona",
              "Sindhi",
              "Sinhalese",
              "Siswati",
              "Slovak",
              "Slovenian",
              "Somali",
              "Spanish",
              "Sundanese",
              "Swahili (Kiswahili)",
              "Swedish",
              "Tagalog",
              "Tajik",
              "Tamil",
              "Tatar",
              "Telugu",
              "Thai",
              "Tibetan",
              "Tigrinya",
              "Tonga",
              "Tsonga",
              "Turkish",
              "Turkmen",
              "Twi",
              "Uighur",
              "Ukrainian",
              "Urdu",
              "Uzbek",
              "Vietnamese",
              "Volapuk",
              "Welsh",
              "Wolof",
              "Xhosa",
              "Yiddish",
              "Yiddish",
              "Yoruba",
              "Zulu"
            ],
            "enumLabels": [
              "AB",
              "AA",
              "AF",
              "SQ",
              "AM",
              "AR",
              "HY",
              "AS_",
              "AY",
              "AZ",
              "BA",
              "EU",
              "BN",
              "DZ",
              "BH",
              "BI",
              "BR",
              "BG",
              "MY",
              "BE",
              "KM",
              "CA",
              "ZH",
              "CO",
              "HR",
              "CS",
              "DA",
              "NL",
              "EN",
              "EO",
              "ET",
              "FO",
              "FA",
              "FJ",
              "FI",
              "FR",
              "FY",
              "GV",
              "GD",
              "GL",
              "KA",
              "DE",
              "EL",
              "KL",
              "GN",
              "GU",
              "HA",
              "IW",
              "HE",
              "HI",
              "HU",
              "IS",
              "IN",
              "ID",
              "IA",
              "IE",
              "IU",
              "IK",
              "GA",
              "IT",
              "JA",
              "JV",
              "KN",
              "KS",
              "KK",
              "RW",
              "KY",
              "RN",
              "KO",
              "KU",
              "LO",
              "LA",
              "LV",
              "LI",
              "LN",
              "LT",
              "MK",
              "MG",
              "MS",
              "ML",
              "MT",
              "MI",
              "MR",
              "MO",
              "MN",
              "MU",
              "NA",
              "NE",
              "NO",
              "OC",
              "OR_",
              "OM",
              "PS",
              "PL",
              "PT",
              "PA",
              "QU",
              "RM",
              "RO",
              "RU",
              "SM",
              "SG",
              "SA",
              "SR",
              "SH",
              "ST",
              "TN",
              "SN",
              "SD",
              "SI",
              "SS",
              "SK",
              "SL",
              "SO",
              "ES",
              "SU",
              "SW",
              "SV",
              "TL",
              "TG",
              "TA",
              "TT",
              "TE",
              "TH",
              "BO",
              "TI",
              "TO",
              "TS",
              "TR",
              "TK",
              "TW",
              "UG",
              "UK",
              "UR",
              "UZ",
              "VI",
              "VO",
              "CY",
              "WO",
              "XH",
              "JI",
              "YI",
              "YO",
              "ZU"
            ],
            "in": "query",
            "name": "captionAsset[language]",
            "type": "string"
          },
          {
            "description": "Is default caption asset of the entry",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "captionAsset[isDefault]",
            "type": "integer"
          },
          {
            "description": "Friendly label",
            "in": "query",
            "name": "captionAsset[label]",
            "type": "string"
          },
          {
            "description": "The caption format",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "SRT",
              "DFXP",
              "WEBVTT"
            ],
            "in": "query",
            "name": "captionAsset[format]",
            "type": "string"
          },
          {
            "description": "The parent id of the asset",
            "in": "query",
            "name": "captionAsset[parentId]",
            "type": "string"
          },
          {
            "description": "Tags used to identify the Flavor Asset in various scenarios",
            "in": "query",
            "name": "captionAsset[tags]",
            "type": "string"
          },
          {
            "description": "The file extension",
            "in": "query",
            "name": "captionAsset[fileExt]",
            "type": "string"
          },
          {
            "description": "Partner private data",
            "in": "query",
            "name": "captionAsset[partnerData]",
            "type": "string"
          },
          {
            "description": "Partner friendly description",
            "in": "query",
            "name": "captionAsset[partnerDescription]",
            "type": "string"
          },
          {
            "description": "Comma separated list of source flavor params ids",
            "in": "query",
            "name": "captionAsset[actualSourceAssetParamsIds]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCaptionAsset"
            }
          }
        },
        "tags": [
          "captionAsset"
        ]
      }
    },
    "/service/caption_captionasset/action/delete": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "captionAssetId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "captionAsset"
        ]
      }
    },
    "/service/caption_captionasset/action/get": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "captionAssetId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCaptionAsset"
            }
          }
        },
        "tags": [
          "captionAsset"
        ]
      }
    },
    "/service/caption_captionasset/action/getRemotePaths": {
      "get": {
        "description": "Get remote storage existing paths for the asset\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRemotePathListResponse"
            }
          }
        },
        "tags": [
          "captionAsset"
        ]
      }
    },
    "/service/caption_captionasset/action/getUrl": {
      "get": {
        "description": "Get download URL for the asset\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "storageId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "captionAsset"
        ]
      }
    },
    "/service/caption_captionasset/action/list": {
      "get": {
        "description": "List caption Assets by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAttachmentAssetBaseFilter",
              "KalturaCaptionAssetBaseFilter",
              "KalturaFlavorAssetBaseFilter",
              "KalturaThumbAssetBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[sizeGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[sizeLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[tagsLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[deletedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[deletedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "TEXT",
              "MEDIA",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "filter[formatEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[formatIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              2,
              3,
              7,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "READY",
              "DELETED",
              "IMPORTING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[captionParamsIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[captionParamsIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "SRT",
              "DFXP",
              "WEBVTT"
            ],
            "in": "query",
            "name": "filter[formatEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[formatIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              2,
              3,
              7,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "READY",
              "DELETED",
              "IMPORTING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "CONVERTING",
              "READY",
              "DELETED",
              "NOT_APPLICABLE",
              "TEMP",
              "WAIT_FOR_CONVERT",
              "IMPORTING",
              "VALIDATING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[thumbParamsIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[thumbParamsIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              7,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "CAPTURING",
              "READY",
              "DELETED",
              "IMPORTING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCaptionAssetListResponse"
            }
          }
        },
        "tags": [
          "captionAsset"
        ]
      }
    },
    "/service/caption_captionasset/action/serve": {
      "get": {
        "description": "Serves caption by its id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "captionAssetId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "captionAsset"
        ]
      }
    },
    "/service/caption_captionasset/action/serveByEntryId": {
      "get": {
        "description": "Serves caption by entry id and thumnail params id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "if not set, default caption will be used.",
            "in": "query",
            "name": "captionParamId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "captionAsset"
        ]
      }
    },
    "/service/caption_captionasset/action/serveWebVTT": {
      "get": {
        "description": "Serves caption by its id converting it to segmented WebVTT\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "captionAssetId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "segmentDuration",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "segmentIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "localTimestamp",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "captionAsset"
        ]
      }
    },
    "/service/caption_captionasset/action/setAsDefault": {
      "get": {
        "description": "Markss the caption as default and removes that mark from all other caption assets of the entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "captionAssetId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "captionAsset"
        ]
      }
    },
    "/service/caption_captionasset/action/setContent": {
      "get": {
        "description": "Update content of caption asset\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaUrlResource",
              "KalturaDataCenterContentResource",
              "KalturaAssetResource",
              "KalturaEntryResource",
              "KalturaFileSyncResource",
              "KalturaOperationResource",
              "KalturaRemoteStorageResources",
              "KalturaStringResource"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Remote URL, FTP, HTTP or HTTPS",
            "in": "query",
            "name": "contentResource[url]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaUrlResource"
            },
            "type": "string"
          },
          {
            "description": "Force Import Job",
            "in": "query",
            "name": "contentResource[forceAsyncDownload]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaUrlResource"
            },
            "type": "boolean"
          },
          {
            "description": "ID of the source asset",
            "in": "query",
            "name": "contentResource[assetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetResource"
            },
            "type": "string"
          },
          {
            "description": "ID of the source entry",
            "in": "query",
            "name": "contentResource[entryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEntryResource"
            },
            "type": "string"
          },
          {
            "description": "ID of the source flavor params, set to null to use the source flavor",
            "in": "query",
            "name": "contentResource[flavorParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEntryResource"
            },
            "type": "integer"
          },
          {
            "description": "The object type of the file sync object",
            "in": "query",
            "name": "contentResource[fileSyncObjectType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "integer"
          },
          {
            "description": "The object sub-type of the file sync object",
            "in": "query",
            "name": "contentResource[objectSubType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "integer"
          },
          {
            "description": "The object id of the file sync object",
            "in": "query",
            "name": "contentResource[objectId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "string"
          },
          {
            "description": "The version of the file sync object",
            "in": "query",
            "name": "contentResource[version]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "contentResource[resource]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaOperationResource"
            }
          },
          {
            "in": "query",
            "name": "contentResource[operationAttributes]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaOperationResource"
            },
            "type": "array"
          },
          {
            "description": "ID of alternative asset params to be used instead of the system default flavor params",
            "in": "query",
            "name": "contentResource[assetParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaOperationResource"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "contentResource[resources]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaRemoteStorageResources"
            },
            "type": "array"
          },
          {
            "description": "Textual content",
            "in": "query",
            "name": "contentResource[content]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaStringResource"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCaptionAsset"
            }
          }
        },
        "tags": [
          "captionAsset"
        ]
      }
    },
    "/service/caption_captionasset/action/update": {
      "get": {
        "description": "Update caption asset\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "The Caption Params used to create this Caption Asset",
            "in": "query",
            "name": "captionAsset[captionParamsId]",
            "type": "integer"
          },
          {
            "description": "The language of the caption asset content",
            "enum": [
              "Abkhazian",
              "Afar",
              "Afrikaans",
              "Albanian",
              "Amharic",
              "Arabic",
              "Armenian",
              "Assamese",
              "Aymara",
              "Azerbaijani",
              "Bashkir",
              "Basque",
              "Bengali (Bangla)",
              "Bhutani",
              "Bihari",
              "Bislama",
              "Breton",
              "Bulgarian",
              "Burmese",
              "Byelorussian (Belarusian)",
              "Cambodian",
              "Catalan",
              "Chinese",
              "Corsican",
              "Croatian",
              "Czech",
              "Danish",
              "Dutch",
              "English",
              "Esperanto",
              "Estonian",
              "Faeroese",
              "Farsi",
              "Fiji",
              "Finnish",
              "French",
              "Frisian",
              "Gaelic (Manx)",
              "Gaelic (Scottish)",
              "Galician",
              "Georgian",
              "German",
              "Greek",
              "Greenlandic",
              "Guarani",
              "Gujarati",
              "Hausa",
              "Hebrew",
              "Hebrew",
              "Hindi",
              "Hungarian",
              "Icelandic",
              "Indonesian",
              "Indonesian",
              "Interlingua",
              "Interlingue",
              "Inuktitut",
              "Inupiak",
              "Irish",
              "Italian",
              "Japanese",
              "Javanese",
              "Kannada",
              "Kashmiri",
              "Kazakh",
              "Kinyarwanda (Ruanda)",
              "Kirghiz",
              "Kirundi (Rundi)",
              "Korean",
              "Kurdish",
              "Laothian",
              "Latin",
              "Latvian (Lettish)",
              "Limburgish ( Limburger)",
              "Lingala",
              "Lithuanian",
              "Macedonian",
              "Malagasy",
              "Malay",
              "Malayalam",
              "Maltese",
              "Maori",
              "Marathi",
              "Moldavian",
              "Mongolian",
              "Multilingual",
              "Nauru",
              "Nepali",
              "Norwegian",
              "Occitan",
              "Oriya",
              "Oromo (Afan, Galla)",
              "Pashto (Pushto)",
              "Polish",
              "Portuguese",
              "Punjabi",
              "Quechua",
              "Rhaeto-Romance",
              "Romanian",
              "Russian",
              "Samoan",
              "Sangro",
              "Sanskrit",
              "Serbian",
              "Serbo-Croatian",
              "Sesotho",
              "Setswana",
              "Shona",
              "Sindhi",
              "Sinhalese",
              "Siswati",
              "Slovak",
              "Slovenian",
              "Somali",
              "Spanish",
              "Sundanese",
              "Swahili (Kiswahili)",
              "Swedish",
              "Tagalog",
              "Tajik",
              "Tamil",
              "Tatar",
              "Telugu",
              "Thai",
              "Tibetan",
              "Tigrinya",
              "Tonga",
              "Tsonga",
              "Turkish",
              "Turkmen",
              "Twi",
              "Uighur",
              "Ukrainian",
              "Urdu",
              "Uzbek",
              "Vietnamese",
              "Volapuk",
              "Welsh",
              "Wolof",
              "Xhosa",
              "Yiddish",
              "Yiddish",
              "Yoruba",
              "Zulu"
            ],
            "enumLabels": [
              "AB",
              "AA",
              "AF",
              "SQ",
              "AM",
              "AR",
              "HY",
              "AS_",
              "AY",
              "AZ",
              "BA",
              "EU",
              "BN",
              "DZ",
              "BH",
              "BI",
              "BR",
              "BG",
              "MY",
              "BE",
              "KM",
              "CA",
              "ZH",
              "CO",
              "HR",
              "CS",
              "DA",
              "NL",
              "EN",
              "EO",
              "ET",
              "FO",
              "FA",
              "FJ",
              "FI",
              "FR",
              "FY",
              "GV",
              "GD",
              "GL",
              "KA",
              "DE",
              "EL",
              "KL",
              "GN",
              "GU",
              "HA",
              "IW",
              "HE",
              "HI",
              "HU",
              "IS",
              "IN",
              "ID",
              "IA",
              "IE",
              "IU",
              "IK",
              "GA",
              "IT",
              "JA",
              "JV",
              "KN",
              "KS",
              "KK",
              "RW",
              "KY",
              "RN",
              "KO",
              "KU",
              "LO",
              "LA",
              "LV",
              "LI",
              "LN",
              "LT",
              "MK",
              "MG",
              "MS",
              "ML",
              "MT",
              "MI",
              "MR",
              "MO",
              "MN",
              "MU",
              "NA",
              "NE",
              "NO",
              "OC",
              "OR_",
              "OM",
              "PS",
              "PL",
              "PT",
              "PA",
              "QU",
              "RM",
              "RO",
              "RU",
              "SM",
              "SG",
              "SA",
              "SR",
              "SH",
              "ST",
              "TN",
              "SN",
              "SD",
              "SI",
              "SS",
              "SK",
              "SL",
              "SO",
              "ES",
              "SU",
              "SW",
              "SV",
              "TL",
              "TG",
              "TA",
              "TT",
              "TE",
              "TH",
              "BO",
              "TI",
              "TO",
              "TS",
              "TR",
              "TK",
              "TW",
              "UG",
              "UK",
              "UR",
              "UZ",
              "VI",
              "VO",
              "CY",
              "WO",
              "XH",
              "JI",
              "YI",
              "YO",
              "ZU"
            ],
            "in": "query",
            "name": "captionAsset[language]",
            "type": "string"
          },
          {
            "description": "Is default caption asset of the entry",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "captionAsset[isDefault]",
            "type": "integer"
          },
          {
            "description": "Friendly label",
            "in": "query",
            "name": "captionAsset[label]",
            "type": "string"
          },
          {
            "description": "The caption format",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "SRT",
              "DFXP",
              "WEBVTT"
            ],
            "in": "query",
            "name": "captionAsset[format]",
            "type": "string"
          },
          {
            "description": "The parent id of the asset",
            "in": "query",
            "name": "captionAsset[parentId]",
            "type": "string"
          },
          {
            "description": "Tags used to identify the Flavor Asset in various scenarios",
            "in": "query",
            "name": "captionAsset[tags]",
            "type": "string"
          },
          {
            "description": "The file extension",
            "in": "query",
            "name": "captionAsset[fileExt]",
            "type": "string"
          },
          {
            "description": "Partner private data",
            "in": "query",
            "name": "captionAsset[partnerData]",
            "type": "string"
          },
          {
            "description": "Partner friendly description",
            "in": "query",
            "name": "captionAsset[partnerDescription]",
            "type": "string"
          },
          {
            "description": "Comma separated list of source flavor params ids",
            "in": "query",
            "name": "captionAsset[actualSourceAssetParamsIds]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCaptionAsset"
            }
          }
        },
        "tags": [
          "captionAsset"
        ]
      }
    },
    "/service/caption_captionparams/action/add": {
      "get": {
        "description": "Add new Caption Params\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The language of the caption content",
            "enum": [
              "Abkhazian",
              "Afar",
              "Afrikaans",
              "Albanian",
              "Amharic",
              "Arabic",
              "Armenian",
              "Assamese",
              "Aymara",
              "Azerbaijani",
              "Bashkir",
              "Basque",
              "Bengali (Bangla)",
              "Bhutani",
              "Bihari",
              "Bislama",
              "Breton",
              "Bulgarian",
              "Burmese",
              "Byelorussian (Belarusian)",
              "Cambodian",
              "Catalan",
              "Chinese",
              "Corsican",
              "Croatian",
              "Czech",
              "Danish",
              "Dutch",
              "English",
              "Esperanto",
              "Estonian",
              "Faeroese",
              "Farsi",
              "Fiji",
              "Finnish",
              "French",
              "Frisian",
              "Gaelic (Manx)",
              "Gaelic (Scottish)",
              "Galician",
              "Georgian",
              "German",
              "Greek",
              "Greenlandic",
              "Guarani",
              "Gujarati",
              "Hausa",
              "Hebrew",
              "Hebrew",
              "Hindi",
              "Hungarian",
              "Icelandic",
              "Indonesian",
              "Indonesian",
              "Interlingua",
              "Interlingue",
              "Inuktitut",
              "Inupiak",
              "Irish",
              "Italian",
              "Japanese",
              "Javanese",
              "Kannada",
              "Kashmiri",
              "Kazakh",
              "Kinyarwanda (Ruanda)",
              "Kirghiz",
              "Kirundi (Rundi)",
              "Korean",
              "Kurdish",
              "Laothian",
              "Latin",
              "Latvian (Lettish)",
              "Limburgish ( Limburger)",
              "Lingala",
              "Lithuanian",
              "Macedonian",
              "Malagasy",
              "Malay",
              "Malayalam",
              "Maltese",
              "Maori",
              "Marathi",
              "Moldavian",
              "Mongolian",
              "Multilingual",
              "Nauru",
              "Nepali",
              "Norwegian",
              "Occitan",
              "Oriya",
              "Oromo (Afan, Galla)",
              "Pashto (Pushto)",
              "Polish",
              "Portuguese",
              "Punjabi",
              "Quechua",
              "Rhaeto-Romance",
              "Romanian",
              "Russian",
              "Samoan",
              "Sangro",
              "Sanskrit",
              "Serbian",
              "Serbo-Croatian",
              "Sesotho",
              "Setswana",
              "Shona",
              "Sindhi",
              "Sinhalese",
              "Siswati",
              "Slovak",
              "Slovenian",
              "Somali",
              "Spanish",
              "Sundanese",
              "Swahili (Kiswahili)",
              "Swedish",
              "Tagalog",
              "Tajik",
              "Tamil",
              "Tatar",
              "Telugu",
              "Thai",
              "Tibetan",
              "Tigrinya",
              "Tonga",
              "Tsonga",
              "Turkish",
              "Turkmen",
              "Twi",
              "Uighur",
              "Ukrainian",
              "Urdu",
              "Uzbek",
              "Vietnamese",
              "Volapuk",
              "Welsh",
              "Wolof",
              "Xhosa",
              "Yiddish",
              "Yiddish",
              "Yoruba",
              "Zulu"
            ],
            "enumLabels": [
              "AB",
              "AA",
              "AF",
              "SQ",
              "AM",
              "AR",
              "HY",
              "AS_",
              "AY",
              "AZ",
              "BA",
              "EU",
              "BN",
              "DZ",
              "BH",
              "BI",
              "BR",
              "BG",
              "MY",
              "BE",
              "KM",
              "CA",
              "ZH",
              "CO",
              "HR",
              "CS",
              "DA",
              "NL",
              "EN",
              "EO",
              "ET",
              "FO",
              "FA",
              "FJ",
              "FI",
              "FR",
              "FY",
              "GV",
              "GD",
              "GL",
              "KA",
              "DE",
              "EL",
              "KL",
              "GN",
              "GU",
              "HA",
              "IW",
              "HE",
              "HI",
              "HU",
              "IS",
              "IN",
              "ID",
              "IA",
              "IE",
              "IU",
              "IK",
              "GA",
              "IT",
              "JA",
              "JV",
              "KN",
              "KS",
              "KK",
              "RW",
              "KY",
              "RN",
              "KO",
              "KU",
              "LO",
              "LA",
              "LV",
              "LI",
              "LN",
              "LT",
              "MK",
              "MG",
              "MS",
              "ML",
              "MT",
              "MI",
              "MR",
              "MO",
              "MN",
              "MU",
              "NA",
              "NE",
              "NO",
              "OC",
              "OR_",
              "OM",
              "PS",
              "PL",
              "PT",
              "PA",
              "QU",
              "RM",
              "RO",
              "RU",
              "SM",
              "SG",
              "SA",
              "SR",
              "SH",
              "ST",
              "TN",
              "SN",
              "SD",
              "SI",
              "SS",
              "SK",
              "SL",
              "SO",
              "ES",
              "SU",
              "SW",
              "SV",
              "TL",
              "TG",
              "TA",
              "TT",
              "TE",
              "TH",
              "BO",
              "TI",
              "TO",
              "TS",
              "TR",
              "TK",
              "TW",
              "UG",
              "UK",
              "UR",
              "UZ",
              "VI",
              "VO",
              "CY",
              "WO",
              "XH",
              "JI",
              "YI",
              "YO",
              "ZU"
            ],
            "in": "query",
            "name": "captionParams[language]",
            "type": "string"
          },
          {
            "description": "Is default caption asset of the entry",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "captionParams[isDefault]",
            "type": "integer"
          },
          {
            "description": "Friendly label",
            "in": "query",
            "name": "captionParams[label]",
            "type": "string"
          },
          {
            "description": "The caption format",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "SRT",
              "DFXP",
              "WEBVTT"
            ],
            "in": "query",
            "name": "captionParams[format]",
            "type": "string"
          },
          {
            "description": "Id of the caption params or the flavor params to be used as source for the caption creation",
            "in": "query",
            "name": "captionParams[sourceParamsId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "captionParams[partnerId]",
            "type": "integer"
          },
          {
            "description": "The name of the Flavor Params",
            "in": "query",
            "name": "captionParams[name]",
            "type": "string"
          },
          {
            "description": "System name of the Flavor Params",
            "in": "query",
            "name": "captionParams[systemName]",
            "type": "string"
          },
          {
            "description": "The description of the Flavor Params",
            "in": "query",
            "name": "captionParams[description]",
            "type": "string"
          },
          {
            "description": "The Flavor Params tags are used to identify the flavor for different usage (e.g. web, hd, mobile)",
            "in": "query",
            "name": "captionParams[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionParams[requiredPermissions]",
            "type": "array"
          },
          {
            "description": "Id of remote storage profile that used to get the source, zero indicates Kaltura data center",
            "in": "query",
            "name": "captionParams[sourceRemoteStorageProfileId]",
            "type": "integer"
          },
          {
            "description": "Comma seperated ids of remote storage profiles that the flavor distributed to, the distribution done by the conversion engine",
            "in": "query",
            "name": "captionParams[remoteStorageProfileIds]",
            "type": "integer"
          },
          {
            "description": "Media parser type to be used for post-conversion validation",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "MEDIAINFO",
              "FFMPEG"
            ],
            "in": "query",
            "name": "captionParams[mediaParserType]",
            "type": "string"
          },
          {
            "description": "Comma seperated ids of source flavor params this flavor is created from",
            "in": "query",
            "name": "captionParams[sourceAssetParamsIds]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCaptionParams"
            }
          }
        },
        "tags": [
          "captionParams"
        ]
      }
    },
    "/service/caption_captionparams/action/delete": {
      "get": {
        "description": "Delete Caption Params by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "captionParams"
        ]
      }
    },
    "/service/caption_captionparams/action/get": {
      "get": {
        "description": "Get Caption Params by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCaptionParams"
            }
          }
        },
        "tags": [
          "captionParams"
        ]
      }
    },
    "/service/caption_captionparams/action/list": {
      "get": {
        "description": "List Caption Params by filter with paging support (By default - all system default params will be listed too)\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "SRT",
              "DFXP",
              "WEBVTT"
            ],
            "in": "query",
            "name": "filter[formatEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[formatIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCaptionParamsListResponse"
            }
          }
        },
        "tags": [
          "captionParams"
        ]
      }
    },
    "/service/caption_captionparams/action/update": {
      "get": {
        "description": "Update Caption Params by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The language of the caption content",
            "enum": [
              "Abkhazian",
              "Afar",
              "Afrikaans",
              "Albanian",
              "Amharic",
              "Arabic",
              "Armenian",
              "Assamese",
              "Aymara",
              "Azerbaijani",
              "Bashkir",
              "Basque",
              "Bengali (Bangla)",
              "Bhutani",
              "Bihari",
              "Bislama",
              "Breton",
              "Bulgarian",
              "Burmese",
              "Byelorussian (Belarusian)",
              "Cambodian",
              "Catalan",
              "Chinese",
              "Corsican",
              "Croatian",
              "Czech",
              "Danish",
              "Dutch",
              "English",
              "Esperanto",
              "Estonian",
              "Faeroese",
              "Farsi",
              "Fiji",
              "Finnish",
              "French",
              "Frisian",
              "Gaelic (Manx)",
              "Gaelic (Scottish)",
              "Galician",
              "Georgian",
              "German",
              "Greek",
              "Greenlandic",
              "Guarani",
              "Gujarati",
              "Hausa",
              "Hebrew",
              "Hebrew",
              "Hindi",
              "Hungarian",
              "Icelandic",
              "Indonesian",
              "Indonesian",
              "Interlingua",
              "Interlingue",
              "Inuktitut",
              "Inupiak",
              "Irish",
              "Italian",
              "Japanese",
              "Javanese",
              "Kannada",
              "Kashmiri",
              "Kazakh",
              "Kinyarwanda (Ruanda)",
              "Kirghiz",
              "Kirundi (Rundi)",
              "Korean",
              "Kurdish",
              "Laothian",
              "Latin",
              "Latvian (Lettish)",
              "Limburgish ( Limburger)",
              "Lingala",
              "Lithuanian",
              "Macedonian",
              "Malagasy",
              "Malay",
              "Malayalam",
              "Maltese",
              "Maori",
              "Marathi",
              "Moldavian",
              "Mongolian",
              "Multilingual",
              "Nauru",
              "Nepali",
              "Norwegian",
              "Occitan",
              "Oriya",
              "Oromo (Afan, Galla)",
              "Pashto (Pushto)",
              "Polish",
              "Portuguese",
              "Punjabi",
              "Quechua",
              "Rhaeto-Romance",
              "Romanian",
              "Russian",
              "Samoan",
              "Sangro",
              "Sanskrit",
              "Serbian",
              "Serbo-Croatian",
              "Sesotho",
              "Setswana",
              "Shona",
              "Sindhi",
              "Sinhalese",
              "Siswati",
              "Slovak",
              "Slovenian",
              "Somali",
              "Spanish",
              "Sundanese",
              "Swahili (Kiswahili)",
              "Swedish",
              "Tagalog",
              "Tajik",
              "Tamil",
              "Tatar",
              "Telugu",
              "Thai",
              "Tibetan",
              "Tigrinya",
              "Tonga",
              "Tsonga",
              "Turkish",
              "Turkmen",
              "Twi",
              "Uighur",
              "Ukrainian",
              "Urdu",
              "Uzbek",
              "Vietnamese",
              "Volapuk",
              "Welsh",
              "Wolof",
              "Xhosa",
              "Yiddish",
              "Yiddish",
              "Yoruba",
              "Zulu"
            ],
            "enumLabels": [
              "AB",
              "AA",
              "AF",
              "SQ",
              "AM",
              "AR",
              "HY",
              "AS_",
              "AY",
              "AZ",
              "BA",
              "EU",
              "BN",
              "DZ",
              "BH",
              "BI",
              "BR",
              "BG",
              "MY",
              "BE",
              "KM",
              "CA",
              "ZH",
              "CO",
              "HR",
              "CS",
              "DA",
              "NL",
              "EN",
              "EO",
              "ET",
              "FO",
              "FA",
              "FJ",
              "FI",
              "FR",
              "FY",
              "GV",
              "GD",
              "GL",
              "KA",
              "DE",
              "EL",
              "KL",
              "GN",
              "GU",
              "HA",
              "IW",
              "HE",
              "HI",
              "HU",
              "IS",
              "IN",
              "ID",
              "IA",
              "IE",
              "IU",
              "IK",
              "GA",
              "IT",
              "JA",
              "JV",
              "KN",
              "KS",
              "KK",
              "RW",
              "KY",
              "RN",
              "KO",
              "KU",
              "LO",
              "LA",
              "LV",
              "LI",
              "LN",
              "LT",
              "MK",
              "MG",
              "MS",
              "ML",
              "MT",
              "MI",
              "MR",
              "MO",
              "MN",
              "MU",
              "NA",
              "NE",
              "NO",
              "OC",
              "OR_",
              "OM",
              "PS",
              "PL",
              "PT",
              "PA",
              "QU",
              "RM",
              "RO",
              "RU",
              "SM",
              "SG",
              "SA",
              "SR",
              "SH",
              "ST",
              "TN",
              "SN",
              "SD",
              "SI",
              "SS",
              "SK",
              "SL",
              "SO",
              "ES",
              "SU",
              "SW",
              "SV",
              "TL",
              "TG",
              "TA",
              "TT",
              "TE",
              "TH",
              "BO",
              "TI",
              "TO",
              "TS",
              "TR",
              "TK",
              "TW",
              "UG",
              "UK",
              "UR",
              "UZ",
              "VI",
              "VO",
              "CY",
              "WO",
              "XH",
              "JI",
              "YI",
              "YO",
              "ZU"
            ],
            "in": "query",
            "name": "captionParams[language]",
            "type": "string"
          },
          {
            "description": "Is default caption asset of the entry",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "captionParams[isDefault]",
            "type": "integer"
          },
          {
            "description": "Friendly label",
            "in": "query",
            "name": "captionParams[label]",
            "type": "string"
          },
          {
            "description": "The caption format",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "SRT",
              "DFXP",
              "WEBVTT"
            ],
            "in": "query",
            "name": "captionParams[format]",
            "type": "string"
          },
          {
            "description": "Id of the caption params or the flavor params to be used as source for the caption creation",
            "in": "query",
            "name": "captionParams[sourceParamsId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "captionParams[partnerId]",
            "type": "integer"
          },
          {
            "description": "The name of the Flavor Params",
            "in": "query",
            "name": "captionParams[name]",
            "type": "string"
          },
          {
            "description": "System name of the Flavor Params",
            "in": "query",
            "name": "captionParams[systemName]",
            "type": "string"
          },
          {
            "description": "The description of the Flavor Params",
            "in": "query",
            "name": "captionParams[description]",
            "type": "string"
          },
          {
            "description": "The Flavor Params tags are used to identify the flavor for different usage (e.g. web, hd, mobile)",
            "in": "query",
            "name": "captionParams[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionParams[requiredPermissions]",
            "type": "array"
          },
          {
            "description": "Id of remote storage profile that used to get the source, zero indicates Kaltura data center",
            "in": "query",
            "name": "captionParams[sourceRemoteStorageProfileId]",
            "type": "integer"
          },
          {
            "description": "Comma seperated ids of remote storage profiles that the flavor distributed to, the distribution done by the conversion engine",
            "in": "query",
            "name": "captionParams[remoteStorageProfileIds]",
            "type": "integer"
          },
          {
            "description": "Media parser type to be used for post-conversion validation",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "MEDIAINFO",
              "FFMPEG"
            ],
            "in": "query",
            "name": "captionParams[mediaParserType]",
            "type": "string"
          },
          {
            "description": "Comma seperated ids of source flavor params this flavor is created from",
            "in": "query",
            "name": "captionParams[sourceAssetParamsIds]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCaptionParams"
            }
          }
        },
        "tags": [
          "captionParams"
        ]
      }
    },
    "/service/captionsearch_captionassetitem/action/search": {
      "get": {
        "description": "Search caption asset items by filter, pager and free text\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaPlayableEntryBaseFilter",
              "KalturaDataEntryBaseFilter",
              "KalturaDocumentEntryBaseFilter",
              "KalturaPlaylistBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "entryFilter[freeText]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "entryFilter[isRoot]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[categoriesFullNameIn]",
            "type": "string"
          },
          {
            "description": "All entries within this categoy or in child categories",
            "in": "query",
            "name": "entryFilter[categoryAncestorIdIn]",
            "type": "string"
          },
          {
            "description": "The id of the original entry",
            "in": "query",
            "name": "entryFilter[redirectFromEntryId]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only a specific entry (identified by its entryId).",
            "in": "query",
            "name": "entryFilter[idEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving few specific entries (string should include comma separated list of entryId strings).",
            "in": "query",
            "name": "entryFilter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[idNotIn]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It should include only one string to search for in entry names (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[nameLike]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry names, while applying an OR logic to retrieve entries that contain at least one input string (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[nameMultiLikeOr]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry names, while applying an AND logic to retrieve entries that contain all input strings (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[nameMultiLikeAnd]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving entries with a specific name.",
            "in": "query",
            "name": "entryFilter[nameEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries which were uploaded by/assigned to users of a specific Kaltura Partner (identified by Partner ID).",
            "in": "query",
            "name": "entryFilter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "description": "This filter should be in use for retrieving only entries within Kaltura network which were uploaded by/assigned to users of few Kaltura Partners  (string should include comma separated list of PartnerIDs)",
            "in": "query",
            "name": "entryFilter[partnerIdIn]",
            "type": "string"
          },
          {
            "description": "This filter parameter should be in use for retrieving only entries, uploaded by/assigned to a specific user (identified by user Id).",
            "in": "query",
            "name": "entryFilter[userIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[userIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[creatorIdEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It should include only one string to search for in entry tags (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[tagsLike]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, while applying an OR logic to retrieve entries that contain at least one input string (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, while applying an AND logic to retrieve entries that contain all input strings (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It should include only one string to search for in entry tags set by an ADMIN user (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[adminTagsLike]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, set by an ADMIN user, while applying an OR logic to retrieve entries that contain at least one input string (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[adminTagsMultiLikeOr]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, set by an ADMIN user, while applying an AND logic to retrieve entries that contain all input strings (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[adminTagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[categoriesMatchAnd]",
            "type": "string"
          },
          {
            "description": "All entries within these categories or their child categories.",
            "in": "query",
            "name": "entryFilter[categoriesMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[categoriesNotContains]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[categoriesIdsMatchAnd]",
            "type": "string"
          },
          {
            "description": "All entries of the categories, excluding their child categories.\n\t To include entries of the child categories, use categoryAncestorIdIn, or categoriesMatchOr.",
            "in": "query",
            "name": "entryFilter[categoriesIdsMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[categoriesIdsNotContains]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "entryFilter[categoriesIdsEmpty]",
            "type": "integer"
          },
          {
            "description": "This filter should be in use for retrieving only entries, at a specific {",
            "enum": [
              "-2",
              "-1",
              "virusScan.ScanFailure",
              "0",
              "virusScan.Infected",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ],
            "enumLabels": [
              "ERROR_IMPORTING",
              "ERROR_CONVERTING",
              "SCAN_FAILURE",
              "IMPORT",
              "INFECTED",
              "PRECONVERT",
              "READY",
              "DELETED",
              "PENDING",
              "MODERATE",
              "BLOCKED",
              "NO_CONTENT"
            ],
            "in": "query",
            "name": "entryFilter[statusEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries, not at a specific {",
            "enum": [
              "-2",
              "-1",
              "virusScan.ScanFailure",
              "0",
              "virusScan.Infected",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ],
            "enumLabels": [
              "ERROR_IMPORTING",
              "ERROR_CONVERTING",
              "SCAN_FAILURE",
              "IMPORT",
              "INFECTED",
              "PRECONVERT",
              "READY",
              "DELETED",
              "PENDING",
              "MODERATE",
              "BLOCKED",
              "NO_CONTENT"
            ],
            "in": "query",
            "name": "entryFilter[statusNotEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries, at few specific {",
            "in": "query",
            "name": "entryFilter[statusIn]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries, not at few specific {",
            "in": "query",
            "name": "entryFilter[statusNotIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              5,
              6
            ],
            "enumLabels": [
              "PENDING_MODERATION",
              "APPROVED",
              "REJECTED",
              "FLAGGED_FOR_REVIEW",
              "AUTO_APPROVED"
            ],
            "in": "query",
            "name": "entryFilter[moderationStatusEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              5,
              6
            ],
            "enumLabels": [
              "PENDING_MODERATION",
              "APPROVED",
              "REJECTED",
              "FLAGGED_FOR_REVIEW",
              "AUTO_APPROVED"
            ],
            "in": "query",
            "name": "entryFilter[moderationStatusNotEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[moderationStatusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[moderationStatusNotIn]",
            "type": "string"
          },
          {
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "entryFilter[typeEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving entries of few {",
            "in": "query",
            "name": "entryFilter[typeIn]",
            "type": "string"
          },
          {
            "description": "This filter parameter should be in use for retrieving only entries which were created at Kaltura system after a specific time/date (standard timestamp format).",
            "in": "query",
            "name": "entryFilter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "This filter parameter should be in use for retrieving only entries which were created at Kaltura system before a specific time/date (standard timestamp format).",
            "in": "query",
            "name": "entryFilter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[totalRankLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[totalRankGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[groupIdEqual]",
            "type": "integer"
          },
          {
            "description": "This filter should be in use for retrieving specific entries while search match the input string within all of the following metadata attributes: name, description, tags, adminTags.",
            "in": "query",
            "name": "entryFilter[searchTextMatchAnd]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries while search match the input string within at least one of the following metadata attributes: name, description, tags, adminTags.",
            "in": "query",
            "name": "entryFilter[searchTextMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[accessControlIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[accessControlIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[startDateGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[startDateLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[startDateGreaterThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[startDateLessThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[endDateGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[endDateLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[endDateGreaterThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[endDateLessThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[referenceIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[referenceIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[replacingEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[replacingEntryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[replacedEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[replacedEntryIdIn]",
            "type": "string"
          },
          {
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "enumLabels": [
              "NONE",
              "APPROVED_BUT_NOT_READY",
              "READY_BUT_NOT_APPROVED",
              "NOT_READY_AND_NOT_APPROVED",
              "FAILED"
            ],
            "in": "query",
            "name": "entryFilter[replacementStatusEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[replacementStatusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[partnerSortValueGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[partnerSortValueLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[rootEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[rootEntryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[parentEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[entitledUsersEditMatchAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[entitledUsersPublishMatchAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[tagsNameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[tagsAdminTagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[tagsAdminTagsNameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[tagsNameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[tagsAdminTagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[tagsAdminTagsNameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[lastPlayedAtGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[lastPlayedAtLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[durationLessThan]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[durationGreaterThan]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[durationTypeMatchOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "entryFilter[documentTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[documentTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[assetParamsIdsMatchOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[assetParamsIdsMatchAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[contentLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[contentMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[contentMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[partnerDescriptionLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[partnerDescriptionMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[partnerDescriptionMultiLikeAnd]",
            "type": "string"
          },
          {
            "enum": [
              "Abkhazian",
              "Afar",
              "Afrikaans",
              "Albanian",
              "Amharic",
              "Arabic",
              "Armenian",
              "Assamese",
              "Aymara",
              "Azerbaijani",
              "Bashkir",
              "Basque",
              "Bengali (Bangla)",
              "Bhutani",
              "Bihari",
              "Bislama",
              "Breton",
              "Bulgarian",
              "Burmese",
              "Byelorussian (Belarusian)",
              "Cambodian",
              "Catalan",
              "Chinese",
              "Corsican",
              "Croatian",
              "Czech",
              "Danish",
              "Dutch",
              "English",
              "Esperanto",
              "Estonian",
              "Faeroese",
              "Farsi",
              "Fiji",
              "Finnish",
              "French",
              "Frisian",
              "Gaelic (Manx)",
              "Gaelic (Scottish)",
              "Galician",
              "Georgian",
              "German",
              "Greek",
              "Greenlandic",
              "Guarani",
              "Gujarati",
              "Hausa",
              "Hebrew",
              "Hebrew",
              "Hindi",
              "Hungarian",
              "Icelandic",
              "Indonesian",
              "Indonesian",
              "Interlingua",
              "Interlingue",
              "Inuktitut",
              "Inupiak",
              "Irish",
              "Italian",
              "Japanese",
              "Javanese",
              "Kannada",
              "Kashmiri",
              "Kazakh",
              "Kinyarwanda (Ruanda)",
              "Kirghiz",
              "Kirundi (Rundi)",
              "Korean",
              "Kurdish",
              "Laothian",
              "Latin",
              "Latvian (Lettish)",
              "Limburgish ( Limburger)",
              "Lingala",
              "Lithuanian",
              "Macedonian",
              "Malagasy",
              "Malay",
              "Malayalam",
              "Maltese",
              "Maori",
              "Marathi",
              "Moldavian",
              "Mongolian",
              "Multilingual",
              "Nauru",
              "Nepali",
              "Norwegian",
              "Occitan",
              "Oriya",
              "Oromo (Afan, Galla)",
              "Pashto (Pushto)",
              "Polish",
              "Portuguese",
              "Punjabi",
              "Quechua",
              "Rhaeto-Romance",
              "Romanian",
              "Russian",
              "Samoan",
              "Sangro",
              "Sanskrit",
              "Serbian",
              "Serbo-Croatian",
              "Sesotho",
              "Setswana",
              "Shona",
              "Sindhi",
              "Sinhalese",
              "Siswati",
              "Slovak",
              "Slovenian",
              "Somali",
              "Spanish",
              "Sundanese",
              "Swahili (Kiswahili)",
              "Swedish",
              "Tagalog",
              "Tajik",
              "Tamil",
              "Tatar",
              "Telugu",
              "Thai",
              "Tibetan",
              "Tigrinya",
              "Tonga",
              "Tsonga",
              "Turkish",
              "Turkmen",
              "Twi",
              "Uighur",
              "Ukrainian",
              "Urdu",
              "Uzbek",
              "Vietnamese",
              "Volapuk",
              "Welsh",
              "Wolof",
              "Xhosa",
              "Yiddish",
              "Yiddish",
              "Yoruba",
              "Zulu"
            ],
            "enumLabels": [
              "AB",
              "AA",
              "AF",
              "SQ",
              "AM",
              "AR",
              "HY",
              "AS_",
              "AY",
              "AZ",
              "BA",
              "EU",
              "BN",
              "DZ",
              "BH",
              "BI",
              "BR",
              "BG",
              "MY",
              "BE",
              "KM",
              "CA",
              "ZH",
              "CO",
              "HR",
              "CS",
              "DA",
              "NL",
              "EN",
              "EO",
              "ET",
              "FO",
              "FA",
              "FJ",
              "FI",
              "FR",
              "FY",
              "GV",
              "GD",
              "GL",
              "KA",
              "DE",
              "EL",
              "KL",
              "GN",
              "GU",
              "HA",
              "IW",
              "HE",
              "HI",
              "HU",
              "IS",
              "IN",
              "ID",
              "IA",
              "IE",
              "IU",
              "IK",
              "GA",
              "IT",
              "JA",
              "JV",
              "KN",
              "KS",
              "KK",
              "RW",
              "KY",
              "RN",
              "KO",
              "KU",
              "LO",
              "LA",
              "LV",
              "LI",
              "LN",
              "LT",
              "MK",
              "MG",
              "MS",
              "ML",
              "MT",
              "MI",
              "MR",
              "MO",
              "MN",
              "MU",
              "NA",
              "NE",
              "NO",
              "OC",
              "OR_",
              "OM",
              "PS",
              "PL",
              "PT",
              "PA",
              "QU",
              "RM",
              "RO",
              "RU",
              "SM",
              "SG",
              "SA",
              "SR",
              "SH",
              "ST",
              "TN",
              "SN",
              "SD",
              "SI",
              "SS",
              "SK",
              "SL",
              "SO",
              "ES",
              "SU",
              "SW",
              "SV",
              "TL",
              "TG",
              "TA",
              "TT",
              "TE",
              "TH",
              "BO",
              "TI",
              "TO",
              "TS",
              "TR",
              "TK",
              "TW",
              "UG",
              "UK",
              "UR",
              "UZ",
              "VI",
              "VO",
              "CY",
              "WO",
              "XH",
              "JI",
              "YI",
              "YO",
              "ZU"
            ],
            "in": "query",
            "name": "captionAssetItemFilter[languageEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[languageIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[labelEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[labelIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[startTimeGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[startTimeLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[endTimeGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[endTimeLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "captionAssetItemPager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "captionAssetItemPager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCaptionAssetItemListResponse"
            }
          }
        },
        "tags": [
          "captionAssetItem"
        ]
      }
    },
    "/service/captionsearch_captionassetitem/action/searchEntries": {
      "get": {
        "description": "Search caption asset items by filter, pager and free text\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaPlayableEntryBaseFilter",
              "KalturaDataEntryBaseFilter",
              "KalturaDocumentEntryBaseFilter",
              "KalturaPlaylistBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "entryFilter[freeText]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "entryFilter[isRoot]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[categoriesFullNameIn]",
            "type": "string"
          },
          {
            "description": "All entries within this categoy or in child categories",
            "in": "query",
            "name": "entryFilter[categoryAncestorIdIn]",
            "type": "string"
          },
          {
            "description": "The id of the original entry",
            "in": "query",
            "name": "entryFilter[redirectFromEntryId]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only a specific entry (identified by its entryId).",
            "in": "query",
            "name": "entryFilter[idEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving few specific entries (string should include comma separated list of entryId strings).",
            "in": "query",
            "name": "entryFilter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[idNotIn]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It should include only one string to search for in entry names (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[nameLike]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry names, while applying an OR logic to retrieve entries that contain at least one input string (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[nameMultiLikeOr]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry names, while applying an AND logic to retrieve entries that contain all input strings (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[nameMultiLikeAnd]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving entries with a specific name.",
            "in": "query",
            "name": "entryFilter[nameEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries which were uploaded by/assigned to users of a specific Kaltura Partner (identified by Partner ID).",
            "in": "query",
            "name": "entryFilter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "description": "This filter should be in use for retrieving only entries within Kaltura network which were uploaded by/assigned to users of few Kaltura Partners  (string should include comma separated list of PartnerIDs)",
            "in": "query",
            "name": "entryFilter[partnerIdIn]",
            "type": "string"
          },
          {
            "description": "This filter parameter should be in use for retrieving only entries, uploaded by/assigned to a specific user (identified by user Id).",
            "in": "query",
            "name": "entryFilter[userIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[userIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[creatorIdEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It should include only one string to search for in entry tags (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[tagsLike]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, while applying an OR logic to retrieve entries that contain at least one input string (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, while applying an AND logic to retrieve entries that contain all input strings (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It should include only one string to search for in entry tags set by an ADMIN user (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[adminTagsLike]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, set by an ADMIN user, while applying an OR logic to retrieve entries that contain at least one input string (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[adminTagsMultiLikeOr]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries. It could include few (comma separated) strings for searching in entry tags, set by an ADMIN user, while applying an AND logic to retrieve entries that contain all input strings (no wildcards, spaces are treated as part of the string).",
            "in": "query",
            "name": "entryFilter[adminTagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[categoriesMatchAnd]",
            "type": "string"
          },
          {
            "description": "All entries within these categories or their child categories.",
            "in": "query",
            "name": "entryFilter[categoriesMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[categoriesNotContains]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[categoriesIdsMatchAnd]",
            "type": "string"
          },
          {
            "description": "All entries of the categories, excluding their child categories.\n\t To include entries of the child categories, use categoryAncestorIdIn, or categoriesMatchOr.",
            "in": "query",
            "name": "entryFilter[categoriesIdsMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[categoriesIdsNotContains]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "entryFilter[categoriesIdsEmpty]",
            "type": "integer"
          },
          {
            "description": "This filter should be in use for retrieving only entries, at a specific {",
            "enum": [
              "-2",
              "-1",
              "virusScan.ScanFailure",
              "0",
              "virusScan.Infected",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ],
            "enumLabels": [
              "ERROR_IMPORTING",
              "ERROR_CONVERTING",
              "SCAN_FAILURE",
              "IMPORT",
              "INFECTED",
              "PRECONVERT",
              "READY",
              "DELETED",
              "PENDING",
              "MODERATE",
              "BLOCKED",
              "NO_CONTENT"
            ],
            "in": "query",
            "name": "entryFilter[statusEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries, not at a specific {",
            "enum": [
              "-2",
              "-1",
              "virusScan.ScanFailure",
              "0",
              "virusScan.Infected",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ],
            "enumLabels": [
              "ERROR_IMPORTING",
              "ERROR_CONVERTING",
              "SCAN_FAILURE",
              "IMPORT",
              "INFECTED",
              "PRECONVERT",
              "READY",
              "DELETED",
              "PENDING",
              "MODERATE",
              "BLOCKED",
              "NO_CONTENT"
            ],
            "in": "query",
            "name": "entryFilter[statusNotEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries, at few specific {",
            "in": "query",
            "name": "entryFilter[statusIn]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving only entries, not at few specific {",
            "in": "query",
            "name": "entryFilter[statusNotIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              5,
              6
            ],
            "enumLabels": [
              "PENDING_MODERATION",
              "APPROVED",
              "REJECTED",
              "FLAGGED_FOR_REVIEW",
              "AUTO_APPROVED"
            ],
            "in": "query",
            "name": "entryFilter[moderationStatusEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              5,
              6
            ],
            "enumLabels": [
              "PENDING_MODERATION",
              "APPROVED",
              "REJECTED",
              "FLAGGED_FOR_REVIEW",
              "AUTO_APPROVED"
            ],
            "in": "query",
            "name": "entryFilter[moderationStatusNotEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[moderationStatusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[moderationStatusNotIn]",
            "type": "string"
          },
          {
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "entryFilter[typeEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving entries of few {",
            "in": "query",
            "name": "entryFilter[typeIn]",
            "type": "string"
          },
          {
            "description": "This filter parameter should be in use for retrieving only entries which were created at Kaltura system after a specific time/date (standard timestamp format).",
            "in": "query",
            "name": "entryFilter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "This filter parameter should be in use for retrieving only entries which were created at Kaltura system before a specific time/date (standard timestamp format).",
            "in": "query",
            "name": "entryFilter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[totalRankLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[totalRankGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[groupIdEqual]",
            "type": "integer"
          },
          {
            "description": "This filter should be in use for retrieving specific entries while search match the input string within all of the following metadata attributes: name, description, tags, adminTags.",
            "in": "query",
            "name": "entryFilter[searchTextMatchAnd]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving specific entries while search match the input string within at least one of the following metadata attributes: name, description, tags, adminTags.",
            "in": "query",
            "name": "entryFilter[searchTextMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[accessControlIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[accessControlIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[startDateGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[startDateLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[startDateGreaterThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[startDateLessThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[endDateGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[endDateLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[endDateGreaterThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[endDateLessThanOrEqualOrNull]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[referenceIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[referenceIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[replacingEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[replacingEntryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[replacedEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[replacedEntryIdIn]",
            "type": "string"
          },
          {
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "enumLabels": [
              "NONE",
              "APPROVED_BUT_NOT_READY",
              "READY_BUT_NOT_APPROVED",
              "NOT_READY_AND_NOT_APPROVED",
              "FAILED"
            ],
            "in": "query",
            "name": "entryFilter[replacementStatusEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[replacementStatusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[partnerSortValueGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[partnerSortValueLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[rootEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[rootEntryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[parentEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[entitledUsersEditMatchAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[entitledUsersPublishMatchAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[tagsNameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[tagsAdminTagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[tagsAdminTagsNameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[tagsNameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[tagsAdminTagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[tagsAdminTagsNameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[lastPlayedAtGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[lastPlayedAtLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[durationLessThan]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[durationGreaterThan]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[durationTypeMatchOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPlayableEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "entryFilter[documentTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryFilter[documentTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[assetParamsIdsMatchOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryFilter[assetParamsIdsMatchAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDocumentEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[contentLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[contentMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[contentMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[partnerDescriptionLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[partnerDescriptionMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[partnerDescriptionMultiLikeAnd]",
            "type": "string"
          },
          {
            "enum": [
              "Abkhazian",
              "Afar",
              "Afrikaans",
              "Albanian",
              "Amharic",
              "Arabic",
              "Armenian",
              "Assamese",
              "Aymara",
              "Azerbaijani",
              "Bashkir",
              "Basque",
              "Bengali (Bangla)",
              "Bhutani",
              "Bihari",
              "Bislama",
              "Breton",
              "Bulgarian",
              "Burmese",
              "Byelorussian (Belarusian)",
              "Cambodian",
              "Catalan",
              "Chinese",
              "Corsican",
              "Croatian",
              "Czech",
              "Danish",
              "Dutch",
              "English",
              "Esperanto",
              "Estonian",
              "Faeroese",
              "Farsi",
              "Fiji",
              "Finnish",
              "French",
              "Frisian",
              "Gaelic (Manx)",
              "Gaelic (Scottish)",
              "Galician",
              "Georgian",
              "German",
              "Greek",
              "Greenlandic",
              "Guarani",
              "Gujarati",
              "Hausa",
              "Hebrew",
              "Hebrew",
              "Hindi",
              "Hungarian",
              "Icelandic",
              "Indonesian",
              "Indonesian",
              "Interlingua",
              "Interlingue",
              "Inuktitut",
              "Inupiak",
              "Irish",
              "Italian",
              "Japanese",
              "Javanese",
              "Kannada",
              "Kashmiri",
              "Kazakh",
              "Kinyarwanda (Ruanda)",
              "Kirghiz",
              "Kirundi (Rundi)",
              "Korean",
              "Kurdish",
              "Laothian",
              "Latin",
              "Latvian (Lettish)",
              "Limburgish ( Limburger)",
              "Lingala",
              "Lithuanian",
              "Macedonian",
              "Malagasy",
              "Malay",
              "Malayalam",
              "Maltese",
              "Maori",
              "Marathi",
              "Moldavian",
              "Mongolian",
              "Multilingual",
              "Nauru",
              "Nepali",
              "Norwegian",
              "Occitan",
              "Oriya",
              "Oromo (Afan, Galla)",
              "Pashto (Pushto)",
              "Polish",
              "Portuguese",
              "Punjabi",
              "Quechua",
              "Rhaeto-Romance",
              "Romanian",
              "Russian",
              "Samoan",
              "Sangro",
              "Sanskrit",
              "Serbian",
              "Serbo-Croatian",
              "Sesotho",
              "Setswana",
              "Shona",
              "Sindhi",
              "Sinhalese",
              "Siswati",
              "Slovak",
              "Slovenian",
              "Somali",
              "Spanish",
              "Sundanese",
              "Swahili (Kiswahili)",
              "Swedish",
              "Tagalog",
              "Tajik",
              "Tamil",
              "Tatar",
              "Telugu",
              "Thai",
              "Tibetan",
              "Tigrinya",
              "Tonga",
              "Tsonga",
              "Turkish",
              "Turkmen",
              "Twi",
              "Uighur",
              "Ukrainian",
              "Urdu",
              "Uzbek",
              "Vietnamese",
              "Volapuk",
              "Welsh",
              "Wolof",
              "Xhosa",
              "Yiddish",
              "Yiddish",
              "Yoruba",
              "Zulu"
            ],
            "enumLabels": [
              "AB",
              "AA",
              "AF",
              "SQ",
              "AM",
              "AR",
              "HY",
              "AS_",
              "AY",
              "AZ",
              "BA",
              "EU",
              "BN",
              "DZ",
              "BH",
              "BI",
              "BR",
              "BG",
              "MY",
              "BE",
              "KM",
              "CA",
              "ZH",
              "CO",
              "HR",
              "CS",
              "DA",
              "NL",
              "EN",
              "EO",
              "ET",
              "FO",
              "FA",
              "FJ",
              "FI",
              "FR",
              "FY",
              "GV",
              "GD",
              "GL",
              "KA",
              "DE",
              "EL",
              "KL",
              "GN",
              "GU",
              "HA",
              "IW",
              "HE",
              "HI",
              "HU",
              "IS",
              "IN",
              "ID",
              "IA",
              "IE",
              "IU",
              "IK",
              "GA",
              "IT",
              "JA",
              "JV",
              "KN",
              "KS",
              "KK",
              "RW",
              "KY",
              "RN",
              "KO",
              "KU",
              "LO",
              "LA",
              "LV",
              "LI",
              "LN",
              "LT",
              "MK",
              "MG",
              "MS",
              "ML",
              "MT",
              "MI",
              "MR",
              "MO",
              "MN",
              "MU",
              "NA",
              "NE",
              "NO",
              "OC",
              "OR_",
              "OM",
              "PS",
              "PL",
              "PT",
              "PA",
              "QU",
              "RM",
              "RO",
              "RU",
              "SM",
              "SG",
              "SA",
              "SR",
              "SH",
              "ST",
              "TN",
              "SN",
              "SD",
              "SI",
              "SS",
              "SK",
              "SL",
              "SO",
              "ES",
              "SU",
              "SW",
              "SV",
              "TL",
              "TG",
              "TA",
              "TT",
              "TE",
              "TH",
              "BO",
              "TI",
              "TO",
              "TS",
              "TR",
              "TK",
              "TW",
              "UG",
              "UK",
              "UR",
              "UZ",
              "VI",
              "VO",
              "CY",
              "WO",
              "XH",
              "JI",
              "YI",
              "YO",
              "ZU"
            ],
            "in": "query",
            "name": "captionAssetItemFilter[languageEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[languageIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[labelEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[labelIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[startTimeGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[startTimeLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[endTimeGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "captionAssetItemFilter[endTimeLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "captionAssetItemPager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "captionAssetItemPager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntryListResponse"
            }
          }
        },
        "tags": [
          "captionAssetItem"
        ]
      }
    },
    "/service/category/action/add": {
      "get": {
        "description": "Add new Category\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "category[parentId]",
            "type": "integer"
          },
          {
            "description": "The name of the Category. \n\t The following characters are not allowed: '<', '>', ','",
            "in": "query",
            "name": "category[name]",
            "type": "string"
          },
          {
            "description": "Category description",
            "in": "query",
            "name": "category[description]",
            "type": "string"
          },
          {
            "description": "Category tags",
            "in": "query",
            "name": "category[tags]",
            "type": "string"
          },
          {
            "description": "If category will be returned for list action.",
            "enum": [
              1,
              3
            ],
            "enumLabels": [
              "PARTNER_ONLY",
              "CATEGORY_MEMBERS_ONLY"
            ],
            "in": "query",
            "name": "category[appearInList]",
            "type": "integer"
          },
          {
            "description": "defines the privacy of the entries that assigned to this category",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "ALL",
              "AUTHENTICATED_USERS",
              "MEMBERS_ONLY"
            ],
            "in": "query",
            "name": "category[privacy]",
            "type": "integer"
          },
          {
            "description": "If Category members are inherited from parent category or set manualy.",
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "INHERIT",
              "MANUAL"
            ],
            "in": "query",
            "name": "category[inheritanceType]",
            "type": "integer"
          },
          {
            "description": "Default permissionLevel for new users",
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "MANAGER",
              "MODERATOR",
              "CONTRIBUTOR",
              "MEMBER",
              "NONE"
            ],
            "in": "query",
            "name": "category[defaultPermissionLevel]",
            "type": "integer"
          },
          {
            "description": "Category Owner (User id)",
            "in": "query",
            "name": "category[owner]",
            "type": "string"
          },
          {
            "description": "Category external id, controlled and managed by the partner.",
            "in": "query",
            "name": "category[referenceId]",
            "type": "string"
          },
          {
            "description": "who can assign entries to this category",
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "ALL",
              "MEMBERS_WITH_CONTRIBUTION_PERMISSION"
            ],
            "in": "query",
            "name": "category[contributionPolicy]",
            "type": "integer"
          },
          {
            "description": "Set privacy context for search entries that assiged to private and public categories. the entries will be private if the search context is set with those categories.",
            "in": "query",
            "name": "category[privacyContext]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "category[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "category[partnerData]",
            "type": "string"
          },
          {
            "description": "Enable client side applications to define how to sort the category child categories",
            "enum": [
              "+createdAt",
              "+depth",
              "+directEntriesCount",
              "+directSubCategoriesCount",
              "+entriesCount",
              "+fullName",
              "+membersCount",
              "+name",
              "+partnerSortValue",
              "+updatedAt",
              "-createdAt",
              "-depth",
              "-directEntriesCount",
              "-directSubCategoriesCount",
              "-entriesCount",
              "-fullName",
              "-membersCount",
              "-name",
              "-partnerSortValue",
              "-updatedAt"
            ],
            "enumLabels": [
              "CREATED_AT_ASC",
              "DEPTH_ASC",
              "DIRECT_ENTRIES_COUNT_ASC",
              "DIRECT_SUB_CATEGORIES_COUNT_ASC",
              "ENTRIES_COUNT_ASC",
              "FULL_NAME_ASC",
              "MEMBERS_COUNT_ASC",
              "NAME_ASC",
              "PARTNER_SORT_VALUE_ASC",
              "UPDATED_AT_ASC",
              "CREATED_AT_DESC",
              "DEPTH_DESC",
              "DIRECT_ENTRIES_COUNT_DESC",
              "DIRECT_SUB_CATEGORIES_COUNT_DESC",
              "ENTRIES_COUNT_DESC",
              "FULL_NAME_DESC",
              "MEMBERS_COUNT_DESC",
              "NAME_DESC",
              "PARTNER_SORT_VALUE_DESC",
              "UPDATED_AT_DESC"
            ],
            "in": "query",
            "name": "category[defaultOrderBy]",
            "type": "string"
          },
          {
            "description": "Moderation to add entries to this category by users that are not of permission level Manager or Moderator.",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "category[moderation]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategory"
            }
          }
        },
        "tags": [
          "category"
        ]
      }
    },
    "/service/category/action/addFromBulkUpload": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaBulkUploadCsvJobData",
              "KalturaBulkUploadFilterJobData",
              "KalturaBulkUploadXmlJobData"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Friendly name of the file, used to be recognized later in the logs.",
            "in": "query",
            "name": "bulkUploadData[fileName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bulkUploadData[objectData]"
          },
          {
            "description": "Recipients of the email for bulk upload success/failure",
            "in": "query",
            "name": "bulkUploadData[emailRecipients]",
            "type": "string"
          },
          {
            "description": "Number of objects that finished on error status",
            "in": "query",
            "name": "bulkUploadData[numOfErrorObjects]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "bulkUploadData[columns]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaBulkUploadCsvJobData"
            },
            "type": "array"
          },
          {
            "in": "query",
            "name": "bulkUploadData[filter]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaBulkUploadFilterJobData"
            }
          },
          {
            "in": "query",
            "name": "bulkUploadData[templateObject]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaBulkUploadFilterJobData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUpload"
            }
          }
        },
        "tags": [
          "category"
        ]
      }
    },
    "/service/category/action/delete": {
      "get": {
        "description": "Delete a Category\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "-1",
              "0",
              "1"
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "moveEntriesToParentCategory",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "category"
        ]
      }
    },
    "/service/category/action/get": {
      "get": {
        "description": "Get Category by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategory"
            }
          }
        },
        "tags": [
          "category"
        ]
      }
    },
    "/service/category/action/index": {
      "get": {
        "description": "Index Category by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "shouldUpdate",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "category"
        ]
      }
    },
    "/service/category/action/list": {
      "get": {
        "description": "List all categories\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[freeText]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[membersIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameOrReferenceIdStartsWith]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[managerEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[memberEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fullNameStartsWithIn]",
            "type": "string"
          },
          {
            "description": "not includes the category itself (only sub categories)",
            "in": "query",
            "name": "filter[ancestorIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idOrInheritedParentIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parentIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[parentIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[depthEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[fullNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fullNameStartsWith]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fullNameIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fullIdsEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fullIdsStartsWith]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fullIdsMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[tagsLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "enum": [
              1,
              3
            ],
            "enumLabels": [
              "PARTNER_ONLY",
              "CATEGORY_MEMBERS_ONLY"
            ],
            "in": "query",
            "name": "filter[appearInListEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "ALL",
              "AUTHENTICATED_USERS",
              "MEMBERS_ONLY"
            ],
            "in": "query",
            "name": "filter[privacyEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[privacyIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "INHERIT",
              "MANUAL"
            ],
            "in": "query",
            "name": "filter[inheritanceTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[inheritanceTypeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[referenceIdEqual]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[referenceIdEmpty]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "ALL",
              "MEMBERS_WITH_CONTRIBUTION_PERMISSION"
            ],
            "in": "query",
            "name": "filter[contributionPolicyEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[membersCountGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[membersCountLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[pendingMembersCountGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[pendingMembersCountLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[privacyContextEqual]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "UPDATING",
              "ACTIVE",
              "DELETED",
              "PURGED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[inheritedParentIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[inheritedParentIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryListResponse"
            }
          }
        },
        "tags": [
          "category"
        ]
      }
    },
    "/service/category/action/move": {
      "get": {
        "description": "Move categories that belong to the same parent category to a target categroy - enabled only for ks with disable entitlement\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "categoryIds",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "targetCategoryParentId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryListResponse"
            }
          }
        },
        "tags": [
          "category"
        ]
      }
    },
    "/service/category/action/unlockCategories": {
      "get": {
        "description": "Unlock categories\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "category"
        ]
      }
    },
    "/service/category/action/update": {
      "get": {
        "description": "Update Category\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "category[parentId]",
            "type": "integer"
          },
          {
            "description": "The name of the Category. \n\t The following characters are not allowed: '<', '>', ','",
            "in": "query",
            "name": "category[name]",
            "type": "string"
          },
          {
            "description": "Category description",
            "in": "query",
            "name": "category[description]",
            "type": "string"
          },
          {
            "description": "Category tags",
            "in": "query",
            "name": "category[tags]",
            "type": "string"
          },
          {
            "description": "If category will be returned for list action.",
            "enum": [
              1,
              3
            ],
            "enumLabels": [
              "PARTNER_ONLY",
              "CATEGORY_MEMBERS_ONLY"
            ],
            "in": "query",
            "name": "category[appearInList]",
            "type": "integer"
          },
          {
            "description": "defines the privacy of the entries that assigned to this category",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "ALL",
              "AUTHENTICATED_USERS",
              "MEMBERS_ONLY"
            ],
            "in": "query",
            "name": "category[privacy]",
            "type": "integer"
          },
          {
            "description": "If Category members are inherited from parent category or set manualy.",
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "INHERIT",
              "MANUAL"
            ],
            "in": "query",
            "name": "category[inheritanceType]",
            "type": "integer"
          },
          {
            "description": "Default permissionLevel for new users",
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "MANAGER",
              "MODERATOR",
              "CONTRIBUTOR",
              "MEMBER",
              "NONE"
            ],
            "in": "query",
            "name": "category[defaultPermissionLevel]",
            "type": "integer"
          },
          {
            "description": "Category Owner (User id)",
            "in": "query",
            "name": "category[owner]",
            "type": "string"
          },
          {
            "description": "Category external id, controlled and managed by the partner.",
            "in": "query",
            "name": "category[referenceId]",
            "type": "string"
          },
          {
            "description": "who can assign entries to this category",
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "ALL",
              "MEMBERS_WITH_CONTRIBUTION_PERMISSION"
            ],
            "in": "query",
            "name": "category[contributionPolicy]",
            "type": "integer"
          },
          {
            "description": "Set privacy context for search entries that assiged to private and public categories. the entries will be private if the search context is set with those categories.",
            "in": "query",
            "name": "category[privacyContext]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "category[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "category[partnerData]",
            "type": "string"
          },
          {
            "description": "Enable client side applications to define how to sort the category child categories",
            "enum": [
              "+createdAt",
              "+depth",
              "+directEntriesCount",
              "+directSubCategoriesCount",
              "+entriesCount",
              "+fullName",
              "+membersCount",
              "+name",
              "+partnerSortValue",
              "+updatedAt",
              "-createdAt",
              "-depth",
              "-directEntriesCount",
              "-directSubCategoriesCount",
              "-entriesCount",
              "-fullName",
              "-membersCount",
              "-name",
              "-partnerSortValue",
              "-updatedAt"
            ],
            "enumLabels": [
              "CREATED_AT_ASC",
              "DEPTH_ASC",
              "DIRECT_ENTRIES_COUNT_ASC",
              "DIRECT_SUB_CATEGORIES_COUNT_ASC",
              "ENTRIES_COUNT_ASC",
              "FULL_NAME_ASC",
              "MEMBERS_COUNT_ASC",
              "NAME_ASC",
              "PARTNER_SORT_VALUE_ASC",
              "UPDATED_AT_ASC",
              "CREATED_AT_DESC",
              "DEPTH_DESC",
              "DIRECT_ENTRIES_COUNT_DESC",
              "DIRECT_SUB_CATEGORIES_COUNT_DESC",
              "ENTRIES_COUNT_DESC",
              "FULL_NAME_DESC",
              "MEMBERS_COUNT_DESC",
              "NAME_DESC",
              "PARTNER_SORT_VALUE_DESC",
              "UPDATED_AT_DESC"
            ],
            "in": "query",
            "name": "category[defaultOrderBy]",
            "type": "string"
          },
          {
            "description": "Moderation to add entries to this category by users that are not of permission level Manager or Moderator.",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "category[moderation]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategory"
            }
          }
        },
        "tags": [
          "category"
        ]
      }
    },
    "/service/categoryentry/action/activate": {
      "get": {
        "description": "activate CategoryEntry when it is pending moderation\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "categoryId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "categoryEntry"
        ]
      }
    },
    "/service/categoryentry/action/add": {
      "get": {
        "description": "Add new CategoryEntry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "categoryEntry[categoryId]",
            "type": "integer"
          },
          {
            "description": "entry id",
            "in": "query",
            "name": "categoryEntry[entryId]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryEntry"
            }
          }
        },
        "tags": [
          "categoryEntry"
        ]
      }
    },
    "/service/categoryentry/action/addFromBulkUpload": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaBulkServiceFilterData"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "bulkUploadData[filter]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaBulkServiceFilterData"
            }
          },
          {
            "in": "query",
            "name": "bulkUploadData[templateObject]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaBulkServiceFilterData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUpload"
            }
          }
        },
        "tags": [
          "categoryEntry"
        ]
      }
    },
    "/service/categoryentry/action/delete": {
      "get": {
        "description": "Delete CategoryEntry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "categoryId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "categoryEntry"
        ]
      }
    },
    "/service/categoryentry/action/index": {
      "get": {
        "description": "Index CategoryEntry by Id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "categoryId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "shouldUpdate",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "categoryEntry"
        ]
      }
    },
    "/service/categoryentry/action/list": {
      "get": {
        "description": "List all categoryEntry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[categoryIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[categoryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[categoryFullIdsStartsWith]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PENDING",
              "ACTIVE",
              "DELETED",
              "REJECTED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryEntryListResponse"
            }
          }
        },
        "tags": [
          "categoryEntry"
        ]
      }
    },
    "/service/categoryentry/action/reject": {
      "get": {
        "description": "activate CategoryEntry when it is pending moderation\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "categoryId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "categoryEntry"
        ]
      }
    },
    "/service/categoryentry/action/syncPrivacyContext": {
      "get": {
        "description": "update privacy context from the category\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "categoryId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "categoryEntry"
        ]
      }
    },
    "/service/categoryuser/action/activate": {
      "get": {
        "description": "activate CategoryUser\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "categoryId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryUser"
            }
          }
        },
        "tags": [
          "categoryUser"
        ]
      }
    },
    "/service/categoryuser/action/add": {
      "get": {
        "description": "Add new CategoryUser\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "categoryUser[categoryId]",
            "type": "integer"
          },
          {
            "description": "User id",
            "in": "query",
            "name": "categoryUser[userId]",
            "type": "string"
          },
          {
            "description": "Permission level",
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "MANAGER",
              "MODERATOR",
              "CONTRIBUTOR",
              "MEMBER",
              "NONE"
            ],
            "in": "query",
            "name": "categoryUser[permissionLevel]",
            "type": "integer"
          },
          {
            "description": "Update method can be either manual or automatic to distinguish between manual operations (for example in KMC) on automatic - using bulk upload",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "MANUAL",
              "AUTOMATIC"
            ],
            "in": "query",
            "name": "categoryUser[updateMethod]",
            "type": "integer"
          },
          {
            "description": "Set of category-related permissions for the current category user.",
            "in": "query",
            "name": "categoryUser[permissionNames]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryUser"
            }
          }
        },
        "tags": [
          "categoryUser"
        ]
      }
    },
    "/service/categoryuser/action/addFromBulkUpload": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaBulkUploadCsvJobData",
              "KalturaBulkUploadFilterJobData",
              "KalturaBulkUploadXmlJobData"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Friendly name of the file, used to be recognized later in the logs.",
            "in": "query",
            "name": "bulkUploadData[fileName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bulkUploadData[objectData]"
          },
          {
            "description": "Recipients of the email for bulk upload success/failure",
            "in": "query",
            "name": "bulkUploadData[emailRecipients]",
            "type": "string"
          },
          {
            "description": "Number of objects that finished on error status",
            "in": "query",
            "name": "bulkUploadData[numOfErrorObjects]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "bulkUploadData[columns]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaBulkUploadCsvJobData"
            },
            "type": "array"
          },
          {
            "in": "query",
            "name": "bulkUploadData[filter]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaBulkUploadFilterJobData"
            }
          },
          {
            "in": "query",
            "name": "bulkUploadData[templateObject]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaBulkUploadFilterJobData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUpload"
            }
          }
        },
        "tags": [
          "categoryUser"
        ]
      }
    },
    "/service/categoryuser/action/copyFromCategory": {
      "get": {
        "description": "Copy all memeber from parent category\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "categoryId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "categoryUser"
        ]
      }
    },
    "/service/categoryuser/action/deactivate": {
      "get": {
        "description": "reject CategoryUser\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "categoryId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryUser"
            }
          }
        },
        "tags": [
          "categoryUser"
        ]
      }
    },
    "/service/categoryuser/action/delete": {
      "get": {
        "description": "Delete a CategoryUser\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "categoryId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "categoryUser"
        ]
      }
    },
    "/service/categoryuser/action/get": {
      "get": {
        "description": "Get CategoryUser by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "categoryId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryUser"
            }
          }
        },
        "tags": [
          "categoryUser"
        ]
      }
    },
    "/service/categoryuser/action/index": {
      "get": {
        "description": "Index CategoryUser by userid and category id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "categoryId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "shouldUpdate",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "categoryUser"
        ]
      }
    },
    "/service/categoryuser/action/list": {
      "get": {
        "description": "List all categories\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Return the list of categoryUser that are not inherited from parent category - only the direct categoryUsers.",
            "in": "query",
            "name": "filter[categoryDirectMembers]",
            "type": "boolean"
          },
          {
            "description": "Free text search on user id or screen name",
            "in": "query",
            "name": "filter[freeText]",
            "type": "string"
          },
          {
            "description": "Return a list of categoryUser that related to the userId in this field by groups",
            "in": "query",
            "name": "filter[relatedGroupsByUserId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[categoryIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[categoryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdIn]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "MANAGER",
              "MODERATOR",
              "CONTRIBUTOR",
              "MEMBER",
              "NONE"
            ],
            "in": "query",
            "name": "filter[permissionLevelEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[permissionLevelIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "ACTIVE",
              "PENDING",
              "NOT_ACTIVE",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "MANUAL",
              "AUTOMATIC"
            ],
            "in": "query",
            "name": "filter[updateMethodEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updateMethodIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[categoryFullIdsStartsWith]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[categoryFullIdsEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[permissionNamesMatchAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[permissionNamesMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[permissionNamesNotContains]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryUserListResponse"
            }
          }
        },
        "tags": [
          "categoryUser"
        ]
      }
    },
    "/service/categoryuser/action/update": {
      "get": {
        "description": "Update CategoryUser by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "categoryId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "categoryUser[categoryId]",
            "type": "integer"
          },
          {
            "description": "User id",
            "in": "query",
            "name": "categoryUser[userId]",
            "type": "string"
          },
          {
            "description": "Permission level",
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "MANAGER",
              "MODERATOR",
              "CONTRIBUTOR",
              "MEMBER",
              "NONE"
            ],
            "in": "query",
            "name": "categoryUser[permissionLevel]",
            "type": "integer"
          },
          {
            "description": "Update method can be either manual or automatic to distinguish between manual operations (for example in KMC) on automatic - using bulk upload",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "MANUAL",
              "AUTOMATIC"
            ],
            "in": "query",
            "name": "categoryUser[updateMethod]",
            "type": "integer"
          },
          {
            "description": "Set of category-related permissions for the current category user.",
            "in": "query",
            "name": "categoryUser[permissionNames]",
            "type": "string"
          },
          {
            "description": "- to override manual changes",
            "in": "query",
            "name": "override",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryUser"
            }
          }
        },
        "tags": [
          "categoryUser"
        ]
      }
    },
    "/service/contentdistribution_distributionprofile/action/add": {
      "get": {
        "description": "Add new Distribution Profile\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaConfigurableDistributionProfile",
              "KalturaGenericDistributionProfile",
              "KalturaSyndicationDistributionProfile"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "enum": [
              "ideticDistribution.IDETIC",
              "youtubeApiDistribution.YOUTUBE_API",
              "1",
              "2"
            ],
            "enumLabels": [
              "IDETIC",
              "YOUTUBE_API",
              "GENERIC",
              "SYNDICATION"
            ],
            "in": "query",
            "name": "distributionProfile[providerType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "distributionProfile[name]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "distributionProfile[status]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "AUTOMATIC",
              "MANUAL"
            ],
            "in": "query",
            "name": "distributionProfile[submitEnabled]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "AUTOMATIC",
              "MANUAL"
            ],
            "in": "query",
            "name": "distributionProfile[updateEnabled]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "AUTOMATIC",
              "MANUAL"
            ],
            "in": "query",
            "name": "distributionProfile[deleteEnabled]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "AUTOMATIC",
              "MANUAL"
            ],
            "in": "query",
            "name": "distributionProfile[reportEnabled]",
            "type": "integer"
          },
          {
            "description": "Comma separated flavor params ids that should be auto converted",
            "in": "query",
            "name": "distributionProfile[autoCreateFlavors]",
            "type": "string"
          },
          {
            "description": "Comma separated thumbnail params ids that should be auto generated",
            "in": "query",
            "name": "distributionProfile[autoCreateThumb]",
            "type": "string"
          },
          {
            "description": "Comma separated flavor params ids that should be submitted if ready",
            "in": "query",
            "name": "distributionProfile[optionalFlavorParamsIds]",
            "type": "string"
          },
          {
            "description": "Comma separated flavor params ids that required to be ready before submission",
            "in": "query",
            "name": "distributionProfile[requiredFlavorParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "distributionProfile[optionalThumbDimensions]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "distributionProfile[requiredThumbDimensions]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "distributionProfile[optionalAssetDistributionRules]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "distributionProfile[requiredAssetDistributionRules]",
            "type": "array"
          },
          {
            "description": "If entry distribution sunrise not specified that will be the default since entry creation time, in seconds",
            "in": "query",
            "name": "distributionProfile[sunriseDefaultOffset]",
            "type": "integer"
          },
          {
            "description": "If entry distribution sunset not specified that will be the default since entry creation time, in seconds",
            "in": "query",
            "name": "distributionProfile[sunsetDefaultOffset]",
            "type": "integer"
          },
          {
            "description": "The best external storage to be used to download the asset files from",
            "in": "query",
            "name": "distributionProfile[recommendedStorageProfileForDownload]",
            "type": "integer"
          },
          {
            "description": "The best Kaltura data center to be used to download the asset files to",
            "in": "query",
            "name": "distributionProfile[recommendedDcForDownload]",
            "type": "integer"
          },
          {
            "description": "The best Kaltura data center to be used to execute the distribution job",
            "in": "query",
            "name": "distributionProfile[recommendedDcForExecute]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "distributionProfile[fieldConfigArray]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaConfigurableDistributionProfile"
            },
            "type": "array"
          },
          {
            "in": "query",
            "name": "distributionProfile[itemXpathsToExtend]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaConfigurableDistributionProfile"
            },
            "type": "array"
          },
          {
            "in": "query",
            "name": "distributionProfile[genericProviderId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProfile"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "distributionProfile[submitAction]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProfile"
            }
          },
          {
            "in": "query",
            "name": "distributionProfile[updateAction]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProfile"
            }
          },
          {
            "in": "query",
            "name": "distributionProfile[deleteAction]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProfile"
            }
          },
          {
            "in": "query",
            "name": "distributionProfile[fetchReportAction]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProfile"
            }
          },
          {
            "in": "query",
            "name": "distributionProfile[updateRequiredEntryFields]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProfile"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "distributionProfile[updateRequiredMetadataXPaths]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProfile"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "distributionProfile[xsl]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSyndicationDistributionProfile"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDistributionProfile"
            }
          }
        },
        "tags": [
          "distributionProfile"
        ]
      }
    },
    "/service/contentdistribution_distributionprofile/action/delete": {
      "get": {
        "description": "Delete Distribution Profile by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "distributionProfile"
        ]
      }
    },
    "/service/contentdistribution_distributionprofile/action/get": {
      "get": {
        "description": "Get Distribution Profile by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDistributionProfile"
            }
          }
        },
        "tags": [
          "distributionProfile"
        ]
      }
    },
    "/service/contentdistribution_distributionprofile/action/list": {
      "get": {
        "description": "List all distribution providers\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaConfigurableDistributionProfileBaseFilter",
              "KalturaGenericDistributionProfileBaseFilter",
              "KalturaSyndicationDistributionProfileBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDistributionProfileListResponse"
            }
          }
        },
        "tags": [
          "distributionProfile"
        ]
      }
    },
    "/service/contentdistribution_distributionprofile/action/listByPartner": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaSystemPartnerFilter",
              "KalturaVarConsolePartnerFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idNotIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameEqual]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "DELETED",
              "ACTIVE",
              "BLOCKED",
              "FULL_BLOCK"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerPackageEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerPackageGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerPackageLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "filter[partnerGroupTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerNameDescriptionWebsiteAdminNameAdminEmailLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerParentIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerParentIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Eq filter for the partner's group type",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "filter[groupTypeEq]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "integer"
          },
          {
            "description": "In filter for the partner's group type",
            "in": "query",
            "name": "filter[groupTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Filter for partner permissions- filter contains comma-separated string of permission names which the returned partners should have.",
            "in": "query",
            "name": "filter[partnerPermissionsExist]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDistributionProfileListResponse"
            }
          }
        },
        "tags": [
          "distributionProfile"
        ]
      }
    },
    "/service/contentdistribution_distributionprofile/action/update": {
      "get": {
        "description": "Update Distribution Profile by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "KalturaConfigurableDistributionProfile",
              "KalturaGenericDistributionProfile",
              "KalturaSyndicationDistributionProfile"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "enum": [
              "ideticDistribution.IDETIC",
              "youtubeApiDistribution.YOUTUBE_API",
              "1",
              "2"
            ],
            "enumLabels": [
              "IDETIC",
              "YOUTUBE_API",
              "GENERIC",
              "SYNDICATION"
            ],
            "in": "query",
            "name": "distributionProfile[providerType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "distributionProfile[name]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "distributionProfile[status]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "AUTOMATIC",
              "MANUAL"
            ],
            "in": "query",
            "name": "distributionProfile[submitEnabled]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "AUTOMATIC",
              "MANUAL"
            ],
            "in": "query",
            "name": "distributionProfile[updateEnabled]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "AUTOMATIC",
              "MANUAL"
            ],
            "in": "query",
            "name": "distributionProfile[deleteEnabled]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "AUTOMATIC",
              "MANUAL"
            ],
            "in": "query",
            "name": "distributionProfile[reportEnabled]",
            "type": "integer"
          },
          {
            "description": "Comma separated flavor params ids that should be auto converted",
            "in": "query",
            "name": "distributionProfile[autoCreateFlavors]",
            "type": "string"
          },
          {
            "description": "Comma separated thumbnail params ids that should be auto generated",
            "in": "query",
            "name": "distributionProfile[autoCreateThumb]",
            "type": "string"
          },
          {
            "description": "Comma separated flavor params ids that should be submitted if ready",
            "in": "query",
            "name": "distributionProfile[optionalFlavorParamsIds]",
            "type": "string"
          },
          {
            "description": "Comma separated flavor params ids that required to be ready before submission",
            "in": "query",
            "name": "distributionProfile[requiredFlavorParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "distributionProfile[optionalThumbDimensions]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "distributionProfile[requiredThumbDimensions]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "distributionProfile[optionalAssetDistributionRules]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "distributionProfile[requiredAssetDistributionRules]",
            "type": "array"
          },
          {
            "description": "If entry distribution sunrise not specified that will be the default since entry creation time, in seconds",
            "in": "query",
            "name": "distributionProfile[sunriseDefaultOffset]",
            "type": "integer"
          },
          {
            "description": "If entry distribution sunset not specified that will be the default since entry creation time, in seconds",
            "in": "query",
            "name": "distributionProfile[sunsetDefaultOffset]",
            "type": "integer"
          },
          {
            "description": "The best external storage to be used to download the asset files from",
            "in": "query",
            "name": "distributionProfile[recommendedStorageProfileForDownload]",
            "type": "integer"
          },
          {
            "description": "The best Kaltura data center to be used to download the asset files to",
            "in": "query",
            "name": "distributionProfile[recommendedDcForDownload]",
            "type": "integer"
          },
          {
            "description": "The best Kaltura data center to be used to execute the distribution job",
            "in": "query",
            "name": "distributionProfile[recommendedDcForExecute]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "distributionProfile[fieldConfigArray]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaConfigurableDistributionProfile"
            },
            "type": "array"
          },
          {
            "in": "query",
            "name": "distributionProfile[itemXpathsToExtend]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaConfigurableDistributionProfile"
            },
            "type": "array"
          },
          {
            "in": "query",
            "name": "distributionProfile[genericProviderId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProfile"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "distributionProfile[submitAction]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProfile"
            }
          },
          {
            "in": "query",
            "name": "distributionProfile[updateAction]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProfile"
            }
          },
          {
            "in": "query",
            "name": "distributionProfile[deleteAction]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProfile"
            }
          },
          {
            "in": "query",
            "name": "distributionProfile[fetchReportAction]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProfile"
            }
          },
          {
            "in": "query",
            "name": "distributionProfile[updateRequiredEntryFields]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProfile"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "distributionProfile[updateRequiredMetadataXPaths]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProfile"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "distributionProfile[xsl]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSyndicationDistributionProfile"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDistributionProfile"
            }
          }
        },
        "tags": [
          "distributionProfile"
        ]
      }
    },
    "/service/contentdistribution_distributionprofile/action/updateStatus": {
      "get": {
        "description": "Update Distribution Profile status by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDistributionProfile"
            }
          }
        },
        "tags": [
          "distributionProfile"
        ]
      }
    },
    "/service/contentdistribution_distributionprovider/action/list": {
      "get": {
        "description": "List all distribution providers\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaGenericDistributionProviderBaseFilter",
              "KalturaSyndicationDistributionProviderBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "enum": [
              "ideticDistribution.IDETIC",
              "youtubeApiDistribution.YOUTUBE_API",
              "1",
              "2"
            ],
            "enumLabels": [
              "IDETIC",
              "YOUTUBE_API",
              "GENERIC",
              "SYNDICATION"
            ],
            "in": "query",
            "name": "filter[typeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[typeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProviderBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProviderBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProviderBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProviderBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProviderBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProviderBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProviderBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProviderBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[isDefaultEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProviderBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[isDefaultIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProviderBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              2,
              3
            ],
            "enumLabels": [
              "ACTIVE",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProviderBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericDistributionProviderBaseFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDistributionProviderListResponse"
            }
          }
        },
        "tags": [
          "distributionProvider"
        ]
      }
    },
    "/service/contentdistribution_entrydistribution/action/add": {
      "get": {
        "description": "Add new Entry Distribution\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "entryDistribution[entryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryDistribution[distributionProfileId]",
            "type": "integer"
          },
          {
            "description": "Comma separated thumbnail asset ids",
            "in": "query",
            "name": "entryDistribution[thumbAssetIds]",
            "type": "string"
          },
          {
            "description": "Comma separated flavor asset ids",
            "in": "query",
            "name": "entryDistribution[flavorAssetIds]",
            "type": "string"
          },
          {
            "description": "Comma separated asset ids",
            "in": "query",
            "name": "entryDistribution[assetIds]",
            "type": "string"
          },
          {
            "description": "Entry distribution publish time as Unix timestamp (In seconds)",
            "in": "query",
            "name": "entryDistribution[sunrise]",
            "type": "integer"
          },
          {
            "description": "Entry distribution un-publish time as Unix timestamp (In seconds)",
            "in": "query",
            "name": "entryDistribution[sunset]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryDistribution[validationErrors]",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntryDistribution"
            }
          }
        },
        "tags": [
          "entryDistribution"
        ]
      }
    },
    "/service/contentdistribution_entrydistribution/action/delete": {
      "get": {
        "description": "Delete Entry Distribution by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "entryDistribution"
        ]
      }
    },
    "/service/contentdistribution_entrydistribution/action/get": {
      "get": {
        "description": "Get Entry Distribution by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntryDistribution"
            }
          }
        },
        "tags": [
          "entryDistribution"
        ]
      }
    },
    "/service/contentdistribution_entrydistribution/action/list": {
      "get": {
        "description": "List all distribution providers\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[submittedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[submittedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[distributionProfileIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[distributionProfileIdIn]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12
            ],
            "enumLabels": [
              "PENDING",
              "QUEUED",
              "READY",
              "DELETED",
              "SUBMITTING",
              "UPDATING",
              "DELETING",
              "ERROR_SUBMITTING",
              "ERROR_UPDATING",
              "ERROR_DELETING",
              "REMOVED",
              "IMPORT_SUBMITTING",
              "IMPORT_UPDATING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "enumLabels": [
              "NONE",
              "SUBMIT_REQUIRED",
              "DELETE_REQUIRED",
              "UPDATE_REQUIRED",
              "ENABLE_REQUIRED",
              "DISABLE_REQUIRED"
            ],
            "in": "query",
            "name": "filter[dirtyStatusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[dirtyStatusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[sunriseGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[sunriseLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[sunsetGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[sunsetLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntryDistributionListResponse"
            }
          }
        },
        "tags": [
          "entryDistribution"
        ]
      }
    },
    "/service/contentdistribution_entrydistribution/action/retrySubmit": {
      "get": {
        "description": "Retries last submit action\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntryDistribution"
            }
          }
        },
        "tags": [
          "entryDistribution"
        ]
      }
    },
    "/service/contentdistribution_entrydistribution/action/serveReturnedData": {
      "get": {
        "description": "Serves entry distribution returned data\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ],
            "enumLabels": [
              "SUBMIT",
              "UPDATE",
              "DELETE",
              "FETCH_REPORT"
            ],
            "in": "query",
            "name": "actionType",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "entryDistribution"
        ]
      }
    },
    "/service/contentdistribution_entrydistribution/action/serveSentData": {
      "get": {
        "description": "Serves entry distribution sent data\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ],
            "enumLabels": [
              "SUBMIT",
              "UPDATE",
              "DELETE",
              "FETCH_REPORT"
            ],
            "in": "query",
            "name": "actionType",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "entryDistribution"
        ]
      }
    },
    "/service/contentdistribution_entrydistribution/action/submitAdd": {
      "get": {
        "description": "Submits Entry Distribution to the remote destination\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "submitWhenReady",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntryDistribution"
            }
          }
        },
        "tags": [
          "entryDistribution"
        ]
      }
    },
    "/service/contentdistribution_entrydistribution/action/submitDelete": {
      "get": {
        "description": "Deletes Entry Distribution from the remote destination\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntryDistribution"
            }
          }
        },
        "tags": [
          "entryDistribution"
        ]
      }
    },
    "/service/contentdistribution_entrydistribution/action/submitFetchReport": {
      "get": {
        "description": "Submits Entry Distribution report request\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntryDistribution"
            }
          }
        },
        "tags": [
          "entryDistribution"
        ]
      }
    },
    "/service/contentdistribution_entrydistribution/action/submitUpdate": {
      "get": {
        "description": "Submits Entry Distribution changes to the remote destination\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntryDistribution"
            }
          }
        },
        "tags": [
          "entryDistribution"
        ]
      }
    },
    "/service/contentdistribution_entrydistribution/action/update": {
      "get": {
        "description": "Update Entry Distribution by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryDistribution[entryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "entryDistribution[distributionProfileId]",
            "type": "integer"
          },
          {
            "description": "Comma separated thumbnail asset ids",
            "in": "query",
            "name": "entryDistribution[thumbAssetIds]",
            "type": "string"
          },
          {
            "description": "Comma separated flavor asset ids",
            "in": "query",
            "name": "entryDistribution[flavorAssetIds]",
            "type": "string"
          },
          {
            "description": "Comma separated asset ids",
            "in": "query",
            "name": "entryDistribution[assetIds]",
            "type": "string"
          },
          {
            "description": "Entry distribution publish time as Unix timestamp (In seconds)",
            "in": "query",
            "name": "entryDistribution[sunrise]",
            "type": "integer"
          },
          {
            "description": "Entry distribution un-publish time as Unix timestamp (In seconds)",
            "in": "query",
            "name": "entryDistribution[sunset]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entryDistribution[validationErrors]",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntryDistribution"
            }
          }
        },
        "tags": [
          "entryDistribution"
        ]
      }
    },
    "/service/contentdistribution_entrydistribution/action/validate": {
      "get": {
        "description": "Validates Entry Distribution by id for submission\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntryDistribution"
            }
          }
        },
        "tags": [
          "entryDistribution"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovider/action/add": {
      "get": {
        "description": "Add new Generic Distribution Provider\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[isDefault]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[optionalFlavorParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[requiredFlavorParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[optionalThumbDimensions]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[requiredThumbDimensions]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[editableFields]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[mandatoryFields]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[scheduleUpdateEnabled]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[availabilityUpdateEnabled]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[deleteInsteadUpdate]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[intervalBeforeSunrise]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[intervalBeforeSunset]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[updateRequiredEntryFields]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[updateRequiredMetadataXPaths]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProvider"
            }
          }
        },
        "tags": [
          "genericDistributionProvider"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovider/action/delete": {
      "get": {
        "description": "Delete Generic Distribution Provider by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "genericDistributionProvider"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovider/action/get": {
      "get": {
        "description": "Get Generic Distribution Provider by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProvider"
            }
          }
        },
        "tags": [
          "genericDistributionProvider"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovider/action/list": {
      "get": {
        "description": "List all distribution providers\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[isDefaultEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[isDefaultIn]",
            "type": "string"
          },
          {
            "enum": [
              2,
              3
            ],
            "enumLabels": [
              "ACTIVE",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProviderListResponse"
            }
          }
        },
        "tags": [
          "genericDistributionProvider"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovider/action/update": {
      "get": {
        "description": "Update Generic Distribution Provider by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[isDefault]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[optionalFlavorParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[requiredFlavorParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[optionalThumbDimensions]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[requiredThumbDimensions]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[editableFields]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[mandatoryFields]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[scheduleUpdateEnabled]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[availabilityUpdateEnabled]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[deleteInsteadUpdate]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[intervalBeforeSunrise]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[intervalBeforeSunset]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[updateRequiredEntryFields]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProvider[updateRequiredMetadataXPaths]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProvider"
            }
          }
        },
        "tags": [
          "genericDistributionProvider"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovideraction/action/add": {
      "get": {
        "description": "Add new Generic Distribution Provider Action\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[genericDistributionProviderId]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "SUBMIT",
              "UPDATE",
              "DELETE",
              "FETCH_REPORT"
            ],
            "in": "query",
            "name": "genericDistributionProviderAction[action]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "XSL",
              "XPATH",
              "REGEX"
            ],
            "in": "query",
            "name": "genericDistributionProviderAction[resultsParser]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              10
            ],
            "enumLabels": [
              "FTP",
              "SCP",
              "SFTP",
              "HTTP",
              "HTTPS",
              "ASPERA"
            ],
            "in": "query",
            "name": "genericDistributionProviderAction[protocol]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[serverAddress]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[remotePath]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[remoteUsername]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[remotePassword]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[editableFields]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[mandatoryFields]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProviderAction"
            }
          }
        },
        "tags": [
          "genericDistributionProviderAction"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovideraction/action/addMrssTransform": {
      "get": {
        "description": "Add MRSS transform file to generic distribution provider action\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "the id of the generic distribution provider action",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "XSL MRSS transformation data",
            "in": "query",
            "name": "xslData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProviderAction"
            }
          }
        },
        "tags": [
          "genericDistributionProviderAction"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovideraction/action/addMrssTransformFromFile": {
      "get": {
        "description": "Add MRSS transform file to generic distribution provider action\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "the id of the generic distribution provider action",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProviderAction"
            }
          }
        },
        "tags": [
          "genericDistributionProviderAction"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovideraction/action/addMrssValidate": {
      "get": {
        "description": "Add MRSS validate file to generic distribution provider action\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "the id of the generic distribution provider action",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "XSD MRSS validatation data",
            "in": "query",
            "name": "xsdData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProviderAction"
            }
          }
        },
        "tags": [
          "genericDistributionProviderAction"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovideraction/action/addMrssValidateFromFile": {
      "get": {
        "description": "Add MRSS validate file to generic distribution provider action\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "the id of the generic distribution provider action",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProviderAction"
            }
          }
        },
        "tags": [
          "genericDistributionProviderAction"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovideraction/action/addResultsTransform": {
      "get": {
        "description": "Add results transform file to generic distribution provider action\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "the id of the generic distribution provider action",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "transformation data xsl, xPath or regex",
            "in": "query",
            "name": "transformData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProviderAction"
            }
          }
        },
        "tags": [
          "genericDistributionProviderAction"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovideraction/action/addResultsTransformFromFile": {
      "get": {
        "description": "Add MRSS transform file to generic distribution provider action\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "the id of the generic distribution provider action",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProviderAction"
            }
          }
        },
        "tags": [
          "genericDistributionProviderAction"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovideraction/action/delete": {
      "get": {
        "description": "Delete Generic Distribution Provider Action by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "genericDistributionProviderAction"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovideraction/action/deleteByProviderId": {
      "get": {
        "description": "Delete Generic Distribution Provider Action by provider id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "genericDistributionProviderId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ],
            "enumLabels": [
              "SUBMIT",
              "UPDATE",
              "DELETE",
              "FETCH_REPORT"
            ],
            "in": "query",
            "name": "actionType",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "genericDistributionProviderAction"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovideraction/action/get": {
      "get": {
        "description": "Get Generic Distribution Provider Action by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProviderAction"
            }
          }
        },
        "tags": [
          "genericDistributionProviderAction"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovideraction/action/getByProviderId": {
      "get": {
        "description": "Get Generic Distribution Provider Action by provider id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "genericDistributionProviderId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ],
            "enumLabels": [
              "SUBMIT",
              "UPDATE",
              "DELETE",
              "FETCH_REPORT"
            ],
            "in": "query",
            "name": "actionType",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProviderAction"
            }
          }
        },
        "tags": [
          "genericDistributionProviderAction"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovideraction/action/list": {
      "get": {
        "description": "List all distribution providers\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[genericDistributionProviderIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[genericDistributionProviderIdIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "SUBMIT",
              "UPDATE",
              "DELETE",
              "FETCH_REPORT"
            ],
            "in": "query",
            "name": "filter[actionEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[actionIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProviderActionListResponse"
            }
          }
        },
        "tags": [
          "genericDistributionProviderAction"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovideraction/action/update": {
      "get": {
        "description": "Update Generic Distribution Provider Action by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[genericDistributionProviderId]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "SUBMIT",
              "UPDATE",
              "DELETE",
              "FETCH_REPORT"
            ],
            "in": "query",
            "name": "genericDistributionProviderAction[action]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "XSL",
              "XPATH",
              "REGEX"
            ],
            "in": "query",
            "name": "genericDistributionProviderAction[resultsParser]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              10
            ],
            "enumLabels": [
              "FTP",
              "SCP",
              "SFTP",
              "HTTP",
              "HTTPS",
              "ASPERA"
            ],
            "in": "query",
            "name": "genericDistributionProviderAction[protocol]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[serverAddress]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[remotePath]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[remoteUsername]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[remotePassword]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[editableFields]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[mandatoryFields]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProviderAction"
            }
          }
        },
        "tags": [
          "genericDistributionProviderAction"
        ]
      }
    },
    "/service/contentdistribution_genericdistributionprovideraction/action/updateByProviderId": {
      "get": {
        "description": "Update Generic Distribution Provider Action by provider id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "genericDistributionProviderId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ],
            "enumLabels": [
              "SUBMIT",
              "UPDATE",
              "DELETE",
              "FETCH_REPORT"
            ],
            "in": "query",
            "name": "actionType",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[genericDistributionProviderId]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "SUBMIT",
              "UPDATE",
              "DELETE",
              "FETCH_REPORT"
            ],
            "in": "query",
            "name": "genericDistributionProviderAction[action]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "XSL",
              "XPATH",
              "REGEX"
            ],
            "in": "query",
            "name": "genericDistributionProviderAction[resultsParser]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              10
            ],
            "enumLabels": [
              "FTP",
              "SCP",
              "SFTP",
              "HTTP",
              "HTTPS",
              "ASPERA"
            ],
            "in": "query",
            "name": "genericDistributionProviderAction[protocol]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[serverAddress]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[remotePath]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[remoteUsername]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[remotePassword]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[editableFields]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "genericDistributionProviderAction[mandatoryFields]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGenericDistributionProviderAction"
            }
          }
        },
        "tags": [
          "genericDistributionProviderAction"
        ]
      }
    },
    "/service/conversionprofile/action/add": {
      "get": {
        "description": "Add new Conversion Profile\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "conversionProfile[status]",
            "type": "string"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "MEDIA",
              "LIVE_STREAM"
            ],
            "in": "query",
            "name": "conversionProfile[type]",
            "type": "string"
          },
          {
            "description": "The name of the Conversion Profile",
            "in": "query",
            "name": "conversionProfile[name]",
            "type": "string"
          },
          {
            "description": "System name of the Conversion Profile",
            "in": "query",
            "name": "conversionProfile[systemName]",
            "type": "string"
          },
          {
            "description": "Comma separated tags",
            "in": "query",
            "name": "conversionProfile[tags]",
            "type": "string"
          },
          {
            "description": "The description of the Conversion Profile",
            "in": "query",
            "name": "conversionProfile[description]",
            "type": "string"
          },
          {
            "description": "ID of the default entry to be used for template data",
            "in": "query",
            "name": "conversionProfile[defaultEntryId]",
            "type": "string"
          },
          {
            "description": "List of included flavor ids (comma separated)",
            "in": "query",
            "name": "conversionProfile[flavorParamsIds]",
            "type": "string"
          },
          {
            "description": "Indicates that this conversion profile is system default",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "conversionProfile[isDefault]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "conversionProfile[cropDimensions]"
          },
          {
            "description": "Clipping start position (in miliseconds)",
            "in": "query",
            "name": "conversionProfile[clipStart]",
            "type": "integer"
          },
          {
            "description": "Clipping duration (in miliseconds)",
            "in": "query",
            "name": "conversionProfile[clipDuration]",
            "type": "integer"
          },
          {
            "description": "XSL to transform ingestion MRSS XML",
            "in": "query",
            "name": "conversionProfile[xslTransformation]",
            "type": "string"
          },
          {
            "description": "ID of default storage profile to be used for linked net-storage file syncs",
            "in": "query",
            "name": "conversionProfile[storageProfileId]",
            "type": "integer"
          },
          {
            "description": "Media parser type to be used for extract media",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "MEDIAINFO",
              "FFMPEG"
            ],
            "in": "query",
            "name": "conversionProfile[mediaParserType]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConversionProfile"
            }
          }
        },
        "tags": [
          "conversionProfile"
        ]
      }
    },
    "/service/conversionprofile/action/delete": {
      "get": {
        "description": "Delete Conversion Profile by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "conversionProfile"
        ]
      }
    },
    "/service/conversionprofile/action/get": {
      "get": {
        "description": "Get Conversion Profile by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConversionProfile"
            }
          }
        },
        "tags": [
          "conversionProfile"
        ]
      }
    },
    "/service/conversionprofile/action/getDefault": {
      "get": {
        "description": "Get the partner's default conversion profile\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "MEDIA",
              "LIVE_STREAM"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConversionProfile"
            }
          }
        },
        "tags": [
          "conversionProfile"
        ]
      }
    },
    "/service/conversionprofile/action/list": {
      "get": {
        "description": "List Conversion Profiles by filter with paging support\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "MEDIA",
              "LIVE_STREAM"
            ],
            "in": "query",
            "name": "filter[typeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[typeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[defaultEntryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[defaultEntryIdIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConversionProfileListResponse"
            }
          }
        },
        "tags": [
          "conversionProfile"
        ]
      }
    },
    "/service/conversionprofile/action/setAsDefault": {
      "get": {
        "description": "Set Conversion Profile to be the partner default\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConversionProfile"
            }
          }
        },
        "tags": [
          "conversionProfile"
        ]
      }
    },
    "/service/conversionprofile/action/update": {
      "get": {
        "description": "Update Conversion Profile by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "conversionProfile[status]",
            "type": "string"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "MEDIA",
              "LIVE_STREAM"
            ],
            "in": "query",
            "name": "conversionProfile[type]",
            "type": "string"
          },
          {
            "description": "The name of the Conversion Profile",
            "in": "query",
            "name": "conversionProfile[name]",
            "type": "string"
          },
          {
            "description": "System name of the Conversion Profile",
            "in": "query",
            "name": "conversionProfile[systemName]",
            "type": "string"
          },
          {
            "description": "Comma separated tags",
            "in": "query",
            "name": "conversionProfile[tags]",
            "type": "string"
          },
          {
            "description": "The description of the Conversion Profile",
            "in": "query",
            "name": "conversionProfile[description]",
            "type": "string"
          },
          {
            "description": "ID of the default entry to be used for template data",
            "in": "query",
            "name": "conversionProfile[defaultEntryId]",
            "type": "string"
          },
          {
            "description": "List of included flavor ids (comma separated)",
            "in": "query",
            "name": "conversionProfile[flavorParamsIds]",
            "type": "string"
          },
          {
            "description": "Indicates that this conversion profile is system default",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "conversionProfile[isDefault]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "conversionProfile[cropDimensions]"
          },
          {
            "description": "Clipping start position (in miliseconds)",
            "in": "query",
            "name": "conversionProfile[clipStart]",
            "type": "integer"
          },
          {
            "description": "Clipping duration (in miliseconds)",
            "in": "query",
            "name": "conversionProfile[clipDuration]",
            "type": "integer"
          },
          {
            "description": "XSL to transform ingestion MRSS XML",
            "in": "query",
            "name": "conversionProfile[xslTransformation]",
            "type": "string"
          },
          {
            "description": "ID of default storage profile to be used for linked net-storage file syncs",
            "in": "query",
            "name": "conversionProfile[storageProfileId]",
            "type": "integer"
          },
          {
            "description": "Media parser type to be used for extract media",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "MEDIAINFO",
              "FFMPEG"
            ],
            "in": "query",
            "name": "conversionProfile[mediaParserType]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConversionProfile"
            }
          }
        },
        "tags": [
          "conversionProfile"
        ]
      }
    },
    "/service/conversionprofileassetparams/action/list": {
      "get": {
        "description": "Lists asset parmas of conversion profile by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[conversionProfileIdFilter]"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdFilter]"
          },
          {
            "in": "query",
            "name": "filter[conversionProfileIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[conversionProfileIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdIn]",
            "type": "string"
          },
          {
            "enum": [
              0,
              0,
              1,
              2
            ],
            "enumLabels": [
              "NO_IMPACT",
              "INHERIT_FLAVOR_PARAMS",
              "REQUIRED",
              "OPTIONAL"
            ],
            "in": "query",
            "name": "filter[readyBehaviorEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[readyBehaviorIn]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "CONVERT",
              "INGEST",
              "CONVERT_WHEN_MISSING"
            ],
            "in": "query",
            "name": "filter[originEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[originIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConversionProfileAssetParamsListResponse"
            }
          }
        },
        "tags": [
          "conversionProfileAssetParams"
        ]
      }
    },
    "/service/conversionprofileassetparams/action/update": {
      "get": {
        "description": "Update asset parmas of conversion profile by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "conversionProfileId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "assetParamsId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The ingestion origin of the asset params",
            "enum": [
              0,
              0,
              1,
              2
            ],
            "enumLabels": [
              "NO_IMPACT",
              "INHERIT_FLAVOR_PARAMS",
              "REQUIRED",
              "OPTIONAL"
            ],
            "in": "query",
            "name": "conversionProfileAssetParams[readyBehavior]",
            "type": "integer"
          },
          {
            "description": "The ingestion origin of the asset params",
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "CONVERT",
              "INGEST",
              "CONVERT_WHEN_MISSING"
            ],
            "in": "query",
            "name": "conversionProfileAssetParams[origin]",
            "type": "integer"
          },
          {
            "description": "Asset params system name",
            "in": "query",
            "name": "conversionProfileAssetParams[systemName]",
            "type": "string"
          },
          {
            "description": "Starts conversion even if the decision layer reduced the configuration to comply with the source",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "conversionProfileAssetParams[forceNoneComplied]",
            "type": "integer"
          },
          {
            "description": "Specifies how to treat the flavor after conversion is finished",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "KEEP",
              "DELETE"
            ],
            "in": "query",
            "name": "conversionProfileAssetParams[deletePolicy]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConversionProfileAssetParams"
            }
          }
        },
        "tags": [
          "conversionProfileAssetParams"
        ]
      }
    },
    "/service/cuepoint_cuepoint/action/add": {
      "get": {
        "description": "Allows you to add an cue point object associated with an entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAnnotation",
              "KalturaAdCuePoint",
              "KalturaAnswerCuePoint",
              "KalturaCodeCuePoint",
              "KalturaEventCuePoint",
              "KalturaQuestionCuePoint",
              "KalturaThumbCuePoint"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "cuePoint[entryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[triggeredAt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "cuePoint[tags]",
            "type": "string"
          },
          {
            "description": "Start time in milliseconds",
            "in": "query",
            "name": "cuePoint[startTime]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "cuePoint[partnerData]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[partnerSortValue]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "cuePoint[forceStop]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "cuePoint[thumbOffset]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "cuePoint[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[parentId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[text]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "string"
          },
          {
            "description": "End time in milliseconds",
            "in": "query",
            "name": "cuePoint[endTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "integer"
          },
          {
            "description": "Is the annotation public.",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "cuePoint[isPublic]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "integer"
          },
          {
            "description": "Should the cue point get indexed on the entry.",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "cuePoint[searchableOnEntry]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "integer"
          },
          {
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "CUSTOM",
              "VAST",
              "VAST_2_0",
              "VPAID"
            ],
            "in": "query",
            "name": "cuePoint[protocolType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[sourceUrl]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "VIDEO",
              "OVERLAY"
            ],
            "in": "query",
            "name": "cuePoint[adType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[title]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[endTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "integer"
          },
          {
            "description": "Duration in milliseconds",
            "in": "query",
            "name": "cuePoint[duration]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "cuePoint[parentId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[quizUserEntryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[answerKey]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[correctAnswerKeys]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            }
          },
          {
            "in": "query",
            "name": "cuePoint[code]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[description]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[endTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePoint"
            },
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "BROADCAST_START",
              "BROADCAST_END"
            ],
            "in": "query",
            "name": "cuePoint[eventType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[optionalAnswers]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "array"
          },
          {
            "in": "query",
            "name": "cuePoint[hint]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[question]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[explanation]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[assetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[description]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[title]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "string"
          },
          {
            "description": "The sub type of the ThumbCuePoint",
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "SLIDE",
              "CHAPTER"
            ],
            "in": "query",
            "name": "cuePoint[subType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCuePoint"
            }
          }
        },
        "tags": [
          "cuePoint"
        ]
      }
    },
    "/service/cuepoint_cuepoint/action/addFromBulk": {
      "get": {
        "description": "Allows you to add multiple cue points objects by uploading XML that contains multiple cue point definitions\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCuePointListResponse"
            }
          }
        },
        "tags": [
          "cuePoint"
        ]
      }
    },
    "/service/cuepoint_cuepoint/action/count": {
      "get": {
        "description": "count cue point objects by filter\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAdCuePointBaseFilter",
              "KalturaAnnotationBaseFilter",
              "KalturaAnswerCuePointBaseFilter",
              "KalturaCodeCuePointBaseFilter",
              "KalturaEventCuePointBaseFilter",
              "KalturaQuestionCuePointBaseFilter",
              "KalturaThumbCuePointBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[freeText]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[userIdEqualCurrent]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[userIdCurrent]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "enum": [
              "adCuePoint.Ad",
              "annotation.Annotation",
              "codeCuePoint.Code",
              "eventCuePoint.Event",
              "quiz.QUIZ_ANSWER",
              "quiz.QUIZ_QUESTION",
              "thumbCuePoint.Thumb"
            ],
            "enumLabels": [
              "AD",
              "ANNOTATION",
              "CODE",
              "EVENT",
              "QUIZ_ANSWER",
              "QUIZ_QUESTION",
              "THUMB"
            ],
            "in": "query",
            "name": "filter[cuePointTypeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[cuePointTypeIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "READY",
              "DELETED",
              "HANDLED",
              "PENDING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[triggeredAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[triggeredAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[tagsLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[startTimeGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[startTimeLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[userIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[forceStopEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "CUSTOM",
              "VAST",
              "VAST_2_0",
              "VPAID"
            ],
            "in": "query",
            "name": "filter[protocolTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[protocolTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[parentIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parentIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[isPublicEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[codeLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "BROADCAST_START",
              "BROADCAST_END"
            ],
            "in": "query",
            "name": "filter[eventTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[eventTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "SLIDE",
              "CHAPTER"
            ],
            "in": "query",
            "name": "filter[subTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[subTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "cuePoint"
        ]
      }
    },
    "/service/cuepoint_cuepoint/action/delete": {
      "get": {
        "description": "delete cue point by id, and delete all children cue points\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "cuePoint"
        ]
      }
    },
    "/service/cuepoint_cuepoint/action/get": {
      "get": {
        "description": "Retrieve an CuePoint object by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCuePoint"
            }
          }
        },
        "tags": [
          "cuePoint"
        ]
      }
    },
    "/service/cuepoint_cuepoint/action/list": {
      "get": {
        "description": "List cue point objects by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAdCuePointBaseFilter",
              "KalturaAnnotationBaseFilter",
              "KalturaAnswerCuePointBaseFilter",
              "KalturaCodeCuePointBaseFilter",
              "KalturaEventCuePointBaseFilter",
              "KalturaQuestionCuePointBaseFilter",
              "KalturaThumbCuePointBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[freeText]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[userIdEqualCurrent]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[userIdCurrent]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "enum": [
              "adCuePoint.Ad",
              "annotation.Annotation",
              "codeCuePoint.Code",
              "eventCuePoint.Event",
              "quiz.QUIZ_ANSWER",
              "quiz.QUIZ_QUESTION",
              "thumbCuePoint.Thumb"
            ],
            "enumLabels": [
              "AD",
              "ANNOTATION",
              "CODE",
              "EVENT",
              "QUIZ_ANSWER",
              "QUIZ_QUESTION",
              "THUMB"
            ],
            "in": "query",
            "name": "filter[cuePointTypeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[cuePointTypeIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "READY",
              "DELETED",
              "HANDLED",
              "PENDING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[triggeredAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[triggeredAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[tagsLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[startTimeGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[startTimeLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[userIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[forceStopEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "CUSTOM",
              "VAST",
              "VAST_2_0",
              "VPAID"
            ],
            "in": "query",
            "name": "filter[protocolTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[protocolTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[parentIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parentIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[isPublicEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[codeLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "BROADCAST_START",
              "BROADCAST_END"
            ],
            "in": "query",
            "name": "filter[eventTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[eventTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "SLIDE",
              "CHAPTER"
            ],
            "in": "query",
            "name": "filter[subTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[subTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCuePointListResponse"
            }
          }
        },
        "tags": [
          "cuePoint"
        ]
      }
    },
    "/service/cuepoint_cuepoint/action/serveBulk": {
      "get": {
        "description": "Download multiple cue points objects as XML definitions\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAdCuePointBaseFilter",
              "KalturaAnnotationBaseFilter",
              "KalturaAnswerCuePointBaseFilter",
              "KalturaCodeCuePointBaseFilter",
              "KalturaEventCuePointBaseFilter",
              "KalturaQuestionCuePointBaseFilter",
              "KalturaThumbCuePointBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[freeText]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[userIdEqualCurrent]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[userIdCurrent]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "enum": [
              "adCuePoint.Ad",
              "annotation.Annotation",
              "codeCuePoint.Code",
              "eventCuePoint.Event",
              "quiz.QUIZ_ANSWER",
              "quiz.QUIZ_QUESTION",
              "thumbCuePoint.Thumb"
            ],
            "enumLabels": [
              "AD",
              "ANNOTATION",
              "CODE",
              "EVENT",
              "QUIZ_ANSWER",
              "QUIZ_QUESTION",
              "THUMB"
            ],
            "in": "query",
            "name": "filter[cuePointTypeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[cuePointTypeIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "READY",
              "DELETED",
              "HANDLED",
              "PENDING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[triggeredAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[triggeredAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[tagsLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[startTimeGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[startTimeLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[userIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerSortValueLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[forceStopEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "CUSTOM",
              "VAST",
              "VAST_2_0",
              "VPAID"
            ],
            "in": "query",
            "name": "filter[protocolTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[protocolTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[parentIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parentIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[textMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[isPublicEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotationBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[codeLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[codeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[endTimeGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[endTimeLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationGreaterThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[durationLessThanOrEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "BROADCAST_START",
              "BROADCAST_END"
            ],
            "in": "query",
            "name": "filter[eventTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[eventTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[questionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleLike]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[titleMultiLikeAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "SLIDE",
              "CHAPTER"
            ],
            "in": "query",
            "name": "filter[subTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[subTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePointBaseFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "cuePoint"
        ]
      }
    },
    "/service/cuepoint_cuepoint/action/update": {
      "get": {
        "description": "Update cue point by id \n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaAnnotation",
              "KalturaAdCuePoint",
              "KalturaAnswerCuePoint",
              "KalturaCodeCuePoint",
              "KalturaEventCuePoint",
              "KalturaQuestionCuePoint",
              "KalturaThumbCuePoint"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "cuePoint[entryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[triggeredAt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "cuePoint[tags]",
            "type": "string"
          },
          {
            "description": "Start time in milliseconds",
            "in": "query",
            "name": "cuePoint[startTime]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "cuePoint[partnerData]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[partnerSortValue]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "cuePoint[forceStop]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "cuePoint[thumbOffset]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "cuePoint[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[parentId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[text]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "string"
          },
          {
            "description": "End time in milliseconds",
            "in": "query",
            "name": "cuePoint[endTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "integer"
          },
          {
            "description": "Is the annotation public.",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "cuePoint[isPublic]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "integer"
          },
          {
            "description": "Should the cue point get indexed on the entry.",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "cuePoint[searchableOnEntry]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnnotation"
            },
            "type": "integer"
          },
          {
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "CUSTOM",
              "VAST",
              "VAST_2_0",
              "VPAID"
            ],
            "in": "query",
            "name": "cuePoint[protocolType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[sourceUrl]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "VIDEO",
              "OVERLAY"
            ],
            "in": "query",
            "name": "cuePoint[adType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[title]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[endTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "integer"
          },
          {
            "description": "Duration in milliseconds",
            "in": "query",
            "name": "cuePoint[duration]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAdCuePoint"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "cuePoint[parentId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[quizUserEntryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[answerKey]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[correctAnswerKeys]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAnswerCuePoint"
            }
          },
          {
            "in": "query",
            "name": "cuePoint[code]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[description]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[endTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCodeCuePoint"
            },
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "BROADCAST_START",
              "BROADCAST_END"
            ],
            "in": "query",
            "name": "cuePoint[eventType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEventCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[optionalAnswers]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "array"
          },
          {
            "in": "query",
            "name": "cuePoint[hint]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[question]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[explanation]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaQuestionCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[assetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[description]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "cuePoint[title]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "string"
          },
          {
            "description": "The sub type of the ThumbCuePoint",
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "SLIDE",
              "CHAPTER"
            ],
            "in": "query",
            "name": "cuePoint[subType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbCuePoint"
            },
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCuePoint"
            }
          }
        },
        "tags": [
          "cuePoint"
        ]
      }
    },
    "/service/data/action/add": {
      "get": {
        "description": "Adds a new data entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The data of the entry",
            "in": "query",
            "name": "dataEntry[dataContent]",
            "type": "string"
          },
          {
            "description": "indicator whether to return the object for get action with the dataContent field.",
            "in": "query",
            "name": "dataEntry[retrieveDataContentByGet]",
            "type": "boolean"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "dataEntry[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "dataEntry[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "dataEntry[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "dataEntry[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "dataEntry[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "dataEntry[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "dataEntry[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "dataEntry[categoriesIds]",
            "type": "string"
          },
          {
            "description": "The type of the entry, this is auto filled by the derived entry object",
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "dataEntry[type]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dataEntry[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "dataEntry[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "dataEntry[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "dataEntry[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "dataEntry[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "dataEntry[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "dataEntry[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "dataEntry[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "dataEntry[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "dataEntry[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "dataEntry[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dataEntry[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "dataEntry[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "dataEntry[entitledUsersPublish]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDataEntry"
            }
          }
        },
        "tags": [
          "data"
        ]
      }
    },
    "/service/data/action/delete": {
      "get": {
        "description": "Delete a data entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Data entry id to delete",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "data"
        ]
      }
    },
    "/service/data/action/get": {
      "get": {
        "description": "Get data entry by ID.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Data entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired version of the data",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDataEntry"
            }
          }
        },
        "tags": [
          "data"
        ]
      }
    },
    "/service/data/action/list": {
      "get": {
        "description": "List data entries by filter with paging support.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDataListResponse"
            }
          }
        },
        "tags": [
          "data"
        ]
      }
    },
    "/service/data/action/serve": {
      "get": {
        "description": "serve action returan the file from dataContent field.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Data entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired version of the data",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          },
          {
            "description": "force to get the content without redirect",
            "in": "query",
            "name": "forceProxy",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "data"
        ]
      }
    },
    "/service/data/action/update": {
      "get": {
        "description": "Update data entry. Only the properties that were set will be updated.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Data entry id to update",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The data of the entry",
            "in": "query",
            "name": "documentEntry[dataContent]",
            "type": "string"
          },
          {
            "description": "indicator whether to return the object for get action with the dataContent field.",
            "in": "query",
            "name": "documentEntry[retrieveDataContentByGet]",
            "type": "boolean"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "documentEntry[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "documentEntry[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "documentEntry[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "documentEntry[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "documentEntry[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "documentEntry[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categoriesIds]",
            "type": "string"
          },
          {
            "description": "The type of the entry, this is auto filled by the derived entry object",
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "documentEntry[type]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "documentEntry[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "documentEntry[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "documentEntry[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "documentEntry[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "documentEntry[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "documentEntry[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "documentEntry[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersPublish]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDataEntry"
            }
          }
        },
        "tags": [
          "data"
        ]
      }
    },
    "/service/deliveryprofile/action/add": {
      "get": {
        "description": "Add new delivery.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaDeliveryProfileAkamaiAppleHttpManifest",
              "KalturaDeliveryProfileAkamaiHds",
              "KalturaDeliveryProfileAkamaiHttp",
              "KalturaDeliveryProfileGenericAppleHttp",
              "KalturaDeliveryProfileGenericHds",
              "KalturaDeliveryProfileGenericHttp",
              "KalturaDeliveryProfileGenericSilverLight",
              "KalturaDeliveryProfileLiveAppleHttp",
              "KalturaDeliveryProfileRtmp"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The name of the Delivery",
            "in": "query",
            "name": "delivery[name]",
            "type": "string"
          },
          {
            "description": "System name of the delivery",
            "in": "query",
            "name": "delivery[systemName]",
            "type": "string"
          },
          {
            "description": "The description of the Delivery",
            "in": "query",
            "name": "delivery[description]",
            "type": "string"
          },
          {
            "enum": [
              "applehttp",
              "applehttp_to_mc",
              "auto",
              "hdnetwork",
              "hdnetworkmanifest",
              "hds",
              "hls",
              "http",
              "mpegdash",
              "multicast_silverlight",
              "rtmp",
              "rtsp",
              "sl"
            ],
            "enumLabels": [
              "APPLE_HTTP",
              "APPLE_HTTP_TO_MC",
              "AUTO",
              "AKAMAI_HD",
              "AKAMAI_HDS",
              "HDS",
              "HLS",
              "HTTP",
              "MPEG_DASH",
              "MULTICAST_SL",
              "RTMP",
              "RTSP",
              "SILVER_LIGHT"
            ],
            "in": "query",
            "name": "delivery[streamerType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "delivery[url]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "ACTIVE",
              "DELETED",
              "STAGING_IN",
              "STAGING_OUT"
            ],
            "in": "query",
            "name": "delivery[status]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "delivery[recognizer]"
          },
          {
            "in": "query",
            "name": "delivery[tokenizer]"
          },
          {
            "description": "Comma separated list of supported media protocols. f.i. rtmpe",
            "in": "query",
            "name": "delivery[mediaProtocols]",
            "type": "string"
          },
          {
            "description": "priority used for ordering similar delivery profiles",
            "in": "query",
            "name": "delivery[priority]",
            "type": "integer"
          },
          {
            "description": "Should we use timing parameters - clipTo / seekFrom",
            "in": "query",
            "name": "delivery[supportClipping]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileAkamaiAppleHttpManifest"
            },
            "type": "boolean"
          },
          {
            "description": "Should we use timing parameters - clipTo / seekFrom",
            "in": "query",
            "name": "delivery[supportClipping]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileAkamaiHds"
            },
            "type": "boolean"
          },
          {
            "description": "Should we use intelliseek",
            "in": "query",
            "name": "delivery[useIntelliseek]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileAkamaiHttp"
            },
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "delivery[pattern]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileGenericAppleHttp"
            },
            "type": "string"
          },
          {
            "description": "rendererClass",
            "in": "query",
            "name": "delivery[rendererClass]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileGenericAppleHttp"
            },
            "type": "string"
          },
          {
            "description": "Enable to make playManifest redirect to the domain of the delivery profile",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "delivery[manifestRedirect]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileGenericAppleHttp"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "delivery[pattern]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileGenericHds"
            },
            "type": "string"
          },
          {
            "description": "rendererClass",
            "in": "query",
            "name": "delivery[rendererClass]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileGenericHds"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "delivery[pattern]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileGenericHttp"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "delivery[pattern]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileGenericSilverLight"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "delivery[disableExtraAttributes]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileLiveAppleHttp"
            },
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "delivery[forceProxy]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileLiveAppleHttp"
            },
            "type": "boolean"
          },
          {
            "description": "enforceRtmpe",
            "in": "query",
            "name": "delivery[enforceRtmpe]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileRtmp"
            },
            "type": "boolean"
          },
          {
            "description": "a prefix that is added to all stream urls (replaces storageProfile::rtmpPrefix)",
            "in": "query",
            "name": "delivery[prefix]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileRtmp"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeliveryProfile"
            }
          }
        },
        "tags": [
          "deliveryProfile"
        ]
      }
    },
    "/service/deliveryprofile/action/clone": {
      "get": {
        "description": "Add delivery based on existing delivery.\n\tMust provide valid sourceDeliveryId\n\t",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "deliveryId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeliveryProfile"
            }
          }
        },
        "tags": [
          "deliveryProfile"
        ]
      }
    },
    "/service/deliveryprofile/action/get": {
      "get": {
        "description": "Get delivery by id\n\t",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeliveryProfile"
            }
          }
        },
        "tags": [
          "deliveryProfile"
        ]
      }
    },
    "/service/deliveryprofile/action/list": {
      "get": {
        "description": "Retrieve a list of available delivery depends on the filter given\n\t",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter",
              "KalturaDeliveryProfileAkamaiHdsBaseFilter",
              "KalturaDeliveryProfileAkamaiHttpBaseFilter",
              "KalturaDeliveryProfileGenericAppleHttpBaseFilter",
              "KalturaDeliveryProfileGenericHdsBaseFilter",
              "KalturaDeliveryProfileGenericHttpBaseFilter",
              "KalturaDeliveryProfileGenericSilverLightBaseFilter",
              "KalturaDeliveryProfileLiveAppleHttpBaseFilter",
              "KalturaDeliveryProfileRtmpBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              "applehttp",
              "applehttp_to_mc",
              "auto",
              "hdnetwork",
              "hdnetworkmanifest",
              "hds",
              "hls",
              "http",
              "mpegdash",
              "multicast_silverlight",
              "rtmp",
              "rtsp",
              "sl"
            ],
            "enumLabels": [
              "APPLE_HTTP",
              "APPLE_HTTP_TO_MC",
              "AUTO",
              "AKAMAI_HD",
              "AKAMAI_HDS",
              "HDS",
              "HLS",
              "HTTP",
              "MPEG_DASH",
              "MULTICAST_SL",
              "RTMP",
              "RTSP",
              "SILVER_LIGHT"
            ],
            "in": "query",
            "name": "filter[streamerTypeEqual]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "ACTIVE",
              "DELETED",
              "STAGING_IN",
              "STAGING_OUT"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeliveryProfileListResponse"
            }
          }
        },
        "tags": [
          "deliveryProfile"
        ]
      }
    },
    "/service/deliveryprofile/action/update": {
      "get": {
        "description": "Update exisiting delivery\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaDeliveryProfileAkamaiAppleHttpManifest",
              "KalturaDeliveryProfileAkamaiHds",
              "KalturaDeliveryProfileAkamaiHttp",
              "KalturaDeliveryProfileGenericAppleHttp",
              "KalturaDeliveryProfileGenericHds",
              "KalturaDeliveryProfileGenericHttp",
              "KalturaDeliveryProfileGenericSilverLight",
              "KalturaDeliveryProfileLiveAppleHttp",
              "KalturaDeliveryProfileRtmp"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The name of the Delivery",
            "in": "query",
            "name": "delivery[name]",
            "type": "string"
          },
          {
            "description": "System name of the delivery",
            "in": "query",
            "name": "delivery[systemName]",
            "type": "string"
          },
          {
            "description": "The description of the Delivery",
            "in": "query",
            "name": "delivery[description]",
            "type": "string"
          },
          {
            "enum": [
              "applehttp",
              "applehttp_to_mc",
              "auto",
              "hdnetwork",
              "hdnetworkmanifest",
              "hds",
              "hls",
              "http",
              "mpegdash",
              "multicast_silverlight",
              "rtmp",
              "rtsp",
              "sl"
            ],
            "enumLabels": [
              "APPLE_HTTP",
              "APPLE_HTTP_TO_MC",
              "AUTO",
              "AKAMAI_HD",
              "AKAMAI_HDS",
              "HDS",
              "HLS",
              "HTTP",
              "MPEG_DASH",
              "MULTICAST_SL",
              "RTMP",
              "RTSP",
              "SILVER_LIGHT"
            ],
            "in": "query",
            "name": "delivery[streamerType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "delivery[url]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "ACTIVE",
              "DELETED",
              "STAGING_IN",
              "STAGING_OUT"
            ],
            "in": "query",
            "name": "delivery[status]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "delivery[recognizer]"
          },
          {
            "in": "query",
            "name": "delivery[tokenizer]"
          },
          {
            "description": "Comma separated list of supported media protocols. f.i. rtmpe",
            "in": "query",
            "name": "delivery[mediaProtocols]",
            "type": "string"
          },
          {
            "description": "priority used for ordering similar delivery profiles",
            "in": "query",
            "name": "delivery[priority]",
            "type": "integer"
          },
          {
            "description": "Should we use timing parameters - clipTo / seekFrom",
            "in": "query",
            "name": "delivery[supportClipping]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileAkamaiAppleHttpManifest"
            },
            "type": "boolean"
          },
          {
            "description": "Should we use timing parameters - clipTo / seekFrom",
            "in": "query",
            "name": "delivery[supportClipping]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileAkamaiHds"
            },
            "type": "boolean"
          },
          {
            "description": "Should we use intelliseek",
            "in": "query",
            "name": "delivery[useIntelliseek]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileAkamaiHttp"
            },
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "delivery[pattern]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileGenericAppleHttp"
            },
            "type": "string"
          },
          {
            "description": "rendererClass",
            "in": "query",
            "name": "delivery[rendererClass]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileGenericAppleHttp"
            },
            "type": "string"
          },
          {
            "description": "Enable to make playManifest redirect to the domain of the delivery profile",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "delivery[manifestRedirect]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileGenericAppleHttp"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "delivery[pattern]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileGenericHds"
            },
            "type": "string"
          },
          {
            "description": "rendererClass",
            "in": "query",
            "name": "delivery[rendererClass]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileGenericHds"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "delivery[pattern]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileGenericHttp"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "delivery[pattern]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileGenericSilverLight"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "delivery[disableExtraAttributes]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileLiveAppleHttp"
            },
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "delivery[forceProxy]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileLiveAppleHttp"
            },
            "type": "boolean"
          },
          {
            "description": "enforceRtmpe",
            "in": "query",
            "name": "delivery[enforceRtmpe]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileRtmp"
            },
            "type": "boolean"
          },
          {
            "description": "a prefix that is added to all stream urls (replaces storageProfile::rtmpPrefix)",
            "in": "query",
            "name": "delivery[prefix]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDeliveryProfileRtmp"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeliveryProfile"
            }
          }
        },
        "tags": [
          "deliveryProfile"
        ]
      }
    },
    "/service/document/action/addFromEntry": {
      "get": {
        "description": "Copy entry into new entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id to copy from",
            "in": "query",
            "name": "sourceEntryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The type of the document",
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "documentEntry[documentType]",
            "type": "integer"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "documentEntry[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "documentEntry[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "documentEntry[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "documentEntry[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "documentEntry[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "documentEntry[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categoriesIds]",
            "type": "string"
          },
          {
            "description": "The type of the entry, this is auto filled by the derived entry object",
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "documentEntry[type]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "documentEntry[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "documentEntry[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "documentEntry[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "documentEntry[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "documentEntry[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "documentEntry[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "documentEntry[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersPublish]",
            "type": "string"
          },
          {
            "description": "The flavor to be used as the new entry source, source flavor will be used if not specified",
            "in": "query",
            "name": "sourceFlavorParamsId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/service/document/action/addFromFlavorAsset": {
      "get": {
        "description": "Copy flavor asset into new entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Flavor asset id to be used as the new entry source",
            "in": "query",
            "name": "sourceFlavorAssetId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The type of the document",
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "documentEntry[documentType]",
            "type": "integer"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "documentEntry[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "documentEntry[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "documentEntry[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "documentEntry[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "documentEntry[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "documentEntry[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categoriesIds]",
            "type": "string"
          },
          {
            "description": "The type of the entry, this is auto filled by the derived entry object",
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "documentEntry[type]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "documentEntry[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "documentEntry[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "documentEntry[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "documentEntry[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "documentEntry[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "documentEntry[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "documentEntry[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersPublish]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/service/document/action/addFromUploadedFile": {
      "get": {
        "description": "Add new document entry after the specific document file was uploaded and the upload token id exists\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The type of the document",
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "documentEntry[documentType]",
            "type": "integer"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "documentEntry[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "documentEntry[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "documentEntry[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "documentEntry[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "documentEntry[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "documentEntry[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categoriesIds]",
            "type": "string"
          },
          {
            "description": "The type of the entry, this is auto filled by the derived entry object",
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "documentEntry[type]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "documentEntry[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "documentEntry[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "documentEntry[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "documentEntry[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "documentEntry[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "documentEntry[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "documentEntry[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersPublish]",
            "type": "string"
          },
          {
            "description": "Upload token id",
            "in": "query",
            "name": "uploadTokenId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/service/document/action/approveReplace": {
      "get": {
        "description": "Approves document replacement\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "document entry id to replace",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/service/document/action/cancelReplace": {
      "get": {
        "description": "Cancels document replacement\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id to cancel",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/service/document/action/convert": {
      "get": {
        "description": "Convert entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "conversionProfileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/service/document/action/convertPptToSwf": {
      "get": {
        "description": "This will queue a batch job for converting the document file to swf\n\t Returns the URL where the new swf will be available \n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/service/document/action/delete": {
      "get": {
        "description": "Delete a document entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id to delete",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/service/document/action/get": {
      "get": {
        "description": "Get document entry by ID.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired version of the data",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/service/document/action/list": {
      "get": {
        "description": "List document entries by filter with paging support.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "filter[documentTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[documentTypeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchAnd]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentListResponse"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/service/document/action/serve": {
      "get": {
        "description": "Serves the file content\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Flavor asset id",
            "in": "query",
            "name": "flavorAssetId",
            "required": false,
            "type": "string"
          },
          {
            "description": "force to get the content without redirect",
            "in": "query",
            "name": "forceProxy",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/service/document/action/serveByFlavorParamsId": {
      "get": {
        "description": "Serves the file content\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Flavor params id",
            "in": "query",
            "name": "flavorParamsId",
            "required": false,
            "type": "string"
          },
          {
            "description": "force to get the content without redirect",
            "in": "query",
            "name": "forceProxy",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/service/document/action/update": {
      "get": {
        "description": "Update document entry. Only the properties that were set will be updated.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id to update",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The type of the document",
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "documentEntry[documentType]",
            "type": "integer"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "documentEntry[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "documentEntry[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "documentEntry[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "documentEntry[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "documentEntry[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "documentEntry[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categoriesIds]",
            "type": "string"
          },
          {
            "description": "The type of the entry, this is auto filled by the derived entry object",
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "documentEntry[type]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "documentEntry[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "documentEntry[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "documentEntry[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "documentEntry[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "documentEntry[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "documentEntry[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "documentEntry[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersPublish]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/service/document/action/updateContent": {
      "get": {
        "description": "Replace content associated with the given document entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "document entry id to update",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaContentResource",
              "KalturaAssetParamsResourceContainer",
              "KalturaAssetsParamsResourceContainers"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "resource[resource]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetParamsResourceContainer"
            }
          },
          {
            "description": "The asset params to associate with the reaource",
            "in": "query",
            "name": "resource[assetParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetParamsResourceContainer"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "resource[resources]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetsParamsResourceContainers"
            },
            "type": "array"
          },
          {
            "description": "The conversion profile id to be used on the entry",
            "in": "query",
            "name": "conversionProfileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/service/document/action/upload": {
      "get": {
        "description": "Upload a document file to Kaltura, then the file can be used to create a document entry. \n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "document"
        ]
      }
    },
    "/service/document_documents/action/addFromEntry": {
      "get": {
        "description": "Copy entry into new entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id to copy from",
            "in": "query",
            "name": "sourceEntryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The type of the document",
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "documentEntry[documentType]",
            "type": "integer"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "documentEntry[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "documentEntry[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "documentEntry[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "documentEntry[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "documentEntry[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "documentEntry[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categoriesIds]",
            "type": "string"
          },
          {
            "description": "The type of the entry, this is auto filled by the derived entry object",
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "documentEntry[type]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "documentEntry[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "documentEntry[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "documentEntry[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "documentEntry[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "documentEntry[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "documentEntry[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "documentEntry[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersPublish]",
            "type": "string"
          },
          {
            "description": "The flavor to be used as the new entry source, source flavor will be used if not specified",
            "in": "query",
            "name": "sourceFlavorParamsId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "documents"
        ]
      }
    },
    "/service/document_documents/action/addFromFlavorAsset": {
      "get": {
        "description": "Copy flavor asset into new entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Flavor asset id to be used as the new entry source",
            "in": "query",
            "name": "sourceFlavorAssetId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The type of the document",
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "documentEntry[documentType]",
            "type": "integer"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "documentEntry[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "documentEntry[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "documentEntry[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "documentEntry[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "documentEntry[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "documentEntry[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categoriesIds]",
            "type": "string"
          },
          {
            "description": "The type of the entry, this is auto filled by the derived entry object",
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "documentEntry[type]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "documentEntry[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "documentEntry[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "documentEntry[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "documentEntry[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "documentEntry[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "documentEntry[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "documentEntry[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersPublish]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "documents"
        ]
      }
    },
    "/service/document_documents/action/addFromUploadedFile": {
      "get": {
        "description": "Add new document entry after the specific document file was uploaded and the upload token id exists\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The type of the document",
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "documentEntry[documentType]",
            "type": "integer"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "documentEntry[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "documentEntry[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "documentEntry[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "documentEntry[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "documentEntry[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "documentEntry[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categoriesIds]",
            "type": "string"
          },
          {
            "description": "The type of the entry, this is auto filled by the derived entry object",
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "documentEntry[type]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "documentEntry[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "documentEntry[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "documentEntry[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "documentEntry[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "documentEntry[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "documentEntry[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "documentEntry[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersPublish]",
            "type": "string"
          },
          {
            "description": "Upload token id",
            "in": "query",
            "name": "uploadTokenId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "documents"
        ]
      }
    },
    "/service/document_documents/action/approveReplace": {
      "get": {
        "description": "Approves document replacement\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "document entry id to replace",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "documents"
        ]
      }
    },
    "/service/document_documents/action/cancelReplace": {
      "get": {
        "description": "Cancels document replacement\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id to cancel",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "documents"
        ]
      }
    },
    "/service/document_documents/action/convert": {
      "get": {
        "description": "Convert entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "conversionProfileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "documents"
        ]
      }
    },
    "/service/document_documents/action/convertPptToSwf": {
      "get": {
        "description": "This will queue a batch job for converting the document file to swf\n\t Returns the URL where the new swf will be available \n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "documents"
        ]
      }
    },
    "/service/document_documents/action/delete": {
      "get": {
        "description": "Delete a document entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id to delete",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "documents"
        ]
      }
    },
    "/service/document_documents/action/get": {
      "get": {
        "description": "Get document entry by ID.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired version of the data",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "documents"
        ]
      }
    },
    "/service/document_documents/action/list": {
      "get": {
        "description": "List document entries by filter with paging support.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "filter[documentTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[documentTypeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchAnd]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentListResponse"
            }
          }
        },
        "tags": [
          "documents"
        ]
      }
    },
    "/service/document_documents/action/serve": {
      "get": {
        "description": "Serves the file content\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Flavor asset id",
            "in": "query",
            "name": "flavorAssetId",
            "required": false,
            "type": "string"
          },
          {
            "description": "force to get the content without redirect",
            "in": "query",
            "name": "forceProxy",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "documents"
        ]
      }
    },
    "/service/document_documents/action/serveByFlavorParamsId": {
      "get": {
        "description": "Serves the file content\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Flavor params id",
            "in": "query",
            "name": "flavorParamsId",
            "required": false,
            "type": "string"
          },
          {
            "description": "force to get the content without redirect",
            "in": "query",
            "name": "forceProxy",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "documents"
        ]
      }
    },
    "/service/document_documents/action/update": {
      "get": {
        "description": "Update document entry. Only the properties that were set will be updated.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Document entry id to update",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The type of the document",
            "enum": [
              11,
              12,
              13
            ],
            "enumLabels": [
              "DOCUMENT",
              "SWF",
              "PDF"
            ],
            "in": "query",
            "name": "documentEntry[documentType]",
            "type": "integer"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "documentEntry[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "documentEntry[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "documentEntry[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "documentEntry[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "documentEntry[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "documentEntry[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "documentEntry[categoriesIds]",
            "type": "string"
          },
          {
            "description": "The type of the entry, this is auto filled by the derived entry object",
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "documentEntry[type]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "documentEntry[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "documentEntry[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "documentEntry[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "documentEntry[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "documentEntry[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "documentEntry[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "documentEntry[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "documentEntry[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentEntry[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "documentEntry[entitledUsersPublish]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "documents"
        ]
      }
    },
    "/service/document_documents/action/updateContent": {
      "get": {
        "description": "Replace content associated with the given document entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "document entry id to update",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaContentResource",
              "KalturaAssetParamsResourceContainer",
              "KalturaAssetsParamsResourceContainers"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "resource[resource]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetParamsResourceContainer"
            }
          },
          {
            "description": "The asset params to associate with the reaource",
            "in": "query",
            "name": "resource[assetParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetParamsResourceContainer"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "resource[resources]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetsParamsResourceContainers"
            },
            "type": "array"
          },
          {
            "description": "The conversion profile id to be used on the entry",
            "in": "query",
            "name": "conversionProfileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDocumentEntry"
            }
          }
        },
        "tags": [
          "documents"
        ]
      }
    },
    "/service/document_documents/action/upload": {
      "get": {
        "description": "Upload a document file to Kaltura, then the file can be used to create a document entry. \n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "documents"
        ]
      }
    },
    "/service/dropfolder_dropfolder/action/add": {
      "get": {
        "description": "Allows you to add a new KalturaDropFolder object\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaFeedDropFolder",
              "KalturaRemoteDropFolder"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "dropFolder[partnerId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolder[description]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED",
              "ERROR"
            ],
            "in": "query",
            "name": "dropFolder[status]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[conversionProfileId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[dc]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[path]",
            "type": "string"
          },
          {
            "description": "The ammount of time, in seconds, that should pass so that a file with no change in size we'll be treated as \"finished uploading to folder\"",
            "in": "query",
            "name": "dropFolder[fileSizeCheckInterval]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "MANUAL_DELETE",
              "AUTO_DELETE",
              "AUTO_DELETE_WHEN_ENTRY_IS_READY"
            ],
            "in": "query",
            "name": "dropFolder[fileDeletePolicy]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[autoFileDeleteDays]",
            "type": "integer"
          },
          {
            "enum": [
              "dropFolderXmlBulkUpload.XML",
              "1"
            ],
            "enumLabels": [
              "XML",
              "CONTENT"
            ],
            "in": "query",
            "name": "dropFolder[fileHandlerType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolder[fileNamePatterns]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolder[fileHandlerConfig]"
          },
          {
            "in": "query",
            "name": "dropFolder[tags]",
            "type": "string"
          },
          {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6"
            ],
            "enumLabels": [
              "ERROR_CONNECT",
              "ERROR_AUTENTICATE",
              "ERROR_GET_PHISICAL_FILE_LIST",
              "ERROR_GET_DB_FILE_LIST",
              "DROP_FOLDER_APP_ERROR",
              "CONTENT_MATCH_POLICY_UNDEFINED"
            ],
            "in": "query",
            "name": "dropFolder[errorCode]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolder[errorDescription]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolder[ignoreFileNamePatterns]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolder[lastAccessedAt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[incremental]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "dropFolder[lastFileTimestamp]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[metadataProfileId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[categoriesMetadataFieldName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolder[enforceEntitlement]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "dropFolder[shouldValidateKS]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "dropFolder[itemHandlingLimit]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFeedDropFolder"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[feedItemInfo]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFeedDropFolder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDropFolder"
            }
          }
        },
        "tags": [
          "dropFolder"
        ]
      }
    },
    "/service/dropfolder_dropfolder/action/delete": {
      "get": {
        "description": "Mark the KalturaDropFolder object as deleted\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "dropFolderId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDropFolder"
            }
          }
        },
        "tags": [
          "dropFolder"
        ]
      }
    },
    "/service/dropfolder_dropfolder/action/get": {
      "get": {
        "description": "Retrieve a KalturaDropFolder object by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "dropFolderId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDropFolder"
            }
          }
        },
        "tags": [
          "dropFolder"
        ]
      }
    },
    "/service/dropfolder_dropfolder/action/list": {
      "get": {
        "description": "List KalturaDropFolder objects\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaRemoteDropFolderBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[currentDc]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameLike]",
            "type": "string"
          },
          {
            "enum": [
              "FeedDropFolder.FEED",
              "1",
              "2",
              "3",
              "4",
              "6"
            ],
            "enumLabels": [
              "FEED",
              "LOCAL",
              "FTP",
              "SCP",
              "SFTP",
              "S3"
            ],
            "in": "query",
            "name": "filter[typeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[typeIn]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED",
              "ERROR"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[conversionProfileIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[conversionProfileIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[dcEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[dcIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[pathEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[pathLike]",
            "type": "string"
          },
          {
            "enum": [
              "dropFolderXmlBulkUpload.XML",
              "1"
            ],
            "enumLabels": [
              "XML",
              "CONTENT"
            ],
            "in": "query",
            "name": "filter[fileHandlerTypeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fileHandlerTypeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fileNamePatternsLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fileNamePatternsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fileNamePatternsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6"
            ],
            "enumLabels": [
              "ERROR_CONNECT",
              "ERROR_AUTENTICATE",
              "ERROR_GET_PHISICAL_FILE_LIST",
              "ERROR_GET_DB_FILE_LIST",
              "DROP_FOLDER_APP_ERROR",
              "CONTENT_MATCH_POLICY_UNDEFINED"
            ],
            "in": "query",
            "name": "filter[errorCodeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[errorCodeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDropFolderListResponse"
            }
          }
        },
        "tags": [
          "dropFolder"
        ]
      }
    },
    "/service/dropfolder_dropfolder/action/update": {
      "get": {
        "description": "Update an existing KalturaDropFolder object\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "dropFolderId",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "KalturaFeedDropFolder",
              "KalturaRemoteDropFolder"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "dropFolder[partnerId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolder[description]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED",
              "ERROR"
            ],
            "in": "query",
            "name": "dropFolder[status]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[conversionProfileId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[dc]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[path]",
            "type": "string"
          },
          {
            "description": "The ammount of time, in seconds, that should pass so that a file with no change in size we'll be treated as \"finished uploading to folder\"",
            "in": "query",
            "name": "dropFolder[fileSizeCheckInterval]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "MANUAL_DELETE",
              "AUTO_DELETE",
              "AUTO_DELETE_WHEN_ENTRY_IS_READY"
            ],
            "in": "query",
            "name": "dropFolder[fileDeletePolicy]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[autoFileDeleteDays]",
            "type": "integer"
          },
          {
            "enum": [
              "dropFolderXmlBulkUpload.XML",
              "1"
            ],
            "enumLabels": [
              "XML",
              "CONTENT"
            ],
            "in": "query",
            "name": "dropFolder[fileHandlerType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolder[fileNamePatterns]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolder[fileHandlerConfig]"
          },
          {
            "in": "query",
            "name": "dropFolder[tags]",
            "type": "string"
          },
          {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6"
            ],
            "enumLabels": [
              "ERROR_CONNECT",
              "ERROR_AUTENTICATE",
              "ERROR_GET_PHISICAL_FILE_LIST",
              "ERROR_GET_DB_FILE_LIST",
              "DROP_FOLDER_APP_ERROR",
              "CONTENT_MATCH_POLICY_UNDEFINED"
            ],
            "in": "query",
            "name": "dropFolder[errorCode]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolder[errorDescription]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolder[ignoreFileNamePatterns]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolder[lastAccessedAt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[incremental]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "dropFolder[lastFileTimestamp]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[metadataProfileId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[categoriesMetadataFieldName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolder[enforceEntitlement]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "dropFolder[shouldValidateKS]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "dropFolder[itemHandlingLimit]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFeedDropFolder"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolder[feedItemInfo]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFeedDropFolder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDropFolder"
            }
          }
        },
        "tags": [
          "dropFolder"
        ]
      }
    },
    "/service/dropfolder_dropfolderfile/action/add": {
      "get": {
        "description": "Allows you to add a new KalturaDropFolderFile object\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaFeedDropFolderFile"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "dropFolderFile[dropFolderId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolderFile[fileName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolderFile[fileSize]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "dropFolderFile[parsedSlug]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolderFile[parsedFlavor]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolderFile[parsedUserId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolderFile[leadDropFolderFileId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolderFile[deletedDropFolderFileId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolderFile[entryId]",
            "type": "string"
          },
          {
            "enum": [
              "dropFolderXmlBulkUpload.ERROR_ADDING_BULK_UPLOAD",
              "dropFolderXmlBulkUpload.ERROR_ADD_CONTENT_RESOURCE",
              "dropFolderXmlBulkUpload.ERROR_IN_BULK_UPLOAD",
              "dropFolderXmlBulkUpload.ERROR_WRITING_TEMP_FILE",
              "dropFolderXmlBulkUpload.LOCAL_FILE_WRONG_CHECKSUM",
              "dropFolderXmlBulkUpload.LOCAL_FILE_WRONG_SIZE",
              "dropFolderXmlBulkUpload.MALFORMED_XML_FILE",
              "dropFolderXmlBulkUpload.XML_FILE_SIZE_EXCEED_LIMIT",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "10",
              "11",
              "12",
              "13"
            ],
            "enumLabels": [
              "ERROR_ADDING_BULK_UPLOAD",
              "ERROR_ADD_CONTENT_RESOURCE",
              "ERROR_IN_BULK_UPLOAD",
              "ERROR_WRITING_TEMP_FILE",
              "LOCAL_FILE_WRONG_CHECKSUM",
              "LOCAL_FILE_WRONG_SIZE",
              "MALFORMED_XML_FILE",
              "XML_FILE_SIZE_EXCEED_LIMIT",
              "ERROR_UPDATE_ENTRY",
              "ERROR_ADD_ENTRY",
              "FLAVOR_NOT_FOUND",
              "FLAVOR_MISSING_IN_FILE_NAME",
              "SLUG_REGEX_NO_MATCH",
              "ERROR_READING_FILE",
              "ERROR_DOWNLOADING_FILE",
              "ERROR_UPDATE_FILE",
              "ERROR_ADDING_CONTENT_PROCESSOR",
              "ERROR_IN_CONTENT_PROCESSOR",
              "ERROR_DELETING_FILE",
              "FILE_NO_MATCH"
            ],
            "in": "query",
            "name": "dropFolderFile[errorCode]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolderFile[errorDescription]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolderFile[lastModificationTime]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolderFile[uploadStartDetectedAt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolderFile[uploadEndDetectedAt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolderFile[importStartedAt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolderFile[importEndedAt]",
            "type": "integer"
          },
          {
            "description": "MD5 or Sha1 encrypted string",
            "in": "query",
            "name": "dropFolderFile[hash]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFeedDropFolderFile"
            },
            "type": "string"
          },
          {
            "description": "Path of the original Feed content XML",
            "in": "query",
            "name": "dropFolderFile[feedXmlPath]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFeedDropFolderFile"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDropFolderFile"
            }
          }
        },
        "tags": [
          "dropFolderFile"
        ]
      }
    },
    "/service/dropfolder_dropfolderfile/action/delete": {
      "get": {
        "description": "Mark the KalturaDropFolderFile object as deleted\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "dropFolderFileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDropFolderFile"
            }
          }
        },
        "tags": [
          "dropFolderFile"
        ]
      }
    },
    "/service/dropfolder_dropfolderfile/action/get": {
      "get": {
        "description": "Retrieve a KalturaDropFolderFile object by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "dropFolderFileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDropFolderFile"
            }
          }
        },
        "tags": [
          "dropFolderFile"
        ]
      }
    },
    "/service/dropfolder_dropfolderfile/action/ignore": {
      "get": {
        "description": "Set the KalturaDropFolderFile status to ignore (KalturaDropFolderFileStatus::IGNORE)\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "dropFolderFileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDropFolderFile"
            }
          }
        },
        "tags": [
          "dropFolderFile"
        ]
      }
    },
    "/service/dropfolder_dropfolderfile/action/list": {
      "get": {
        "description": "List KalturaDropFolderFile objects\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[dropFolderIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[dropFolderIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fileNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fileNameIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fileNameLike]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UPLOADING",
              "PENDING",
              "WAITING",
              "HANDLED",
              "IGNORE",
              "DELETED",
              "PURGED",
              "NO_MATCH",
              "ERROR_HANDLING",
              "ERROR_DELETING",
              "DOWNLOADING",
              "ERROR_DOWNLOADING",
              "PROCESSING",
              "PARSED",
              "DETECTED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parsedSlugEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parsedSlugIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parsedSlugLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parsedFlavorEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parsedFlavorIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parsedFlavorLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[leadDropFolderFileIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[deletedDropFolderFileIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "enum": [
              "dropFolderXmlBulkUpload.ERROR_ADDING_BULK_UPLOAD",
              "dropFolderXmlBulkUpload.ERROR_ADD_CONTENT_RESOURCE",
              "dropFolderXmlBulkUpload.ERROR_IN_BULK_UPLOAD",
              "dropFolderXmlBulkUpload.ERROR_WRITING_TEMP_FILE",
              "dropFolderXmlBulkUpload.LOCAL_FILE_WRONG_CHECKSUM",
              "dropFolderXmlBulkUpload.LOCAL_FILE_WRONG_SIZE",
              "dropFolderXmlBulkUpload.MALFORMED_XML_FILE",
              "dropFolderXmlBulkUpload.XML_FILE_SIZE_EXCEED_LIMIT",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "10",
              "11",
              "12",
              "13"
            ],
            "enumLabels": [
              "ERROR_ADDING_BULK_UPLOAD",
              "ERROR_ADD_CONTENT_RESOURCE",
              "ERROR_IN_BULK_UPLOAD",
              "ERROR_WRITING_TEMP_FILE",
              "LOCAL_FILE_WRONG_CHECKSUM",
              "LOCAL_FILE_WRONG_SIZE",
              "MALFORMED_XML_FILE",
              "XML_FILE_SIZE_EXCEED_LIMIT",
              "ERROR_UPDATE_ENTRY",
              "ERROR_ADD_ENTRY",
              "FLAVOR_NOT_FOUND",
              "FLAVOR_MISSING_IN_FILE_NAME",
              "SLUG_REGEX_NO_MATCH",
              "ERROR_READING_FILE",
              "ERROR_DOWNLOADING_FILE",
              "ERROR_UPDATE_FILE",
              "ERROR_ADDING_CONTENT_PROCESSOR",
              "ERROR_IN_CONTENT_PROCESSOR",
              "ERROR_DELETING_FILE",
              "FILE_NO_MATCH"
            ],
            "in": "query",
            "name": "filter[errorCodeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[errorCodeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDropFolderFileListResponse"
            }
          }
        },
        "tags": [
          "dropFolderFile"
        ]
      }
    },
    "/service/dropfolder_dropfolderfile/action/update": {
      "get": {
        "description": "Update an existing KalturaDropFolderFile object\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "dropFolderFileId",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "KalturaFeedDropFolderFile"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "dropFolderFile[dropFolderId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolderFile[fileName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolderFile[fileSize]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "dropFolderFile[parsedSlug]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolderFile[parsedFlavor]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolderFile[parsedUserId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolderFile[leadDropFolderFileId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolderFile[deletedDropFolderFileId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolderFile[entryId]",
            "type": "string"
          },
          {
            "enum": [
              "dropFolderXmlBulkUpload.ERROR_ADDING_BULK_UPLOAD",
              "dropFolderXmlBulkUpload.ERROR_ADD_CONTENT_RESOURCE",
              "dropFolderXmlBulkUpload.ERROR_IN_BULK_UPLOAD",
              "dropFolderXmlBulkUpload.ERROR_WRITING_TEMP_FILE",
              "dropFolderXmlBulkUpload.LOCAL_FILE_WRONG_CHECKSUM",
              "dropFolderXmlBulkUpload.LOCAL_FILE_WRONG_SIZE",
              "dropFolderXmlBulkUpload.MALFORMED_XML_FILE",
              "dropFolderXmlBulkUpload.XML_FILE_SIZE_EXCEED_LIMIT",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "10",
              "11",
              "12",
              "13"
            ],
            "enumLabels": [
              "ERROR_ADDING_BULK_UPLOAD",
              "ERROR_ADD_CONTENT_RESOURCE",
              "ERROR_IN_BULK_UPLOAD",
              "ERROR_WRITING_TEMP_FILE",
              "LOCAL_FILE_WRONG_CHECKSUM",
              "LOCAL_FILE_WRONG_SIZE",
              "MALFORMED_XML_FILE",
              "XML_FILE_SIZE_EXCEED_LIMIT",
              "ERROR_UPDATE_ENTRY",
              "ERROR_ADD_ENTRY",
              "FLAVOR_NOT_FOUND",
              "FLAVOR_MISSING_IN_FILE_NAME",
              "SLUG_REGEX_NO_MATCH",
              "ERROR_READING_FILE",
              "ERROR_DOWNLOADING_FILE",
              "ERROR_UPDATE_FILE",
              "ERROR_ADDING_CONTENT_PROCESSOR",
              "ERROR_IN_CONTENT_PROCESSOR",
              "ERROR_DELETING_FILE",
              "FILE_NO_MATCH"
            ],
            "in": "query",
            "name": "dropFolderFile[errorCode]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolderFile[errorDescription]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolderFile[lastModificationTime]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dropFolderFile[uploadStartDetectedAt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolderFile[uploadEndDetectedAt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolderFile[importStartedAt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "dropFolderFile[importEndedAt]",
            "type": "integer"
          },
          {
            "description": "MD5 or Sha1 encrypted string",
            "in": "query",
            "name": "dropFolderFile[hash]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFeedDropFolderFile"
            },
            "type": "string"
          },
          {
            "description": "Path of the original Feed content XML",
            "in": "query",
            "name": "dropFolderFile[feedXmlPath]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFeedDropFolderFile"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDropFolderFile"
            }
          }
        },
        "tags": [
          "dropFolderFile"
        ]
      }
    },
    "/service/dropfolder_dropfolderfile/action/updateStatus": {
      "get": {
        "description": "Update status of KalturaDropFolderFile\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "dropFolderFileId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15"
            ],
            "enumLabels": [
              "UPLOADING",
              "PENDING",
              "WAITING",
              "HANDLED",
              "IGNORE",
              "DELETED",
              "PURGED",
              "NO_MATCH",
              "ERROR_HANDLING",
              "ERROR_DELETING",
              "DOWNLOADING",
              "ERROR_DOWNLOADING",
              "PROCESSING",
              "PARSED",
              "DETECTED"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDropFolderFile"
            }
          }
        },
        "tags": [
          "dropFolderFile"
        ]
      }
    },
    "/service/edgeserver/action/add": {
      "get": {
        "description": "Adds a edge server to the Kaltura DB.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "edgeServer name",
            "in": "query",
            "name": "edgeServer[name]",
            "type": "string"
          },
          {
            "description": "edgeServer uniqe system name",
            "in": "query",
            "name": "edgeServer[systemName]",
            "type": "string"
          },
          {
            "description": "edgeServer description",
            "in": "query",
            "name": "edgeServer[desciption]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "ACTIVE",
              "DISABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "edgeServer[status]",
            "type": "integer"
          },
          {
            "description": "edgeServer tags",
            "in": "query",
            "name": "edgeServer[tags]",
            "type": "string"
          },
          {
            "description": "edgeServer host name",
            "in": "query",
            "name": "edgeServer[hostName]",
            "type": "string"
          },
          {
            "description": "edgeServer playback hostName",
            "in": "query",
            "name": "edgeServer[playbackHostName]",
            "type": "string"
          },
          {
            "description": "Delivery profile ids comma seperated",
            "in": "query",
            "name": "edgeServer[deliveryProfileIds]",
            "type": "string"
          },
          {
            "description": "Id of the parent edge server",
            "in": "query",
            "name": "edgeServer[parentId]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEdgeServer"
            }
          }
        },
        "tags": [
          "edgeServer"
        ]
      }
    },
    "/service/edgeserver/action/delete": {
      "get": {
        "description": "delete edge server by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "edgeServerId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "edgeServer"
        ]
      }
    },
    "/service/edgeserver/action/get": {
      "get": {
        "description": "Get edge server by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "edgeServerId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEdgeServer"
            }
          }
        },
        "tags": [
          "edgeServer"
        ]
      }
    },
    "/service/edgeserver/action/list": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[nameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "ACTIVE",
              "DISABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[hostNameLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[hostNameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[hostNameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[playbackHostNameLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[playbackHostNameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[playbackHostNameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[parentIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[parentIdIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEdgeServerListResponse"
            }
          }
        },
        "tags": [
          "edgeServer"
        ]
      }
    },
    "/service/edgeserver/action/update": {
      "get": {
        "description": "Update edge server by id \n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "edgeServerId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "edgeServer name",
            "in": "query",
            "name": "edgeServer[name]",
            "type": "string"
          },
          {
            "description": "edgeServer uniqe system name",
            "in": "query",
            "name": "edgeServer[systemName]",
            "type": "string"
          },
          {
            "description": "edgeServer description",
            "in": "query",
            "name": "edgeServer[desciption]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "ACTIVE",
              "DISABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "edgeServer[status]",
            "type": "integer"
          },
          {
            "description": "edgeServer tags",
            "in": "query",
            "name": "edgeServer[tags]",
            "type": "string"
          },
          {
            "description": "edgeServer host name",
            "in": "query",
            "name": "edgeServer[hostName]",
            "type": "string"
          },
          {
            "description": "edgeServer playback hostName",
            "in": "query",
            "name": "edgeServer[playbackHostName]",
            "type": "string"
          },
          {
            "description": "Delivery profile ids comma seperated",
            "in": "query",
            "name": "edgeServer[deliveryProfileIds]",
            "type": "string"
          },
          {
            "description": "Id of the parent edge server",
            "in": "query",
            "name": "edgeServer[parentId]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEdgeServer"
            }
          }
        },
        "tags": [
          "edgeServer"
        ]
      }
    },
    "/service/emailingestionprofile/action/add": {
      "get": {
        "description": "EmailIngestionProfile Add action allows you to add a EmailIngestionProfile to Kaltura DB\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "EmailIP[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[description]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[emailAddress]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[mailboxId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[conversionProfile2Id]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              5,
              6
            ],
            "enumLabels": [
              "PENDING_MODERATION",
              "APPROVED",
              "REJECTED",
              "FLAGGED_FOR_REVIEW",
              "AUTO_APPROVED"
            ],
            "in": "query",
            "name": "EmailIP[moderationStatus]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "EmailIP[defaultCategory]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[defaultUserId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[defaultTags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[defaultAdminTags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[maxAttachmentSizeKbytes]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "EmailIP[maxAttachmentsPerMail]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEmailIngestionProfile"
            }
          }
        },
        "tags": [
          "EmailIngestionProfile"
        ]
      }
    },
    "/service/emailingestionprofile/action/addMediaEntry": {
      "get": {
        "description": "add KalturaMediaEntry from email ingestion\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaExternalMediaEntry",
              "KalturaLiveEntry"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The media type of the entry",
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "mediaEntry[mediaType]",
            "type": "integer"
          },
          {
            "description": "Override the default conversion quality",
            "in": "query",
            "name": "mediaEntry[conversionQuality]",
            "type": "string"
          },
          {
            "description": "The source type of the entry",
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "mediaEntry[sourceType]",
            "type": "string"
          },
          {
            "description": "The search provider type used to import this entry",
            "enum": [
              3,
              4,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              20,
              21,
              22,
              23,
              24,
              28,
              100
            ],
            "enumLabels": [
              "FLICKR",
              "YOUTUBE",
              "MYSPACE",
              "PHOTOBUCKET",
              "JAMENDO",
              "CCMIXTER",
              "NYPL",
              "CURRENT",
              "MEDIA_COMMONS",
              "KALTURA",
              "KALTURA_USER_CLIPS",
              "ARCHIVE_ORG",
              "KALTURA_PARTNER",
              "METACAFE",
              "SEARCH_PROXY",
              "PARTNER_SPECIFIC"
            ],
            "in": "query",
            "name": "mediaEntry[searchProviderType]",
            "type": "integer"
          },
          {
            "description": "The ID of the media in the importing site",
            "in": "query",
            "name": "mediaEntry[searchProviderId]",
            "type": "string"
          },
          {
            "description": "The user name used for credits",
            "in": "query",
            "name": "mediaEntry[creditUserName]",
            "type": "string"
          },
          {
            "description": "The URL for credits",
            "in": "query",
            "name": "mediaEntry[creditUrl]",
            "type": "string"
          },
          {
            "description": "The duration in miliseconds",
            "in": "query",
            "name": "mediaEntry[msDuration]",
            "type": "integer"
          },
          {
            "description": "The source type of the external media",
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "mediaEntry[externalSourceType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntry"
            },
            "type": "string"
          },
          {
            "description": "The message to be presented when the stream is offline",
            "in": "query",
            "name": "mediaEntry[offlineMessage]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Recording Status Enabled/Disabled",
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "DISABLED",
              "APPENDED",
              "PER_SESSION"
            ],
            "in": "query",
            "name": "mediaEntry[recordStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "DVR Status Enabled/Disabled",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[dvrStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Window of time which the DVR allows for backwards scrubbing (in minutes)",
            "in": "query",
            "name": "mediaEntry[dvrWindow]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Elapsed recording time (in msec) up to the point where the live stream was last stopped (unpublished).",
            "in": "query",
            "name": "mediaEntry[lastElapsedRecordingTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[liveStreamConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "Recorded entry id",
            "in": "query",
            "name": "mediaEntry[recordedEntryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Flag denoting whether entry should be published by the media server",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[pushPublishEnabled]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[publishConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "The time (unix timestamp in milliseconds) in which the entry broadcast started or 0 when the entry is off the air",
            "in": "query",
            "name": "mediaEntry[currentBroadcastStartTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "number"
          },
          {
            "in": "query",
            "name": "mediaEntry[recordingOptions]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            }
          },
          {
            "description": "Upload token id",
            "in": "query",
            "name": "uploadTokenId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "emailProfId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "fromAddress",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "emailMsgId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "EmailIngestionProfile"
        ]
      }
    },
    "/service/emailingestionprofile/action/delete": {
      "get": {
        "description": "Delete an existing EmailIngestionProfile\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "EmailIngestionProfile"
        ]
      }
    },
    "/service/emailingestionprofile/action/get": {
      "get": {
        "description": "Retrieve a EmailIngestionProfile by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEmailIngestionProfile"
            }
          }
        },
        "tags": [
          "EmailIngestionProfile"
        ]
      }
    },
    "/service/emailingestionprofile/action/getByEmailAddress": {
      "get": {
        "description": "Retrieve a EmailIngestionProfile by email address\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "emailAddress",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEmailIngestionProfile"
            }
          }
        },
        "tags": [
          "EmailIngestionProfile"
        ]
      }
    },
    "/service/emailingestionprofile/action/update": {
      "get": {
        "description": "Update an existing EmailIngestionProfile\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "EmailIP[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[description]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[emailAddress]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[mailboxId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[conversionProfile2Id]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              5,
              6
            ],
            "enumLabels": [
              "PENDING_MODERATION",
              "APPROVED",
              "REJECTED",
              "FLAGGED_FOR_REVIEW",
              "AUTO_APPROVED"
            ],
            "in": "query",
            "name": "EmailIP[moderationStatus]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "EmailIP[defaultCategory]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[defaultUserId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[defaultTags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[defaultAdminTags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "EmailIP[maxAttachmentSizeKbytes]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "EmailIP[maxAttachmentsPerMail]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEmailIngestionProfile"
            }
          }
        },
        "tags": [
          "EmailIngestionProfile"
        ]
      }
    },
    "/service/eventnotification_eventnotificationtemplate/action/add": {
      "get": {
        "description": "Allows you to add a new event notification template object\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaEmailNotificationTemplate",
              "KalturaHttpNotificationTemplate"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[description]",
            "type": "string"
          },
          {
            "description": "Define that the template could be dispatched manually from the API",
            "in": "query",
            "name": "eventNotificationTemplate[manualDispatchEnabled]",
            "type": "boolean"
          },
          {
            "description": "Define that the template could be dispatched automatically by the system",
            "in": "query",
            "name": "eventNotificationTemplate[automaticDispatchEnabled]",
            "type": "boolean"
          },
          {
            "description": "Define the event that should trigger this notification",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13"
            ],
            "enumLabels": [
              "BATCH_JOB_STATUS",
              "OBJECT_ADDED",
              "OBJECT_CHANGED",
              "OBJECT_COPIED",
              "OBJECT_CREATED",
              "OBJECT_DATA_CHANGED",
              "OBJECT_DELETED",
              "OBJECT_ERASED",
              "OBJECT_READY_FOR_REPLACMENT",
              "OBJECT_SAVED",
              "OBJECT_UPDATED",
              "OBJECT_REPLACED",
              "OBJECT_READY_FOR_INDEX"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[eventType]",
            "type": "string"
          },
          {
            "description": "Define the object that raied the event that should trigger this notification",
            "enum": [
              "adCuePointEventNotifications.AdCuePoint",
              "annotationEventNotifications.Annotation",
              "captionAssetEventNotifications.CaptionAsset",
              "codeCuePointEventNotifications.CodeCuePoint",
              "contentDistributionEventNotifications.DistributionProfile",
              "contentDistributionEventNotifications.EntryDistribution",
              "cuePointEventNotifications.CuePoint",
              "dropFolderEventNotifications.DropFolder",
              "dropFolderEventNotifications.DropFolderFile",
              "metadataEventNotifications.Metadata",
              "1",
              "2",
              "3",
              "4",
              "5",
              "8",
              "9",
              "10",
              "11",
              "12",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "28",
              "29",
              "31",
              "32",
              "33",
              "34",
              "35",
              "36",
              "37"
            ],
            "enumLabels": [
              "AD_CUE_POINT",
              "ANNOTATION",
              "CAPTION_ASSET",
              "CODE_CUE_POINT",
              "DISTRIBUTION_PROFILE",
              "ENTRY_DISTRIBUTION",
              "CUE_POINT",
              "DROP_FOLDER",
              "DROP_FOLDER_FILE",
              "METADATA",
              "ENTRY",
              "CATEGORY",
              "ASSET",
              "FLAVORASSET",
              "THUMBASSET",
              "KUSER",
              "ACCESSCONTROL",
              "BATCHJOB",
              "BULKUPLOADRESULT",
              "CATEGORYKUSER",
              "CONVERSIONPROFILE2",
              "FLAVORPARAMS",
              "FLAVORPARAMSCONVERSIONPROFILE",
              "FLAVORPARAMSOUTPUT",
              "GENERICSYNDICATIONFEED",
              "KUSERTOUSERROLE",
              "PARTNER",
              "PERMISSION",
              "PERMISSIONITEM",
              "PERMISSIONTOPERMISSIONITEM",
              "SCHEDULER",
              "SCHEDULERCONFIG",
              "SCHEDULERSTATUS",
              "SCHEDULERWORKER",
              "STORAGEPROFILE",
              "SYNDICATIONFEED",
              "THUMBPARAMS",
              "THUMBPARAMSOUTPUT",
              "UPLOADTOKEN",
              "USERLOGINDATA",
              "USERROLE",
              "WIDGET",
              "CATEGORYENTRY"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[eventObjectType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[eventConditions]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[contentParameters]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[userParameters]",
            "type": "array"
          },
          {
            "description": "Define the email body format",
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "HTML",
              "TEXT"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[format]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Define the email subject",
            "in": "query",
            "name": "eventNotificationTemplate[subject]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Define the email body content",
            "in": "query",
            "name": "eventNotificationTemplate[body]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Define the email sender email",
            "in": "query",
            "name": "eventNotificationTemplate[fromEmail]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Define the email sender name",
            "in": "query",
            "name": "eventNotificationTemplate[fromName]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[to]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            }
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[cc]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            }
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[bcc]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            }
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[replyTo]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            }
          },
          {
            "description": "Define the email priority",
            "enum": [
              1,
              3,
              5
            ],
            "enumLabels": [
              "HIGH",
              "NORMAL",
              "LOW"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[priority]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "description": "Email address that a reading confirmation will be sent",
            "in": "query",
            "name": "eventNotificationTemplate[confirmReadingTo]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Hostname to use in Message-Id and Received headers and as default HELLO string. \n\t If empty, the value returned by SERVER_NAME is used or 'localhost.localdomain'.",
            "in": "query",
            "name": "eventNotificationTemplate[hostname]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Sets the message ID to be used in the Message-Id header.\n\t If empty, a unique id will be generated.",
            "in": "query",
            "name": "eventNotificationTemplate[messageID]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[customHeaders]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "array"
          },
          {
            "description": "Remote server URL",
            "in": "query",
            "name": "eventNotificationTemplate[url]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Request method.",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "GET",
              "POST",
              "PUT",
              "DELETE"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[method]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[data]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            }
          },
          {
            "description": "The maximum number of seconds to allow cURL functions to execute.",
            "in": "query",
            "name": "eventNotificationTemplate[timeout]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "description": "The number of seconds to wait while trying to connect.\n\t Must be larger than zero.",
            "in": "query",
            "name": "eventNotificationTemplate[connectTimeout]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "description": "A username to use for the connection.",
            "in": "query",
            "name": "eventNotificationTemplate[username]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "A password to use for the connection.",
            "in": "query",
            "name": "eventNotificationTemplate[password]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The HTTP authentication method to use.",
            "enum": [
              -18,
              -17,
              1,
              2,
              4,
              8
            ],
            "enumLabels": [
              "ANYSAFE",
              "ANY",
              "BASIC",
              "DIGEST",
              "GSSNEGOTIATE",
              "NTLM"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[authenticationMethod]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "description": "The SSL version (2 or 3) to use.\n\t By default PHP will try to determine this itself, although in some cases this must be set manually.",
            "enum": [
              2,
              3
            ],
            "enumLabels": [
              "V2",
              "V3"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[sslVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "description": "SSL certificate to verify the peer with.",
            "in": "query",
            "name": "eventNotificationTemplate[sslCertificate]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The format of the certificate.",
            "enum": [
              "DER",
              "ENG",
              "PEM"
            ],
            "enumLabels": [
              "DER",
              "ENG",
              "PEM"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[sslCertificateType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The password required to use the certificate.",
            "in": "query",
            "name": "eventNotificationTemplate[sslCertificatePassword]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The identifier for the crypto engine of the private SSL key specified in ssl key.",
            "in": "query",
            "name": "eventNotificationTemplate[sslEngine]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The identifier for the crypto engine used for asymmetric crypto operations.",
            "in": "query",
            "name": "eventNotificationTemplate[sslEngineDefault]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The key type of the private SSL key specified in ssl key - PEM / DER / ENG.",
            "enum": [
              "DER",
              "ENG",
              "PEM"
            ],
            "enumLabels": [
              "DER",
              "ENG",
              "PEM"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[sslKeyType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Private SSL key.",
            "in": "query",
            "name": "eventNotificationTemplate[sslKey]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The secret password needed to use the private SSL key specified in ssl key.",
            "in": "query",
            "name": "eventNotificationTemplate[sslKeyPassword]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[customHeaders]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEventNotificationTemplate"
            }
          }
        },
        "tags": [
          "eventNotificationTemplate"
        ]
      }
    },
    "/service/eventnotification_eventnotificationtemplate/action/clone": {
      "get": {
        "description": "Allows you to clone exiting event notification template object and create a new one with similar configuration\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "source template to clone",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "KalturaEmailNotificationTemplate",
              "KalturaHttpNotificationTemplate"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[description]",
            "type": "string"
          },
          {
            "description": "Define that the template could be dispatched manually from the API",
            "in": "query",
            "name": "eventNotificationTemplate[manualDispatchEnabled]",
            "type": "boolean"
          },
          {
            "description": "Define that the template could be dispatched automatically by the system",
            "in": "query",
            "name": "eventNotificationTemplate[automaticDispatchEnabled]",
            "type": "boolean"
          },
          {
            "description": "Define the event that should trigger this notification",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13"
            ],
            "enumLabels": [
              "BATCH_JOB_STATUS",
              "OBJECT_ADDED",
              "OBJECT_CHANGED",
              "OBJECT_COPIED",
              "OBJECT_CREATED",
              "OBJECT_DATA_CHANGED",
              "OBJECT_DELETED",
              "OBJECT_ERASED",
              "OBJECT_READY_FOR_REPLACMENT",
              "OBJECT_SAVED",
              "OBJECT_UPDATED",
              "OBJECT_REPLACED",
              "OBJECT_READY_FOR_INDEX"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[eventType]",
            "type": "string"
          },
          {
            "description": "Define the object that raied the event that should trigger this notification",
            "enum": [
              "adCuePointEventNotifications.AdCuePoint",
              "annotationEventNotifications.Annotation",
              "captionAssetEventNotifications.CaptionAsset",
              "codeCuePointEventNotifications.CodeCuePoint",
              "contentDistributionEventNotifications.DistributionProfile",
              "contentDistributionEventNotifications.EntryDistribution",
              "cuePointEventNotifications.CuePoint",
              "dropFolderEventNotifications.DropFolder",
              "dropFolderEventNotifications.DropFolderFile",
              "metadataEventNotifications.Metadata",
              "1",
              "2",
              "3",
              "4",
              "5",
              "8",
              "9",
              "10",
              "11",
              "12",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "28",
              "29",
              "31",
              "32",
              "33",
              "34",
              "35",
              "36",
              "37"
            ],
            "enumLabels": [
              "AD_CUE_POINT",
              "ANNOTATION",
              "CAPTION_ASSET",
              "CODE_CUE_POINT",
              "DISTRIBUTION_PROFILE",
              "ENTRY_DISTRIBUTION",
              "CUE_POINT",
              "DROP_FOLDER",
              "DROP_FOLDER_FILE",
              "METADATA",
              "ENTRY",
              "CATEGORY",
              "ASSET",
              "FLAVORASSET",
              "THUMBASSET",
              "KUSER",
              "ACCESSCONTROL",
              "BATCHJOB",
              "BULKUPLOADRESULT",
              "CATEGORYKUSER",
              "CONVERSIONPROFILE2",
              "FLAVORPARAMS",
              "FLAVORPARAMSCONVERSIONPROFILE",
              "FLAVORPARAMSOUTPUT",
              "GENERICSYNDICATIONFEED",
              "KUSERTOUSERROLE",
              "PARTNER",
              "PERMISSION",
              "PERMISSIONITEM",
              "PERMISSIONTOPERMISSIONITEM",
              "SCHEDULER",
              "SCHEDULERCONFIG",
              "SCHEDULERSTATUS",
              "SCHEDULERWORKER",
              "STORAGEPROFILE",
              "SYNDICATIONFEED",
              "THUMBPARAMS",
              "THUMBPARAMSOUTPUT",
              "UPLOADTOKEN",
              "USERLOGINDATA",
              "USERROLE",
              "WIDGET",
              "CATEGORYENTRY"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[eventObjectType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[eventConditions]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[contentParameters]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[userParameters]",
            "type": "array"
          },
          {
            "description": "Define the email body format",
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "HTML",
              "TEXT"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[format]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Define the email subject",
            "in": "query",
            "name": "eventNotificationTemplate[subject]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Define the email body content",
            "in": "query",
            "name": "eventNotificationTemplate[body]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Define the email sender email",
            "in": "query",
            "name": "eventNotificationTemplate[fromEmail]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Define the email sender name",
            "in": "query",
            "name": "eventNotificationTemplate[fromName]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[to]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            }
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[cc]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            }
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[bcc]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            }
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[replyTo]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            }
          },
          {
            "description": "Define the email priority",
            "enum": [
              1,
              3,
              5
            ],
            "enumLabels": [
              "HIGH",
              "NORMAL",
              "LOW"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[priority]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "description": "Email address that a reading confirmation will be sent",
            "in": "query",
            "name": "eventNotificationTemplate[confirmReadingTo]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Hostname to use in Message-Id and Received headers and as default HELLO string. \n\t If empty, the value returned by SERVER_NAME is used or 'localhost.localdomain'.",
            "in": "query",
            "name": "eventNotificationTemplate[hostname]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Sets the message ID to be used in the Message-Id header.\n\t If empty, a unique id will be generated.",
            "in": "query",
            "name": "eventNotificationTemplate[messageID]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[customHeaders]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "array"
          },
          {
            "description": "Remote server URL",
            "in": "query",
            "name": "eventNotificationTemplate[url]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Request method.",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "GET",
              "POST",
              "PUT",
              "DELETE"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[method]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[data]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            }
          },
          {
            "description": "The maximum number of seconds to allow cURL functions to execute.",
            "in": "query",
            "name": "eventNotificationTemplate[timeout]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "description": "The number of seconds to wait while trying to connect.\n\t Must be larger than zero.",
            "in": "query",
            "name": "eventNotificationTemplate[connectTimeout]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "description": "A username to use for the connection.",
            "in": "query",
            "name": "eventNotificationTemplate[username]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "A password to use for the connection.",
            "in": "query",
            "name": "eventNotificationTemplate[password]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The HTTP authentication method to use.",
            "enum": [
              -18,
              -17,
              1,
              2,
              4,
              8
            ],
            "enumLabels": [
              "ANYSAFE",
              "ANY",
              "BASIC",
              "DIGEST",
              "GSSNEGOTIATE",
              "NTLM"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[authenticationMethod]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "description": "The SSL version (2 or 3) to use.\n\t By default PHP will try to determine this itself, although in some cases this must be set manually.",
            "enum": [
              2,
              3
            ],
            "enumLabels": [
              "V2",
              "V3"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[sslVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "description": "SSL certificate to verify the peer with.",
            "in": "query",
            "name": "eventNotificationTemplate[sslCertificate]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The format of the certificate.",
            "enum": [
              "DER",
              "ENG",
              "PEM"
            ],
            "enumLabels": [
              "DER",
              "ENG",
              "PEM"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[sslCertificateType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The password required to use the certificate.",
            "in": "query",
            "name": "eventNotificationTemplate[sslCertificatePassword]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The identifier for the crypto engine of the private SSL key specified in ssl key.",
            "in": "query",
            "name": "eventNotificationTemplate[sslEngine]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The identifier for the crypto engine used for asymmetric crypto operations.",
            "in": "query",
            "name": "eventNotificationTemplate[sslEngineDefault]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The key type of the private SSL key specified in ssl key - PEM / DER / ENG.",
            "enum": [
              "DER",
              "ENG",
              "PEM"
            ],
            "enumLabels": [
              "DER",
              "ENG",
              "PEM"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[sslKeyType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Private SSL key.",
            "in": "query",
            "name": "eventNotificationTemplate[sslKey]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The secret password needed to use the private SSL key specified in ssl key.",
            "in": "query",
            "name": "eventNotificationTemplate[sslKeyPassword]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[customHeaders]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEventNotificationTemplate"
            }
          }
        },
        "tags": [
          "eventNotificationTemplate"
        ]
      }
    },
    "/service/eventnotification_eventnotificationtemplate/action/delete": {
      "get": {
        "description": "Delete an event notification template object\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "eventNotificationTemplate"
        ]
      }
    },
    "/service/eventnotification_eventnotificationtemplate/action/dispatch": {
      "get": {
        "description": "Dispatch event notification object by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "scope[objectId]",
            "type": "string"
          },
          {
            "enum": [
              "adCuePointEventNotifications.AdCuePoint",
              "annotationEventNotifications.Annotation",
              "captionAssetEventNotifications.CaptionAsset",
              "codeCuePointEventNotifications.CodeCuePoint",
              "contentDistributionEventNotifications.DistributionProfile",
              "contentDistributionEventNotifications.EntryDistribution",
              "cuePointEventNotifications.CuePoint",
              "dropFolderEventNotifications.DropFolder",
              "dropFolderEventNotifications.DropFolderFile",
              "metadataEventNotifications.Metadata",
              "1",
              "2",
              "3",
              "4",
              "5",
              "8",
              "9",
              "10",
              "11",
              "12",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "28",
              "29",
              "31",
              "32",
              "33",
              "34",
              "35",
              "36",
              "37"
            ],
            "enumLabels": [
              "AD_CUE_POINT",
              "ANNOTATION",
              "CAPTION_ASSET",
              "CODE_CUE_POINT",
              "DISTRIBUTION_PROFILE",
              "ENTRY_DISTRIBUTION",
              "CUE_POINT",
              "DROP_FOLDER",
              "DROP_FOLDER_FILE",
              "METADATA",
              "ENTRY",
              "CATEGORY",
              "ASSET",
              "FLAVORASSET",
              "THUMBASSET",
              "KUSER",
              "ACCESSCONTROL",
              "BATCHJOB",
              "BULKUPLOADRESULT",
              "CATEGORYKUSER",
              "CONVERSIONPROFILE2",
              "FLAVORPARAMS",
              "FLAVORPARAMSCONVERSIONPROFILE",
              "FLAVORPARAMSOUTPUT",
              "GENERICSYNDICATIONFEED",
              "KUSERTOUSERROLE",
              "PARTNER",
              "PERMISSION",
              "PERMISSIONITEM",
              "PERMISSIONTOPERMISSIONITEM",
              "SCHEDULER",
              "SCHEDULERCONFIG",
              "SCHEDULERSTATUS",
              "SCHEDULERWORKER",
              "STORAGEPROFILE",
              "SYNDICATIONFEED",
              "THUMBPARAMS",
              "THUMBPARAMSOUTPUT",
              "UPLOADTOKEN",
              "USERLOGINDATA",
              "USERROLE",
              "WIDGET",
              "CATEGORYENTRY"
            ],
            "in": "query",
            "name": "scope[scopeObjectType]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "eventNotificationTemplate"
        ]
      }
    },
    "/service/eventnotification_eventnotificationtemplate/action/get": {
      "get": {
        "description": "Retrieve an event notification template object by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEventNotificationTemplate"
            }
          }
        },
        "tags": [
          "eventNotificationTemplate"
        ]
      }
    },
    "/service/eventnotification_eventnotificationtemplate/action/list": {
      "get": {
        "description": "list event notification template objects\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaEmailNotificationTemplateBaseFilter",
              "KalturaHttpNotificationTemplateBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "enum": [
              "emailNotification.Email",
              "httpNotification.Http"
            ],
            "enumLabels": [
              "EMAIL",
              "HTTP"
            ],
            "in": "query",
            "name": "filter[typeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[typeIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "ACTIVE",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEventNotificationTemplateListResponse"
            }
          }
        },
        "tags": [
          "eventNotificationTemplate"
        ]
      }
    },
    "/service/eventnotification_eventnotificationtemplate/action/listByPartner": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaSystemPartnerFilter",
              "KalturaVarConsolePartnerFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idNotIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameEqual]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "DELETED",
              "ACTIVE",
              "BLOCKED",
              "FULL_BLOCK"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerPackageEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerPackageGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerPackageLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "filter[partnerGroupTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerNameDescriptionWebsiteAdminNameAdminEmailLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerParentIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerParentIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Eq filter for the partner's group type",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "filter[groupTypeEq]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "integer"
          },
          {
            "description": "In filter for the partner's group type",
            "in": "query",
            "name": "filter[groupTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Filter for partner permissions- filter contains comma-separated string of permission names which the returned partners should have.",
            "in": "query",
            "name": "filter[partnerPermissionsExist]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEventNotificationTemplateListResponse"
            }
          }
        },
        "tags": [
          "eventNotificationTemplate"
        ]
      }
    },
    "/service/eventnotification_eventnotificationtemplate/action/listTemplates": {
      "get": {
        "description": "Action lists the template partner event notification templates.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaEmailNotificationTemplateBaseFilter",
              "KalturaHttpNotificationTemplateBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "enum": [
              "emailNotification.Email",
              "httpNotification.Http"
            ],
            "enumLabels": [
              "EMAIL",
              "HTTP"
            ],
            "in": "query",
            "name": "filter[typeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[typeIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "ACTIVE",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEventNotificationTemplateListResponse"
            }
          }
        },
        "tags": [
          "eventNotificationTemplate"
        ]
      }
    },
    "/service/eventnotification_eventnotificationtemplate/action/update": {
      "get": {
        "description": "Update an existing event notification template object\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "KalturaEmailNotificationTemplate",
              "KalturaHttpNotificationTemplate"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[description]",
            "type": "string"
          },
          {
            "description": "Define that the template could be dispatched manually from the API",
            "in": "query",
            "name": "eventNotificationTemplate[manualDispatchEnabled]",
            "type": "boolean"
          },
          {
            "description": "Define that the template could be dispatched automatically by the system",
            "in": "query",
            "name": "eventNotificationTemplate[automaticDispatchEnabled]",
            "type": "boolean"
          },
          {
            "description": "Define the event that should trigger this notification",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13"
            ],
            "enumLabels": [
              "BATCH_JOB_STATUS",
              "OBJECT_ADDED",
              "OBJECT_CHANGED",
              "OBJECT_COPIED",
              "OBJECT_CREATED",
              "OBJECT_DATA_CHANGED",
              "OBJECT_DELETED",
              "OBJECT_ERASED",
              "OBJECT_READY_FOR_REPLACMENT",
              "OBJECT_SAVED",
              "OBJECT_UPDATED",
              "OBJECT_REPLACED",
              "OBJECT_READY_FOR_INDEX"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[eventType]",
            "type": "string"
          },
          {
            "description": "Define the object that raied the event that should trigger this notification",
            "enum": [
              "adCuePointEventNotifications.AdCuePoint",
              "annotationEventNotifications.Annotation",
              "captionAssetEventNotifications.CaptionAsset",
              "codeCuePointEventNotifications.CodeCuePoint",
              "contentDistributionEventNotifications.DistributionProfile",
              "contentDistributionEventNotifications.EntryDistribution",
              "cuePointEventNotifications.CuePoint",
              "dropFolderEventNotifications.DropFolder",
              "dropFolderEventNotifications.DropFolderFile",
              "metadataEventNotifications.Metadata",
              "1",
              "2",
              "3",
              "4",
              "5",
              "8",
              "9",
              "10",
              "11",
              "12",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "28",
              "29",
              "31",
              "32",
              "33",
              "34",
              "35",
              "36",
              "37"
            ],
            "enumLabels": [
              "AD_CUE_POINT",
              "ANNOTATION",
              "CAPTION_ASSET",
              "CODE_CUE_POINT",
              "DISTRIBUTION_PROFILE",
              "ENTRY_DISTRIBUTION",
              "CUE_POINT",
              "DROP_FOLDER",
              "DROP_FOLDER_FILE",
              "METADATA",
              "ENTRY",
              "CATEGORY",
              "ASSET",
              "FLAVORASSET",
              "THUMBASSET",
              "KUSER",
              "ACCESSCONTROL",
              "BATCHJOB",
              "BULKUPLOADRESULT",
              "CATEGORYKUSER",
              "CONVERSIONPROFILE2",
              "FLAVORPARAMS",
              "FLAVORPARAMSCONVERSIONPROFILE",
              "FLAVORPARAMSOUTPUT",
              "GENERICSYNDICATIONFEED",
              "KUSERTOUSERROLE",
              "PARTNER",
              "PERMISSION",
              "PERMISSIONITEM",
              "PERMISSIONTOPERMISSIONITEM",
              "SCHEDULER",
              "SCHEDULERCONFIG",
              "SCHEDULERSTATUS",
              "SCHEDULERWORKER",
              "STORAGEPROFILE",
              "SYNDICATIONFEED",
              "THUMBPARAMS",
              "THUMBPARAMSOUTPUT",
              "UPLOADTOKEN",
              "USERLOGINDATA",
              "USERROLE",
              "WIDGET",
              "CATEGORYENTRY"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[eventObjectType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[eventConditions]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[contentParameters]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[userParameters]",
            "type": "array"
          },
          {
            "description": "Define the email body format",
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "HTML",
              "TEXT"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[format]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Define the email subject",
            "in": "query",
            "name": "eventNotificationTemplate[subject]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Define the email body content",
            "in": "query",
            "name": "eventNotificationTemplate[body]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Define the email sender email",
            "in": "query",
            "name": "eventNotificationTemplate[fromEmail]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Define the email sender name",
            "in": "query",
            "name": "eventNotificationTemplate[fromName]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[to]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            }
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[cc]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            }
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[bcc]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            }
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[replyTo]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            }
          },
          {
            "description": "Define the email priority",
            "enum": [
              1,
              3,
              5
            ],
            "enumLabels": [
              "HIGH",
              "NORMAL",
              "LOW"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[priority]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "description": "Email address that a reading confirmation will be sent",
            "in": "query",
            "name": "eventNotificationTemplate[confirmReadingTo]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Hostname to use in Message-Id and Received headers and as default HELLO string. \n\t If empty, the value returned by SERVER_NAME is used or 'localhost.localdomain'.",
            "in": "query",
            "name": "eventNotificationTemplate[hostname]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Sets the message ID to be used in the Message-Id header.\n\t If empty, a unique id will be generated.",
            "in": "query",
            "name": "eventNotificationTemplate[messageID]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[customHeaders]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEmailNotificationTemplate"
            },
            "type": "array"
          },
          {
            "description": "Remote server URL",
            "in": "query",
            "name": "eventNotificationTemplate[url]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Request method.",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "GET",
              "POST",
              "PUT",
              "DELETE"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[method]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[data]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            }
          },
          {
            "description": "The maximum number of seconds to allow cURL functions to execute.",
            "in": "query",
            "name": "eventNotificationTemplate[timeout]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "description": "The number of seconds to wait while trying to connect.\n\t Must be larger than zero.",
            "in": "query",
            "name": "eventNotificationTemplate[connectTimeout]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "description": "A username to use for the connection.",
            "in": "query",
            "name": "eventNotificationTemplate[username]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "A password to use for the connection.",
            "in": "query",
            "name": "eventNotificationTemplate[password]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The HTTP authentication method to use.",
            "enum": [
              -18,
              -17,
              1,
              2,
              4,
              8
            ],
            "enumLabels": [
              "ANYSAFE",
              "ANY",
              "BASIC",
              "DIGEST",
              "GSSNEGOTIATE",
              "NTLM"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[authenticationMethod]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "description": "The SSL version (2 or 3) to use.\n\t By default PHP will try to determine this itself, although in some cases this must be set manually.",
            "enum": [
              2,
              3
            ],
            "enumLabels": [
              "V2",
              "V3"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[sslVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "integer"
          },
          {
            "description": "SSL certificate to verify the peer with.",
            "in": "query",
            "name": "eventNotificationTemplate[sslCertificate]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The format of the certificate.",
            "enum": [
              "DER",
              "ENG",
              "PEM"
            ],
            "enumLabels": [
              "DER",
              "ENG",
              "PEM"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[sslCertificateType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The password required to use the certificate.",
            "in": "query",
            "name": "eventNotificationTemplate[sslCertificatePassword]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The identifier for the crypto engine of the private SSL key specified in ssl key.",
            "in": "query",
            "name": "eventNotificationTemplate[sslEngine]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The identifier for the crypto engine used for asymmetric crypto operations.",
            "in": "query",
            "name": "eventNotificationTemplate[sslEngineDefault]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The key type of the private SSL key specified in ssl key - PEM / DER / ENG.",
            "enum": [
              "DER",
              "ENG",
              "PEM"
            ],
            "enumLabels": [
              "DER",
              "ENG",
              "PEM"
            ],
            "in": "query",
            "name": "eventNotificationTemplate[sslKeyType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "Private SSL key.",
            "in": "query",
            "name": "eventNotificationTemplate[sslKey]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "description": "The secret password needed to use the private SSL key specified in ssl key.",
            "in": "query",
            "name": "eventNotificationTemplate[sslKeyPassword]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventNotificationTemplate[customHeaders]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaHttpNotificationTemplate"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEventNotificationTemplate"
            }
          }
        },
        "tags": [
          "eventNotificationTemplate"
        ]
      }
    },
    "/service/eventnotification_eventnotificationtemplate/action/updateStatus": {
      "get": {
        "description": "Update event notification template status by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "DISABLED",
              "ACTIVE",
              "DELETED"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEventNotificationTemplate"
            }
          }
        },
        "tags": [
          "eventNotificationTemplate"
        ]
      }
    },
    "/service/externalmedia_externalmedia/action/add": {
      "get": {
        "description": "Add external media entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The source type of the external media",
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "entry[externalSourceType]",
            "type": "string"
          },
          {
            "description": "The media type of the entry",
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "entry[mediaType]",
            "type": "integer"
          },
          {
            "description": "Override the default conversion quality",
            "in": "query",
            "name": "entry[conversionQuality]",
            "type": "string"
          },
          {
            "description": "The source type of the entry",
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "entry[sourceType]",
            "type": "string"
          },
          {
            "description": "The search provider type used to import this entry",
            "enum": [
              3,
              4,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              20,
              21,
              22,
              23,
              24,
              28,
              100
            ],
            "enumLabels": [
              "FLICKR",
              "YOUTUBE",
              "MYSPACE",
              "PHOTOBUCKET",
              "JAMENDO",
              "CCMIXTER",
              "NYPL",
              "CURRENT",
              "MEDIA_COMMONS",
              "KALTURA",
              "KALTURA_USER_CLIPS",
              "ARCHIVE_ORG",
              "KALTURA_PARTNER",
              "METACAFE",
              "SEARCH_PROXY",
              "PARTNER_SPECIFIC"
            ],
            "in": "query",
            "name": "entry[searchProviderType]",
            "type": "integer"
          },
          {
            "description": "The ID of the media in the importing site",
            "in": "query",
            "name": "entry[searchProviderId]",
            "type": "string"
          },
          {
            "description": "The user name used for credits",
            "in": "query",
            "name": "entry[creditUserName]",
            "type": "string"
          },
          {
            "description": "The URL for credits",
            "in": "query",
            "name": "entry[creditUrl]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExternalMediaEntry"
            }
          }
        },
        "tags": [
          "externalMedia"
        ]
      }
    },
    "/service/externalmedia_externalmedia/action/count": {
      "get": {
        "description": "Count media entries by filter.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "filter[externalSourceTypeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[externalSourceTypeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchAnd]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "externalMedia"
        ]
      }
    },
    "/service/externalmedia_externalmedia/action/delete": {
      "get": {
        "description": "Delete a external media entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "External media entry id to delete",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "externalMedia"
        ]
      }
    },
    "/service/externalmedia_externalmedia/action/get": {
      "get": {
        "description": "Get external media entry by ID.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "External media entry id",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExternalMediaEntry"
            }
          }
        },
        "tags": [
          "externalMedia"
        ]
      }
    },
    "/service/externalmedia_externalmedia/action/list": {
      "get": {
        "description": "List media entries by filter with paging support.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "filter[externalSourceTypeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[externalSourceTypeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchAnd]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExternalMediaEntryListResponse"
            }
          }
        },
        "tags": [
          "externalMedia"
        ]
      }
    },
    "/service/externalmedia_externalmedia/action/update": {
      "get": {
        "description": "Update external media entry. Only the properties that were set will be updated.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "External media entry id to update",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "The source type of the external media",
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "entry[externalSourceType]",
            "type": "string"
          },
          {
            "description": "The media type of the entry",
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "entry[mediaType]",
            "type": "integer"
          },
          {
            "description": "Override the default conversion quality",
            "in": "query",
            "name": "entry[conversionQuality]",
            "type": "string"
          },
          {
            "description": "The source type of the entry",
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "entry[sourceType]",
            "type": "string"
          },
          {
            "description": "The search provider type used to import this entry",
            "enum": [
              3,
              4,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              20,
              21,
              22,
              23,
              24,
              28,
              100
            ],
            "enumLabels": [
              "FLICKR",
              "YOUTUBE",
              "MYSPACE",
              "PHOTOBUCKET",
              "JAMENDO",
              "CCMIXTER",
              "NYPL",
              "CURRENT",
              "MEDIA_COMMONS",
              "KALTURA",
              "KALTURA_USER_CLIPS",
              "ARCHIVE_ORG",
              "KALTURA_PARTNER",
              "METACAFE",
              "SEARCH_PROXY",
              "PARTNER_SPECIFIC"
            ],
            "in": "query",
            "name": "entry[searchProviderType]",
            "type": "integer"
          },
          {
            "description": "The ID of the media in the importing site",
            "in": "query",
            "name": "entry[searchProviderId]",
            "type": "string"
          },
          {
            "description": "The user name used for credits",
            "in": "query",
            "name": "entry[creditUserName]",
            "type": "string"
          },
          {
            "description": "The URL for credits",
            "in": "query",
            "name": "entry[creditUrl]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExternalMediaEntry"
            }
          }
        },
        "tags": [
          "externalMedia"
        ]
      }
    },
    "/service/fileasset/action/add": {
      "get": {
        "description": "Add new file asset\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "2"
            ],
            "enumLabels": [
              "UI_CONF"
            ],
            "in": "query",
            "name": "fileAsset[fileAssetObjectType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "fileAsset[objectId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "fileAsset[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "fileAsset[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "fileAsset[fileExt]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFileAsset"
            }
          }
        },
        "tags": [
          "fileAsset"
        ]
      }
    },
    "/service/fileasset/action/delete": {
      "get": {
        "description": "Delete file asset by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "fileAsset"
        ]
      }
    },
    "/service/fileasset/action/get": {
      "get": {
        "description": "Get file asset by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFileAsset"
            }
          }
        },
        "tags": [
          "fileAsset"
        ]
      }
    },
    "/service/fileasset/action/list": {
      "get": {
        "description": "List file assets by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "enum": [
              "2"
            ],
            "enumLabels": [
              "UI_CONF"
            ],
            "in": "query",
            "name": "filter[fileAssetObjectTypeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[objectIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[objectIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "enumLabels": [
              "PENDING",
              "UPLOADING",
              "READY",
              "DELETED",
              "ERROR"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFileAssetListResponse"
            }
          }
        },
        "tags": [
          "fileAsset"
        ]
      }
    },
    "/service/fileasset/action/serve": {
      "get": {
        "description": "Serve file asset by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "fileAsset"
        ]
      }
    },
    "/service/fileasset/action/setContent": {
      "get": {
        "description": "Set content of file asset\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaUrlResource",
              "KalturaDataCenterContentResource",
              "KalturaAssetResource",
              "KalturaEntryResource",
              "KalturaFileSyncResource",
              "KalturaOperationResource",
              "KalturaRemoteStorageResources",
              "KalturaStringResource"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Remote URL, FTP, HTTP or HTTPS",
            "in": "query",
            "name": "contentResource[url]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaUrlResource"
            },
            "type": "string"
          },
          {
            "description": "Force Import Job",
            "in": "query",
            "name": "contentResource[forceAsyncDownload]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaUrlResource"
            },
            "type": "boolean"
          },
          {
            "description": "ID of the source asset",
            "in": "query",
            "name": "contentResource[assetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetResource"
            },
            "type": "string"
          },
          {
            "description": "ID of the source entry",
            "in": "query",
            "name": "contentResource[entryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEntryResource"
            },
            "type": "string"
          },
          {
            "description": "ID of the source flavor params, set to null to use the source flavor",
            "in": "query",
            "name": "contentResource[flavorParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEntryResource"
            },
            "type": "integer"
          },
          {
            "description": "The object type of the file sync object",
            "in": "query",
            "name": "contentResource[fileSyncObjectType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "integer"
          },
          {
            "description": "The object sub-type of the file sync object",
            "in": "query",
            "name": "contentResource[objectSubType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "integer"
          },
          {
            "description": "The object id of the file sync object",
            "in": "query",
            "name": "contentResource[objectId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "string"
          },
          {
            "description": "The version of the file sync object",
            "in": "query",
            "name": "contentResource[version]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "contentResource[resource]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaOperationResource"
            }
          },
          {
            "in": "query",
            "name": "contentResource[operationAttributes]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaOperationResource"
            },
            "type": "array"
          },
          {
            "description": "ID of alternative asset params to be used instead of the system default flavor params",
            "in": "query",
            "name": "contentResource[assetParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaOperationResource"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "contentResource[resources]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaRemoteStorageResources"
            },
            "type": "array"
          },
          {
            "description": "Textual content",
            "in": "query",
            "name": "contentResource[content]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaStringResource"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFileAsset"
            }
          }
        },
        "tags": [
          "fileAsset"
        ]
      }
    },
    "/service/fileasset/action/update": {
      "get": {
        "description": "Update file asset by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "2"
            ],
            "enumLabels": [
              "UI_CONF"
            ],
            "in": "query",
            "name": "fileAsset[fileAssetObjectType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "fileAsset[objectId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "fileAsset[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "fileAsset[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "fileAsset[fileExt]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFileAsset"
            }
          }
        },
        "tags": [
          "fileAsset"
        ]
      }
    },
    "/service/flavorasset/action/add": {
      "get": {
        "description": "Add flavor asset\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaLiveAsset"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The Flavor Params used to create this Flavor Asset",
            "in": "query",
            "name": "flavorAsset[flavorParamsId]",
            "type": "integer"
          },
          {
            "description": "Tags used to identify the Flavor Asset in various scenarios",
            "in": "query",
            "name": "flavorAsset[tags]",
            "type": "string"
          },
          {
            "description": "The file extension",
            "in": "query",
            "name": "flavorAsset[fileExt]",
            "type": "string"
          },
          {
            "description": "Partner private data",
            "in": "query",
            "name": "flavorAsset[partnerData]",
            "type": "string"
          },
          {
            "description": "Partner friendly description",
            "in": "query",
            "name": "flavorAsset[partnerDescription]",
            "type": "string"
          },
          {
            "description": "Comma separated list of source flavor params ids",
            "in": "query",
            "name": "flavorAsset[actualSourceAssetParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorAsset[multicastIP]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveAsset"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorAsset[multicastPort]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveAsset"
            },
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFlavorAsset"
            }
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/convert": {
      "get": {
        "description": "Add and convert new Flavor Asset for Entry with specific Flavor Params\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "flavorParamsId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "priority",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/delete": {
      "get": {
        "description": "Delete Flavor Asset by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/deleteLocalContent": {
      "get": {
        "description": "delete all local file syncs for this asset\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "assetId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/export": {
      "get": {
        "description": "manually export an asset\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "assetId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "storageProfileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFlavorAsset"
            }
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/get": {
      "get": {
        "description": "Get Flavor Asset by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFlavorAsset"
            }
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/getByEntryId": {
      "get": {
        "description": "Get Flavor Assets for Entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/getDownloadUrl": {
      "get": {
        "description": "Get download URL for the Flavor Asset\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "useCdn",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/getFlavorAssetsWithParams": {
      "get": {
        "description": "Get Flavor Asset with the relevant Flavor Params (Flavor Params can exist without Flavor Asset & vice versa)\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/getRemotePaths": {
      "get": {
        "description": "Get remote storage existing paths for the asset\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRemotePathListResponse"
            }
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/getUrl": {
      "get": {
        "description": "Get download URL for the asset\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "storageId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "forceProxy",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The name of the downloaded file",
            "in": "query",
            "name": "options[fileName]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/getWebPlayableByEntryId": {
      "get": {
        "description": "Get web playable Flavor Assets for Entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/list": {
      "get": {
        "description": "List Flavor Assets by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAttachmentAssetBaseFilter",
              "KalturaCaptionAssetBaseFilter",
              "KalturaFlavorAssetBaseFilter",
              "KalturaThumbAssetBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[sizeGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[sizeLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[tagsLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[deletedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[deletedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "TEXT",
              "MEDIA",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "filter[formatEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[formatIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              2,
              3,
              7,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "READY",
              "DELETED",
              "IMPORTING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[captionParamsIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[captionParamsIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "SRT",
              "DFXP",
              "WEBVTT"
            ],
            "in": "query",
            "name": "filter[formatEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[formatIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              2,
              3,
              7,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "READY",
              "DELETED",
              "IMPORTING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "CONVERTING",
              "READY",
              "DELETED",
              "NOT_APPLICABLE",
              "TEMP",
              "WAIT_FOR_CONVERT",
              "IMPORTING",
              "VALIDATING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[thumbParamsIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[thumbParamsIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              7,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "CAPTURING",
              "READY",
              "DELETED",
              "IMPORTING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFlavorAssetListResponse"
            }
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/reconvert": {
      "get": {
        "description": "Reconvert Flavor Asset by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Flavor Asset ID",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/setAsSource": {
      "get": {
        "description": "Set a given flavor as the original flavor\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "assetId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/setContent": {
      "get": {
        "description": "Update content of flavor asset\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaUrlResource",
              "KalturaDataCenterContentResource",
              "KalturaAssetResource",
              "KalturaEntryResource",
              "KalturaFileSyncResource",
              "KalturaOperationResource",
              "KalturaRemoteStorageResources",
              "KalturaStringResource"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Remote URL, FTP, HTTP or HTTPS",
            "in": "query",
            "name": "contentResource[url]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaUrlResource"
            },
            "type": "string"
          },
          {
            "description": "Force Import Job",
            "in": "query",
            "name": "contentResource[forceAsyncDownload]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaUrlResource"
            },
            "type": "boolean"
          },
          {
            "description": "ID of the source asset",
            "in": "query",
            "name": "contentResource[assetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetResource"
            },
            "type": "string"
          },
          {
            "description": "ID of the source entry",
            "in": "query",
            "name": "contentResource[entryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEntryResource"
            },
            "type": "string"
          },
          {
            "description": "ID of the source flavor params, set to null to use the source flavor",
            "in": "query",
            "name": "contentResource[flavorParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEntryResource"
            },
            "type": "integer"
          },
          {
            "description": "The object type of the file sync object",
            "in": "query",
            "name": "contentResource[fileSyncObjectType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "integer"
          },
          {
            "description": "The object sub-type of the file sync object",
            "in": "query",
            "name": "contentResource[objectSubType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "integer"
          },
          {
            "description": "The object id of the file sync object",
            "in": "query",
            "name": "contentResource[objectId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "string"
          },
          {
            "description": "The version of the file sync object",
            "in": "query",
            "name": "contentResource[version]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "contentResource[resource]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaOperationResource"
            }
          },
          {
            "in": "query",
            "name": "contentResource[operationAttributes]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaOperationResource"
            },
            "type": "array"
          },
          {
            "description": "ID of alternative asset params to be used instead of the system default flavor params",
            "in": "query",
            "name": "contentResource[assetParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaOperationResource"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "contentResource[resources]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaRemoteStorageResources"
            },
            "type": "array"
          },
          {
            "description": "Textual content",
            "in": "query",
            "name": "contentResource[content]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaStringResource"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFlavorAsset"
            }
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorasset/action/update": {
      "get": {
        "description": "Update flavor asset\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaLiveAsset"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The Flavor Params used to create this Flavor Asset",
            "in": "query",
            "name": "flavorAsset[flavorParamsId]",
            "type": "integer"
          },
          {
            "description": "Tags used to identify the Flavor Asset in various scenarios",
            "in": "query",
            "name": "flavorAsset[tags]",
            "type": "string"
          },
          {
            "description": "The file extension",
            "in": "query",
            "name": "flavorAsset[fileExt]",
            "type": "string"
          },
          {
            "description": "Partner private data",
            "in": "query",
            "name": "flavorAsset[partnerData]",
            "type": "string"
          },
          {
            "description": "Partner friendly description",
            "in": "query",
            "name": "flavorAsset[partnerDescription]",
            "type": "string"
          },
          {
            "description": "Comma separated list of source flavor params ids",
            "in": "query",
            "name": "flavorAsset[actualSourceAssetParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorAsset[multicastIP]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveAsset"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorAsset[multicastPort]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveAsset"
            },
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFlavorAsset"
            }
          }
        },
        "tags": [
          "flavorAsset"
        ]
      }
    },
    "/service/flavorparams/action/add": {
      "get": {
        "description": "Add new Flavor Params\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaFlavorParamsOutput",
              "KalturaDocumentFlavorParams",
              "KalturaImageFlavorParams",
              "KalturaLiveParams",
              "KalturaMediaFlavorParams",
              "KalturaPdfFlavorParams",
              "KalturaSwfFlavorParams"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The video codec of the Flavor Params",
            "enum": [
              "",
              "apch",
              "apcn",
              "apco",
              "apcs",
              "copy",
              "dnxhd",
              "dv",
              "flv",
              "h263",
              "h264",
              "h264b",
              "h264h",
              "h264m",
              "h265",
              "mpeg2",
              "mpeg4",
              "theora",
              "vp6",
              "vp8",
              "vp9",
              "wmv2",
              "wmv3",
              "wvc1a"
            ],
            "enumLabels": [
              "NONE",
              "APCH",
              "APCN",
              "APCO",
              "APCS",
              "COPY",
              "DNXHD",
              "DV",
              "FLV",
              "H263",
              "H264",
              "H264B",
              "H264H",
              "H264M",
              "H265",
              "MPEG2",
              "MPEG4",
              "THEORA",
              "VP6",
              "VP8",
              "VP9",
              "WMV2",
              "WMV3",
              "WVC1A"
            ],
            "in": "query",
            "name": "flavorParams[videoCodec]",
            "type": "string"
          },
          {
            "description": "The video bitrate (in KBits) of the Flavor Params",
            "in": "query",
            "name": "flavorParams[videoBitrate]",
            "type": "integer"
          },
          {
            "description": "The audio codec of the Flavor Params",
            "enum": [
              "",
              "aac",
              "aache",
              "ac3",
              "amrnb",
              "copy",
              "mp3",
              "mpeg2",
              "pcm",
              "vorbis",
              "wma",
              "wmapro"
            ],
            "enumLabels": [
              "NONE",
              "AAC",
              "AACHE",
              "AC3",
              "AMRNB",
              "COPY",
              "MP3",
              "MPEG2",
              "PCM",
              "VORBIS",
              "WMA",
              "WMAPRO"
            ],
            "in": "query",
            "name": "flavorParams[audioCodec]",
            "type": "string"
          },
          {
            "description": "The audio bitrate (in KBits) of the Flavor Params",
            "in": "query",
            "name": "flavorParams[audioBitrate]",
            "type": "integer"
          },
          {
            "description": "The number of audio channels for \"downmixing\"",
            "in": "query",
            "name": "flavorParams[audioChannels]",
            "type": "integer"
          },
          {
            "description": "The audio sample rate of the Flavor Params",
            "in": "query",
            "name": "flavorParams[audioSampleRate]",
            "type": "integer"
          },
          {
            "description": "The desired width of the Flavor Params",
            "in": "query",
            "name": "flavorParams[width]",
            "type": "integer"
          },
          {
            "description": "The desired height of the Flavor Params",
            "in": "query",
            "name": "flavorParams[height]",
            "type": "integer"
          },
          {
            "description": "The frame rate of the Flavor Params",
            "in": "query",
            "name": "flavorParams[frameRate]",
            "type": "integer"
          },
          {
            "description": "The gop size of the Flavor Params",
            "in": "query",
            "name": "flavorParams[gopSize]",
            "type": "integer"
          },
          {
            "description": "The list of conversion engines (comma separated)",
            "in": "query",
            "name": "flavorParams[conversionEngines]",
            "type": "string"
          },
          {
            "description": "The list of conversion engines extra params (separated with \"|\")",
            "in": "query",
            "name": "flavorParams[conversionEnginesExtraParams]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[twoPass]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "flavorParams[deinterlice]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[rotate]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[operators]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[engineVersion]",
            "type": "integer"
          },
          {
            "description": "The container format of the Flavor Params",
            "enum": [
              "3gp",
              "applehttp",
              "avi",
              "bmp",
              "copy",
              "flv",
              "hls",
              "isma",
              "ismv",
              "jpg",
              "m2ts",
              "m4v",
              "mkv",
              "mov",
              "mp3",
              "mp4",
              "mpeg",
              "mpegts",
              "mxf",
              "ogg",
              "ogv",
              "pdf",
              "png",
              "swf",
              "wav",
              "webm",
              "wma",
              "wmv",
              "wvm"
            ],
            "enumLabels": [
              "_3GP",
              "APPLEHTTP",
              "AVI",
              "BMP",
              "COPY",
              "FLV",
              "HLS",
              "ISMA",
              "ISMV",
              "JPG",
              "M2TS",
              "M4V",
              "MKV",
              "MOV",
              "MP3",
              "MP4",
              "MPEG",
              "MPEGTS",
              "MXF",
              "OGG",
              "OGV",
              "PDF",
              "PNG",
              "SWF",
              "WAV",
              "WEBM",
              "WMA",
              "WMV",
              "WVM"
            ],
            "in": "query",
            "name": "flavorParams[format]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[aspectRatioProcessingMode]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[forceFrameToMultiplication16]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[isGopInSec]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[isAvoidVideoShrinkFramesizeToSource]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[isAvoidVideoShrinkBitrateToSource]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[isVideoFrameRateForLowBrAppleHls]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[multiStream]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[anamorphicPixels]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "flavorParams[isAvoidForcedKeyFrames]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[isCropIMX]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[optimizationPolicy]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[maxFrameRate]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[videoConstantBitrate]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[videoBitrateTolerance]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[watermarkData]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[clipOffset]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[clipDuration]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[partnerId]",
            "type": "integer"
          },
          {
            "description": "The name of the Flavor Params",
            "in": "query",
            "name": "flavorParams[name]",
            "type": "string"
          },
          {
            "description": "System name of the Flavor Params",
            "in": "query",
            "name": "flavorParams[systemName]",
            "type": "string"
          },
          {
            "description": "The description of the Flavor Params",
            "in": "query",
            "name": "flavorParams[description]",
            "type": "string"
          },
          {
            "description": "The Flavor Params tags are used to identify the flavor for different usage (e.g. web, hd, mobile)",
            "in": "query",
            "name": "flavorParams[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[requiredPermissions]",
            "type": "array"
          },
          {
            "description": "Id of remote storage profile that used to get the source, zero indicates Kaltura data center",
            "in": "query",
            "name": "flavorParams[sourceRemoteStorageProfileId]",
            "type": "integer"
          },
          {
            "description": "Comma seperated ids of remote storage profiles that the flavor distributed to, the distribution done by the conversion engine",
            "in": "query",
            "name": "flavorParams[remoteStorageProfileIds]",
            "type": "integer"
          },
          {
            "description": "Media parser type to be used for post-conversion validation",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "MEDIAINFO",
              "FFMPEG"
            ],
            "in": "query",
            "name": "flavorParams[mediaParserType]",
            "type": "string"
          },
          {
            "description": "Comma seperated ids of source flavor params this flavor is created from",
            "in": "query",
            "name": "flavorParams[sourceAssetParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[flavorParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutput"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[commandLinesStr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[flavorParamsVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[flavorAssetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[flavorAssetVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[readyBehavior]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutput"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[densityWidth]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaImageFlavorParams"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[densityHeight]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaImageFlavorParams"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[sizeWidth]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaImageFlavorParams"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[sizeHeight]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaImageFlavorParams"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[depth]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaImageFlavorParams"
            },
            "type": "integer"
          },
          {
            "description": "Suffix to be added to the stream name after the entry id {entry_id}_{stream_suffix}, e.g. for entry id 0_kjdu5jr6 and suffix 1, the stream name will be 0_kjdu5jr6_1",
            "in": "query",
            "name": "flavorParams[streamSuffix]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveParams"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[readonly]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPdfFlavorParams"
            },
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "flavorParams[flashVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSwfFlavorParams"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[poly2Bitmap]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSwfFlavorParams"
            },
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFlavorParams"
            }
          }
        },
        "tags": [
          "flavorParams"
        ]
      }
    },
    "/service/flavorparams/action/delete": {
      "get": {
        "description": "Delete Flavor Params by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "flavorParams"
        ]
      }
    },
    "/service/flavorparams/action/get": {
      "get": {
        "description": "Get Flavor Params by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFlavorParams"
            }
          }
        },
        "tags": [
          "flavorParams"
        ]
      }
    },
    "/service/flavorparams/action/getByConversionProfileId": {
      "get": {
        "description": "Get Flavor Params by Conversion Profile ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "conversionProfileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "flavorParams"
        ]
      }
    },
    "/service/flavorparams/action/list": {
      "get": {
        "description": "List Flavor Params by filter with paging support (By default - all system default params will be listed too)\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaDocumentFlavorParamsBaseFilter",
              "KalturaFlavorParamsOutputBaseFilter",
              "KalturaImageFlavorParamsBaseFilter",
              "KalturaLiveParamsBaseFilter",
              "KalturaMediaFlavorParamsBaseFilter",
              "KalturaPdfFlavorParamsBaseFilter",
              "KalturaSwfFlavorParamsBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "enum": [
              "3gp",
              "applehttp",
              "avi",
              "bmp",
              "copy",
              "flv",
              "hls",
              "isma",
              "ismv",
              "jpg",
              "m2ts",
              "m4v",
              "mkv",
              "mov",
              "mp3",
              "mp4",
              "mpeg",
              "mpegts",
              "mxf",
              "ogg",
              "ogv",
              "pdf",
              "png",
              "swf",
              "wav",
              "webm",
              "wma",
              "wmv",
              "wvm"
            ],
            "enumLabels": [
              "_3GP",
              "APPLEHTTP",
              "AVI",
              "BMP",
              "COPY",
              "FLV",
              "HLS",
              "ISMA",
              "ISMV",
              "JPG",
              "M2TS",
              "M4V",
              "MKV",
              "MOV",
              "MP3",
              "MP4",
              "MPEG",
              "MPEGTS",
              "MXF",
              "OGG",
              "OGV",
              "PDF",
              "PNG",
              "SWF",
              "WAV",
              "WEBM",
              "WMA",
              "WMV",
              "WVM"
            ],
            "in": "query",
            "name": "filter[formatEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutputBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsVersionEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutputBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[flavorAssetIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutputBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[flavorAssetVersionEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutputBaseFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFlavorParamsListResponse"
            }
          }
        },
        "tags": [
          "flavorParams"
        ]
      }
    },
    "/service/flavorparams/action/update": {
      "get": {
        "description": "Update Flavor Params by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "KalturaFlavorParamsOutput",
              "KalturaDocumentFlavorParams",
              "KalturaImageFlavorParams",
              "KalturaLiveParams",
              "KalturaMediaFlavorParams",
              "KalturaPdfFlavorParams",
              "KalturaSwfFlavorParams"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The video codec of the Flavor Params",
            "enum": [
              "",
              "apch",
              "apcn",
              "apco",
              "apcs",
              "copy",
              "dnxhd",
              "dv",
              "flv",
              "h263",
              "h264",
              "h264b",
              "h264h",
              "h264m",
              "h265",
              "mpeg2",
              "mpeg4",
              "theora",
              "vp6",
              "vp8",
              "vp9",
              "wmv2",
              "wmv3",
              "wvc1a"
            ],
            "enumLabels": [
              "NONE",
              "APCH",
              "APCN",
              "APCO",
              "APCS",
              "COPY",
              "DNXHD",
              "DV",
              "FLV",
              "H263",
              "H264",
              "H264B",
              "H264H",
              "H264M",
              "H265",
              "MPEG2",
              "MPEG4",
              "THEORA",
              "VP6",
              "VP8",
              "VP9",
              "WMV2",
              "WMV3",
              "WVC1A"
            ],
            "in": "query",
            "name": "flavorParams[videoCodec]",
            "type": "string"
          },
          {
            "description": "The video bitrate (in KBits) of the Flavor Params",
            "in": "query",
            "name": "flavorParams[videoBitrate]",
            "type": "integer"
          },
          {
            "description": "The audio codec of the Flavor Params",
            "enum": [
              "",
              "aac",
              "aache",
              "ac3",
              "amrnb",
              "copy",
              "mp3",
              "mpeg2",
              "pcm",
              "vorbis",
              "wma",
              "wmapro"
            ],
            "enumLabels": [
              "NONE",
              "AAC",
              "AACHE",
              "AC3",
              "AMRNB",
              "COPY",
              "MP3",
              "MPEG2",
              "PCM",
              "VORBIS",
              "WMA",
              "WMAPRO"
            ],
            "in": "query",
            "name": "flavorParams[audioCodec]",
            "type": "string"
          },
          {
            "description": "The audio bitrate (in KBits) of the Flavor Params",
            "in": "query",
            "name": "flavorParams[audioBitrate]",
            "type": "integer"
          },
          {
            "description": "The number of audio channels for \"downmixing\"",
            "in": "query",
            "name": "flavorParams[audioChannels]",
            "type": "integer"
          },
          {
            "description": "The audio sample rate of the Flavor Params",
            "in": "query",
            "name": "flavorParams[audioSampleRate]",
            "type": "integer"
          },
          {
            "description": "The desired width of the Flavor Params",
            "in": "query",
            "name": "flavorParams[width]",
            "type": "integer"
          },
          {
            "description": "The desired height of the Flavor Params",
            "in": "query",
            "name": "flavorParams[height]",
            "type": "integer"
          },
          {
            "description": "The frame rate of the Flavor Params",
            "in": "query",
            "name": "flavorParams[frameRate]",
            "type": "integer"
          },
          {
            "description": "The gop size of the Flavor Params",
            "in": "query",
            "name": "flavorParams[gopSize]",
            "type": "integer"
          },
          {
            "description": "The list of conversion engines (comma separated)",
            "in": "query",
            "name": "flavorParams[conversionEngines]",
            "type": "string"
          },
          {
            "description": "The list of conversion engines extra params (separated with \"|\")",
            "in": "query",
            "name": "flavorParams[conversionEnginesExtraParams]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[twoPass]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "flavorParams[deinterlice]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[rotate]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[operators]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[engineVersion]",
            "type": "integer"
          },
          {
            "description": "The container format of the Flavor Params",
            "enum": [
              "3gp",
              "applehttp",
              "avi",
              "bmp",
              "copy",
              "flv",
              "hls",
              "isma",
              "ismv",
              "jpg",
              "m2ts",
              "m4v",
              "mkv",
              "mov",
              "mp3",
              "mp4",
              "mpeg",
              "mpegts",
              "mxf",
              "ogg",
              "ogv",
              "pdf",
              "png",
              "swf",
              "wav",
              "webm",
              "wma",
              "wmv",
              "wvm"
            ],
            "enumLabels": [
              "_3GP",
              "APPLEHTTP",
              "AVI",
              "BMP",
              "COPY",
              "FLV",
              "HLS",
              "ISMA",
              "ISMV",
              "JPG",
              "M2TS",
              "M4V",
              "MKV",
              "MOV",
              "MP3",
              "MP4",
              "MPEG",
              "MPEGTS",
              "MXF",
              "OGG",
              "OGV",
              "PDF",
              "PNG",
              "SWF",
              "WAV",
              "WEBM",
              "WMA",
              "WMV",
              "WVM"
            ],
            "in": "query",
            "name": "flavorParams[format]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[aspectRatioProcessingMode]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[forceFrameToMultiplication16]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[isGopInSec]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[isAvoidVideoShrinkFramesizeToSource]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[isAvoidVideoShrinkBitrateToSource]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[isVideoFrameRateForLowBrAppleHls]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[multiStream]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[anamorphicPixels]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "flavorParams[isAvoidForcedKeyFrames]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[isCropIMX]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[optimizationPolicy]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[maxFrameRate]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[videoConstantBitrate]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[videoBitrateTolerance]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[watermarkData]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[clipOffset]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[clipDuration]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[partnerId]",
            "type": "integer"
          },
          {
            "description": "The name of the Flavor Params",
            "in": "query",
            "name": "flavorParams[name]",
            "type": "string"
          },
          {
            "description": "System name of the Flavor Params",
            "in": "query",
            "name": "flavorParams[systemName]",
            "type": "string"
          },
          {
            "description": "The description of the Flavor Params",
            "in": "query",
            "name": "flavorParams[description]",
            "type": "string"
          },
          {
            "description": "The Flavor Params tags are used to identify the flavor for different usage (e.g. web, hd, mobile)",
            "in": "query",
            "name": "flavorParams[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[requiredPermissions]",
            "type": "array"
          },
          {
            "description": "Id of remote storage profile that used to get the source, zero indicates Kaltura data center",
            "in": "query",
            "name": "flavorParams[sourceRemoteStorageProfileId]",
            "type": "integer"
          },
          {
            "description": "Comma seperated ids of remote storage profiles that the flavor distributed to, the distribution done by the conversion engine",
            "in": "query",
            "name": "flavorParams[remoteStorageProfileIds]",
            "type": "integer"
          },
          {
            "description": "Media parser type to be used for post-conversion validation",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "MEDIAINFO",
              "FFMPEG"
            ],
            "in": "query",
            "name": "flavorParams[mediaParserType]",
            "type": "string"
          },
          {
            "description": "Comma seperated ids of source flavor params this flavor is created from",
            "in": "query",
            "name": "flavorParams[sourceAssetParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[flavorParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutput"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[commandLinesStr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[flavorParamsVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[flavorAssetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[flavorAssetVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[readyBehavior]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorParamsOutput"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[densityWidth]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaImageFlavorParams"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[densityHeight]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaImageFlavorParams"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[sizeWidth]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaImageFlavorParams"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[sizeHeight]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaImageFlavorParams"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[depth]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaImageFlavorParams"
            },
            "type": "integer"
          },
          {
            "description": "Suffix to be added to the stream name after the entry id {entry_id}_{stream_suffix}, e.g. for entry id 0_kjdu5jr6 and suffix 1, the stream name will be 0_kjdu5jr6_1",
            "in": "query",
            "name": "flavorParams[streamSuffix]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveParams"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "flavorParams[readonly]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaPdfFlavorParams"
            },
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "flavorParams[flashVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSwfFlavorParams"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "flavorParams[poly2Bitmap]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSwfFlavorParams"
            },
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFlavorParams"
            }
          }
        },
        "tags": [
          "flavorParams"
        ]
      }
    },
    "/service/flavorparamsoutput/action/get": {
      "get": {
        "description": "Get flavor params output object by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFlavorParamsOutput"
            }
          }
        },
        "tags": [
          "flavorParamsOutput"
        ]
      }
    },
    "/service/flavorparamsoutput/action/list": {
      "get": {
        "description": "List flavor params output objects by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaDocumentFlavorParamsOutputBaseFilter",
              "KalturaImageFlavorParamsOutputBaseFilter",
              "KalturaMediaFlavorParamsOutputBaseFilter",
              "KalturaPdfFlavorParamsOutputBaseFilter",
              "KalturaSwfFlavorParamsOutputBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsVersionEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[flavorAssetIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[flavorAssetVersionEqual]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFlavorParamsOutputListResponse"
            }
          }
        },
        "tags": [
          "flavorParamsOutput"
        ]
      }
    },
    "/service/groupuser/action/add": {
      "get": {
        "description": "Add new GroupUser\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "groupUser[userId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "groupUser[groupId]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGroupUser"
            }
          }
        },
        "tags": [
          "groupUser"
        ]
      }
    },
    "/service/groupuser/action/delete": {
      "get": {
        "description": "delete by userId and groupId\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "groupId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "groupUser"
        ]
      }
    },
    "/service/groupuser/action/list": {
      "get": {
        "description": "List all GroupUsers\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[userIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[groupIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[groupIdIn]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "ACTIVE",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaGroupUserListResponse"
            }
          }
        },
        "tags": [
          "groupUser"
        ]
      }
    },
    "/service/kalturainternaltools_kalturainternaltoolssystemhelper/action/fromSecureString": {
      "get": {
        "description": "KS from Secure String\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "str",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaInternalToolsSession"
            }
          }
        },
        "tags": [
          "kalturaInternalToolsSystemHelper"
        ]
      }
    },
    "/service/kalturainternaltools_kalturainternaltoolssystemhelper/action/getRemoteAddress": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "kalturaInternalToolsSystemHelper"
        ]
      }
    },
    "/service/kalturainternaltools_kalturainternaltoolssystemhelper/action/iptocountry": {
      "get": {
        "description": "from ip to country\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "remote_addr",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "kalturaInternalToolsSystemHelper"
        ]
      }
    },
    "/service/like_like/action/checkLikeExists": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "like"
        ]
      }
    },
    "/service/like_like/action/like": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "like"
        ]
      }
    },
    "/service/like_like/action/unlike": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "like"
        ]
      }
    },
    "/service/livechannel/action/add": {
      "get": {
        "description": "Adds new live channel.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Playlist id to be played",
            "in": "query",
            "name": "liveChannel[playlistId]",
            "type": "string"
          },
          {
            "description": "Indicates that the segments should be repeated for ever",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "liveChannel[repeat]",
            "type": "integer"
          },
          {
            "description": "The message to be presented when the stream is offline",
            "in": "query",
            "name": "liveChannel[offlineMessage]",
            "type": "string"
          },
          {
            "description": "Recording Status Enabled/Disabled",
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "DISABLED",
              "APPENDED",
              "PER_SESSION"
            ],
            "in": "query",
            "name": "liveChannel[recordStatus]",
            "type": "integer"
          },
          {
            "description": "DVR Status Enabled/Disabled",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "liveChannel[dvrStatus]",
            "type": "integer"
          },
          {
            "description": "Window of time which the DVR allows for backwards scrubbing (in minutes)",
            "in": "query",
            "name": "liveChannel[dvrWindow]",
            "type": "integer"
          },
          {
            "description": "Elapsed recording time (in msec) up to the point where the live stream was last stopped (unpublished).",
            "in": "query",
            "name": "liveChannel[lastElapsedRecordingTime]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "liveChannel[liveStreamConfigurations]",
            "type": "array"
          },
          {
            "description": "Recorded entry id",
            "in": "query",
            "name": "liveChannel[recordedEntryId]",
            "type": "string"
          },
          {
            "description": "Flag denoting whether entry should be published by the media server",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "liveChannel[pushPublishEnabled]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "liveChannel[publishConfigurations]",
            "type": "array"
          },
          {
            "description": "The time (unix timestamp in milliseconds) in which the entry broadcast started or 0 when the entry is off the air",
            "in": "query",
            "name": "liveChannel[currentBroadcastStartTime]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "liveChannel[recordingOptions]"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveChannel"
            }
          }
        },
        "tags": [
          "liveChannel"
        ]
      }
    },
    "/service/livechannel/action/appendRecording": {
      "get": {
        "description": "Append recorded video to live entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Live entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Live asset id",
            "in": "query",
            "name": "assetId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "PRIMARY",
              "SECONDARY"
            ],
            "in": "query",
            "name": "mediaServerIndex",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "KalturaDropFolderFileResource",
              "KalturaServerFileResource",
              "KalturaUploadedFileTokenResource",
              "KalturaWebcamTokenResource"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Id of the drop folder file object",
            "in": "query",
            "name": "resource[dropFolderFileId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDropFolderFileResource"
            },
            "type": "integer"
          },
          {
            "description": "Full path to the local file",
            "in": "query",
            "name": "resource[localFilePath]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaServerFileResource"
            },
            "type": "string"
          },
          {
            "description": "Token that returned from upload.upload action or uploadToken.add action.",
            "in": "query",
            "name": "resource[token]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaUploadedFileTokenResource"
            },
            "type": "string"
          },
          {
            "description": "Token that returned from media server such as FMS or red5.",
            "in": "query",
            "name": "resource[token]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaWebcamTokenResource"
            },
            "type": "string"
          },
          {
            "description": "in seconds",
            "in": "query",
            "name": "duration",
            "required": false,
            "type": "number"
          },
          {
            "description": "Is this the last recorded chunk in the current session (i.e. following a stream stop event)",
            "in": "query",
            "name": "isLastChunk",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveEntry"
            }
          }
        },
        "tags": [
          "liveChannel"
        ]
      }
    },
    "/service/livechannel/action/delete": {
      "get": {
        "description": "Delete a live channel.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Live channel id to delete",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "liveChannel"
        ]
      }
    },
    "/service/livechannel/action/get": {
      "get": {
        "description": "Get live channel by ID.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Live channel id",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveChannel"
            }
          }
        },
        "tags": [
          "liveChannel"
        ]
      }
    },
    "/service/livechannel/action/isLive": {
      "get": {
        "description": "Delivering the status of a live channel (on-air/offline)\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "ID of the live channel",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "liveChannel"
        ]
      }
    },
    "/service/livechannel/action/list": {
      "get": {
        "description": "List live channels by filter with paging support.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveChannelListResponse"
            }
          }
        },
        "tags": [
          "liveChannel"
        ]
      }
    },
    "/service/livechannel/action/registerMediaServer": {
      "get": {
        "description": "Register media server to live entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Live entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Media server host name",
            "in": "query",
            "name": "hostname",
            "required": false,
            "type": "string"
          },
          {
            "description": "Media server index primary / secondary\n\n",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "PRIMARY",
              "SECONDARY"
            ],
            "in": "query",
            "name": "mediaServerIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "the application to which entry is being broadcast",
            "in": "query",
            "name": "applicationName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveEntry"
            }
          }
        },
        "tags": [
          "liveChannel"
        ]
      }
    },
    "/service/livechannel/action/unregisterMediaServer": {
      "get": {
        "description": "Unregister media server from live entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Live entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Media server host name",
            "in": "query",
            "name": "hostname",
            "required": false,
            "type": "string"
          },
          {
            "description": "Media server index primary / secondary\n\n",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "PRIMARY",
              "SECONDARY"
            ],
            "in": "query",
            "name": "mediaServerIndex",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveEntry"
            }
          }
        },
        "tags": [
          "liveChannel"
        ]
      }
    },
    "/service/livechannel/action/update": {
      "get": {
        "description": "Update live channel. Only the properties that were set will be updated.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Live channel id to update",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Playlist id to be played",
            "in": "query",
            "name": "liveChannel[playlistId]",
            "type": "string"
          },
          {
            "description": "Indicates that the segments should be repeated for ever",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "liveChannel[repeat]",
            "type": "integer"
          },
          {
            "description": "The message to be presented when the stream is offline",
            "in": "query",
            "name": "liveChannel[offlineMessage]",
            "type": "string"
          },
          {
            "description": "Recording Status Enabled/Disabled",
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "DISABLED",
              "APPENDED",
              "PER_SESSION"
            ],
            "in": "query",
            "name": "liveChannel[recordStatus]",
            "type": "integer"
          },
          {
            "description": "DVR Status Enabled/Disabled",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "liveChannel[dvrStatus]",
            "type": "integer"
          },
          {
            "description": "Window of time which the DVR allows for backwards scrubbing (in minutes)",
            "in": "query",
            "name": "liveChannel[dvrWindow]",
            "type": "integer"
          },
          {
            "description": "Elapsed recording time (in msec) up to the point where the live stream was last stopped (unpublished).",
            "in": "query",
            "name": "liveChannel[lastElapsedRecordingTime]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "liveChannel[liveStreamConfigurations]",
            "type": "array"
          },
          {
            "description": "Recorded entry id",
            "in": "query",
            "name": "liveChannel[recordedEntryId]",
            "type": "string"
          },
          {
            "description": "Flag denoting whether entry should be published by the media server",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "liveChannel[pushPublishEnabled]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "liveChannel[publishConfigurations]",
            "type": "array"
          },
          {
            "description": "The time (unix timestamp in milliseconds) in which the entry broadcast started or 0 when the entry is off the air",
            "in": "query",
            "name": "liveChannel[currentBroadcastStartTime]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "liveChannel[recordingOptions]"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveChannel"
            }
          }
        },
        "tags": [
          "liveChannel"
        ]
      }
    },
    "/service/livechannel/action/validateRegisteredMediaServers": {
      "get": {
        "description": "Validates all registered media servers\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Live entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "liveChannel"
        ]
      }
    },
    "/service/livechannelsegment/action/add": {
      "get": {
        "description": "Add new live channel segment\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Segment name",
            "in": "query",
            "name": "liveChannelSegment[name]",
            "type": "string"
          },
          {
            "description": "Segment description",
            "in": "query",
            "name": "liveChannelSegment[description]",
            "type": "string"
          },
          {
            "description": "Segment tags",
            "in": "query",
            "name": "liveChannelSegment[tags]",
            "type": "string"
          },
          {
            "description": "Segment could be associated with the main stream, as additional stream or as overlay",
            "enum": [
              "1"
            ],
            "enumLabels": [
              "VIDEO_AND_AUDIO"
            ],
            "in": "query",
            "name": "liveChannelSegment[type]",
            "type": "string"
          },
          {
            "description": "Live channel id",
            "in": "query",
            "name": "liveChannelSegment[channelId]",
            "type": "string"
          },
          {
            "description": "Entry id to be played",
            "in": "query",
            "name": "liveChannelSegment[entryId]",
            "type": "string"
          },
          {
            "description": "Segment start time trigger type",
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ],
            "enumLabels": [
              "CHANNEL_RELATIVE",
              "ABSOLUTE_TIME",
              "SEGMENT_START_RELATIVE",
              "SEGMENT_END_RELATIVE"
            ],
            "in": "query",
            "name": "liveChannelSegment[triggerType]",
            "type": "string"
          },
          {
            "description": "Live channel segment that the trigger relates to",
            "in": "query",
            "name": "liveChannelSegment[triggerSegmentId]",
            "type": "string"
          },
          {
            "description": "Segment play start time, in mili-seconds, according to trigger type",
            "in": "query",
            "name": "liveChannelSegment[startTime]",
            "type": "number"
          },
          {
            "description": "Segment play duration time, in mili-seconds",
            "in": "query",
            "name": "liveChannelSegment[duration]",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveChannelSegment"
            }
          }
        },
        "tags": [
          "liveChannelSegment"
        ]
      }
    },
    "/service/livechannelsegment/action/delete": {
      "get": {
        "description": "Delete live channel segment by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "liveChannelSegment"
        ]
      }
    },
    "/service/livechannelsegment/action/get": {
      "get": {
        "description": "Get live channel segment by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveChannelSegment"
            }
          }
        },
        "tags": [
          "liveChannelSegment"
        ]
      }
    },
    "/service/livechannelsegment/action/list": {
      "get": {
        "description": "List live channel segments by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              "2",
              "3"
            ],
            "enumLabels": [
              "ACTIVE",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[channelIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[channelIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[startTimeGreaterThanOrEqual]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "filter[startTimeLessThanOrEqual]",
            "type": "number"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveChannelSegmentListResponse"
            }
          }
        },
        "tags": [
          "liveChannelSegment"
        ]
      }
    },
    "/service/livechannelsegment/action/update": {
      "get": {
        "description": "Update live channel segment by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Segment name",
            "in": "query",
            "name": "liveChannelSegment[name]",
            "type": "string"
          },
          {
            "description": "Segment description",
            "in": "query",
            "name": "liveChannelSegment[description]",
            "type": "string"
          },
          {
            "description": "Segment tags",
            "in": "query",
            "name": "liveChannelSegment[tags]",
            "type": "string"
          },
          {
            "description": "Segment could be associated with the main stream, as additional stream or as overlay",
            "enum": [
              "1"
            ],
            "enumLabels": [
              "VIDEO_AND_AUDIO"
            ],
            "in": "query",
            "name": "liveChannelSegment[type]",
            "type": "string"
          },
          {
            "description": "Live channel id",
            "in": "query",
            "name": "liveChannelSegment[channelId]",
            "type": "string"
          },
          {
            "description": "Entry id to be played",
            "in": "query",
            "name": "liveChannelSegment[entryId]",
            "type": "string"
          },
          {
            "description": "Segment start time trigger type",
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ],
            "enumLabels": [
              "CHANNEL_RELATIVE",
              "ABSOLUTE_TIME",
              "SEGMENT_START_RELATIVE",
              "SEGMENT_END_RELATIVE"
            ],
            "in": "query",
            "name": "liveChannelSegment[triggerType]",
            "type": "string"
          },
          {
            "description": "Live channel segment that the trigger relates to",
            "in": "query",
            "name": "liveChannelSegment[triggerSegmentId]",
            "type": "string"
          },
          {
            "description": "Segment play start time, in mili-seconds, according to trigger type",
            "in": "query",
            "name": "liveChannelSegment[startTime]",
            "type": "number"
          },
          {
            "description": "Segment play duration time, in mili-seconds",
            "in": "query",
            "name": "liveChannelSegment[duration]",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveChannelSegment"
            }
          }
        },
        "tags": [
          "liveChannelSegment"
        ]
      }
    },
    "/service/livereports/action/exportToCsv": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "enum": [
              "1",
              "2",
              "11",
              "12",
              "21",
              "22",
              "31",
              "32"
            ],
            "enumLabels": [
              "PARTNER_TOTAL_ALL",
              "PARTNER_TOTAL_LIVE",
              "ENTRY_TIME_LINE_ALL",
              "ENTRY_TIME_LINE_LIVE",
              "LOCATION_ALL",
              "LOCATION_LIVE",
              "SYNDICATION_ALL",
              "SYNDICATION_LIVE"
            ],
            "in": "query",
            "name": "reportType",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "params[entryIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "params[recpientEmail]",
            "type": "string"
          },
          {
            "description": "Time zone offset in minutes (between client to UTC)",
            "in": "query",
            "name": "params[timeZoneOffset]",
            "type": "integer"
          },
          {
            "description": "Optional argument that allows controlling the prefix of the exported csv url",
            "in": "query",
            "name": "params[applicationUrlTemplate]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveReportExportResponse"
            }
          }
        },
        "tags": [
          "liveReports"
        ]
      }
    },
    "/service/livereports/action/getEvents": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "enum": [
              "ENTRY_GEO_TIME_LINE",
              "ENTRY_SYNDICATION_TOTAL",
              "ENTRY_TIME_LINE",
              "ENTRY_TOTAL",
              "PARTNER_TOTAL"
            ],
            "enumLabels": [
              "ENTRY_GEO_TIME_LINE",
              "ENTRY_SYNDICATION_TOTAL",
              "ENTRY_TIME_LINE",
              "ENTRY_TOTAL",
              "PARTNER_TOTAL"
            ],
            "in": "query",
            "name": "reportType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fromTime]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[toTime]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[live]",
            "type": "integer"
          },
          {
            "enum": [
              "+name",
              "-audience",
              "-eventTime",
              "-plays"
            ],
            "enumLabels": [
              "NAME_ASC",
              "AUDIENCE_DESC",
              "EVENT_TIME_DESC",
              "PLAYS_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "liveReports"
        ]
      }
    },
    "/service/livereports/action/getReport": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "enum": [
              "ENTRY_GEO_TIME_LINE",
              "ENTRY_SYNDICATION_TOTAL",
              "ENTRY_TIME_LINE",
              "ENTRY_TOTAL",
              "PARTNER_TOTAL"
            ],
            "enumLabels": [
              "ENTRY_GEO_TIME_LINE",
              "ENTRY_SYNDICATION_TOTAL",
              "ENTRY_TIME_LINE",
              "ENTRY_TOTAL",
              "PARTNER_TOTAL"
            ],
            "in": "query",
            "name": "reportType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fromTime]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[toTime]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[live]",
            "type": "integer"
          },
          {
            "enum": [
              "+name",
              "-audience",
              "-eventTime",
              "-plays"
            ],
            "enumLabels": [
              "NAME_ASC",
              "AUDIENCE_DESC",
              "EVENT_TIME_DESC",
              "PLAYS_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveStatsListResponse"
            }
          }
        },
        "tags": [
          "liveReports"
        ]
      }
    },
    "/service/livereports/action/serveReport": {
      "get": {
        "description": "Will serve a requested report\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "- the requested id",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "liveReports"
        ]
      }
    },
    "/service/livestats/action/collect": {
      "get": {
        "description": "Will write to the event log a single line representing the event\n\t KalturaStatsEvent $event\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "event[partnerId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "event[entryId]",
            "type": "string"
          },
          {
            "description": "an integer representing the type of event being sent from the player",
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "LIVE",
              "DVR"
            ],
            "in": "query",
            "name": "event[eventType]",
            "type": "integer"
          },
          {
            "description": "a unique string generated by the client that will represent the client-side session: the primary component will pass it on to other components that sprout from it",
            "in": "query",
            "name": "event[sessionId]",
            "type": "string"
          },
          {
            "description": "incremental sequence of the event",
            "in": "query",
            "name": "event[eventIndex]",
            "type": "integer"
          },
          {
            "description": "buffer time in seconds from the last 10 seconds",
            "in": "query",
            "name": "event[bufferTime]",
            "type": "integer"
          },
          {
            "description": "bitrate used in the last 10 seconds",
            "in": "query",
            "name": "event[bitrate]",
            "type": "integer"
          },
          {
            "description": "the referrer of the client",
            "in": "query",
            "name": "event[referrer]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event[isLive]",
            "type": "boolean"
          },
          {
            "description": "the event start time as string",
            "in": "query",
            "name": "event[startTime]",
            "type": "string"
          },
          {
            "description": "delivery type used for this stream",
            "enum": [
              "applehttp",
              "applehttp_to_mc",
              "auto",
              "hdnetwork",
              "hdnetworkmanifest",
              "hds",
              "hls",
              "http",
              "mpegdash",
              "multicast_silverlight",
              "rtmp",
              "rtsp",
              "sl"
            ],
            "enumLabels": [
              "APPLE_HTTP",
              "APPLE_HTTP_TO_MC",
              "AUTO",
              "AKAMAI_HD",
              "AKAMAI_HDS",
              "HDS",
              "HLS",
              "HTTP",
              "MPEG_DASH",
              "MULTICAST_SL",
              "RTMP",
              "RTSP",
              "SILVER_LIGHT"
            ],
            "in": "query",
            "name": "event[deliveryType]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "liveStats"
        ]
      }
    },
    "/service/livestream/action/add": {
      "get": {
        "description": "Adds new live stream entry.\n\t The entry will be queued for provision.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaLiveStreamAdminEntry"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[bitrates]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[primaryBroadcastingUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[secondaryBroadcastingUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[primaryRtspBroadcastingUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[secondaryRtspBroadcastingUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[streamName]",
            "type": "string"
          },
          {
            "description": "The stream url",
            "in": "query",
            "name": "liveStreamEntry[streamUrl]",
            "type": "string"
          },
          {
            "description": "HLS URL - URL for live stream playback on mobile device",
            "in": "query",
            "name": "liveStreamEntry[hlsStreamUrl]",
            "type": "string"
          },
          {
            "description": "URL Manager to handle the live stream URL (for instance, add token)",
            "in": "query",
            "name": "liveStreamEntry[urlManager]",
            "type": "string"
          },
          {
            "description": "The broadcast primary ip",
            "in": "query",
            "name": "liveStreamEntry[encodingIP1]",
            "type": "string"
          },
          {
            "description": "The broadcast secondary ip",
            "in": "query",
            "name": "liveStreamEntry[encodingIP2]",
            "type": "string"
          },
          {
            "description": "The broadcast password",
            "in": "query",
            "name": "liveStreamEntry[streamPassword]",
            "type": "string"
          },
          {
            "description": "The message to be presented when the stream is offline",
            "in": "query",
            "name": "liveStreamEntry[offlineMessage]",
            "type": "string"
          },
          {
            "description": "Recording Status Enabled/Disabled",
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "DISABLED",
              "APPENDED",
              "PER_SESSION"
            ],
            "in": "query",
            "name": "liveStreamEntry[recordStatus]",
            "type": "integer"
          },
          {
            "description": "DVR Status Enabled/Disabled",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "liveStreamEntry[dvrStatus]",
            "type": "integer"
          },
          {
            "description": "Window of time which the DVR allows for backwards scrubbing (in minutes)",
            "in": "query",
            "name": "liveStreamEntry[dvrWindow]",
            "type": "integer"
          },
          {
            "description": "Elapsed recording time (in msec) up to the point where the live stream was last stopped (unpublished).",
            "in": "query",
            "name": "liveStreamEntry[lastElapsedRecordingTime]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[liveStreamConfigurations]",
            "type": "array"
          },
          {
            "description": "Recorded entry id",
            "in": "query",
            "name": "liveStreamEntry[recordedEntryId]",
            "type": "string"
          },
          {
            "description": "Flag denoting whether entry should be published by the media server",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "liveStreamEntry[pushPublishEnabled]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[publishConfigurations]",
            "type": "array"
          },
          {
            "description": "The time (unix timestamp in milliseconds) in which the entry broadcast started or 0 when the entry is off the air",
            "in": "query",
            "name": "liveStreamEntry[currentBroadcastStartTime]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[recordingOptions]"
          },
          {
            "description": " Live stream source type\n\n",
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "sourceType",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveStreamEntry"
            }
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/livestream/action/addLiveStreamPushPublishConfiguration": {
      "get": {
        "description": "Add new pushPublish configuration to entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "enum": [
              "applehttp",
              "applehttp_to_mc",
              "auto",
              "hdnetwork",
              "hdnetworkmanifest",
              "hds",
              "hls",
              "http",
              "mpegdash",
              "multicast_silverlight",
              "rtmp",
              "rtsp",
              "sl"
            ],
            "enumLabels": [
              "APPLE_HTTP",
              "APPLE_HTTP_TO_MC",
              "AUTO",
              "AKAMAI_HD",
              "AKAMAI_HDS",
              "HDS",
              "HLS",
              "HTTP",
              "MPEG_DASH",
              "MULTICAST_SL",
              "RTMP",
              "RTSP",
              "SILVER_LIGHT"
            ],
            "in": "query",
            "name": "protocol",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "url",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "applehttp",
              "applehttp_to_mc",
              "auto",
              "hdnetwork",
              "hdnetworkmanifest",
              "hds",
              "hls",
              "http",
              "mpegdash",
              "multicast_silverlight",
              "rtmp",
              "rtsp",
              "sl"
            ],
            "enumLabels": [
              "APPLE_HTTP",
              "APPLE_HTTP_TO_MC",
              "AUTO",
              "AKAMAI_HD",
              "AKAMAI_HDS",
              "HDS",
              "HLS",
              "HTTP",
              "MPEG_DASH",
              "MULTICAST_SL",
              "RTMP",
              "RTSP",
              "SILVER_LIGHT"
            ],
            "in": "query",
            "name": "liveStreamConfiguration[protocol]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "liveStreamConfiguration[url]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "liveStreamConfiguration[publishUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "liveStreamConfiguration[backupUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "liveStreamConfiguration[streamName]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveStreamEntry"
            }
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/livestream/action/appendRecording": {
      "get": {
        "description": "Append recorded video to live entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Live entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Live asset id",
            "in": "query",
            "name": "assetId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "PRIMARY",
              "SECONDARY"
            ],
            "in": "query",
            "name": "mediaServerIndex",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "KalturaDropFolderFileResource",
              "KalturaServerFileResource",
              "KalturaUploadedFileTokenResource",
              "KalturaWebcamTokenResource"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Id of the drop folder file object",
            "in": "query",
            "name": "resource[dropFolderFileId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaDropFolderFileResource"
            },
            "type": "integer"
          },
          {
            "description": "Full path to the local file",
            "in": "query",
            "name": "resource[localFilePath]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaServerFileResource"
            },
            "type": "string"
          },
          {
            "description": "Token that returned from upload.upload action or uploadToken.add action.",
            "in": "query",
            "name": "resource[token]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaUploadedFileTokenResource"
            },
            "type": "string"
          },
          {
            "description": "Token that returned from media server such as FMS or red5.",
            "in": "query",
            "name": "resource[token]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaWebcamTokenResource"
            },
            "type": "string"
          },
          {
            "description": "in seconds",
            "in": "query",
            "name": "duration",
            "required": false,
            "type": "number"
          },
          {
            "description": "Is this the last recorded chunk in the current session (i.e. following a stream stop event)",
            "in": "query",
            "name": "isLastChunk",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveEntry"
            }
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/livestream/action/authenticate": {
      "get": {
        "description": "Authenticate live-stream entry against stream token and partner limitations\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Live stream entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Live stream broadcasting token",
            "in": "query",
            "name": "token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveStreamEntry"
            }
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/livestream/action/createPeriodicSyncPoints": {
      "get": {
        "description": "Creates perioding metadata sync-point events on a live stream\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Kaltura live-stream entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Events interval in seconds ",
            "in": "query",
            "name": "interval",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Duration in seconds",
            "in": "query",
            "name": "duration",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/livestream/action/delete": {
      "get": {
        "description": "Delete a live stream entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Live stream entry id to delete",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/livestream/action/get": {
      "get": {
        "description": "Get live stream entry by ID.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Live stream entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired version of the data",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveStreamEntry"
            }
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/livestream/action/isLive": {
      "get": {
        "description": "Delivering the status of a live stream (on-air/offline) if it is possible\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "ID of the live stream",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "protocol of the stream to test.\n\n",
            "enum": [
              "applehttp",
              "applehttp_to_mc",
              "auto",
              "hdnetwork",
              "hdnetworkmanifest",
              "hds",
              "hls",
              "http",
              "mpegdash",
              "multicast_silverlight",
              "rtmp",
              "rtsp",
              "sl"
            ],
            "enumLabels": [
              "APPLE_HTTP",
              "APPLE_HTTP_TO_MC",
              "AUTO",
              "AKAMAI_HD",
              "AKAMAI_HDS",
              "HDS",
              "HLS",
              "HTTP",
              "MPEG_DASH",
              "MULTICAST_SL",
              "RTMP",
              "RTSP",
              "SILVER_LIGHT"
            ],
            "in": "query",
            "name": "protocol",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/livestream/action/list": {
      "get": {
        "description": "List live stream entries by filter with paging support.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaLiveStreamAdminEntryBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveStreamListResponse"
            }
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/livestream/action/registerMediaServer": {
      "get": {
        "description": "Register media server to live entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Live entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Media server host name",
            "in": "query",
            "name": "hostname",
            "required": false,
            "type": "string"
          },
          {
            "description": "Media server index primary / secondary\n\n",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "PRIMARY",
              "SECONDARY"
            ],
            "in": "query",
            "name": "mediaServerIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "the application to which entry is being broadcast",
            "in": "query",
            "name": "applicationName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveEntry"
            }
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/livestream/action/removeLiveStreamPushPublishConfiguration": {
      "get": {
        "description": "Remove push publish configuration from entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "enum": [
              "applehttp",
              "applehttp_to_mc",
              "auto",
              "hdnetwork",
              "hdnetworkmanifest",
              "hds",
              "hls",
              "http",
              "mpegdash",
              "multicast_silverlight",
              "rtmp",
              "rtsp",
              "sl"
            ],
            "enumLabels": [
              "APPLE_HTTP",
              "APPLE_HTTP_TO_MC",
              "AUTO",
              "AKAMAI_HD",
              "AKAMAI_HDS",
              "HDS",
              "HLS",
              "HTTP",
              "MPEG_DASH",
              "MULTICAST_SL",
              "RTMP",
              "RTSP",
              "SILVER_LIGHT"
            ],
            "in": "query",
            "name": "protocol",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveStreamEntry"
            }
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/livestream/action/unregisterMediaServer": {
      "get": {
        "description": "Unregister media server from live entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Live entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Media server host name",
            "in": "query",
            "name": "hostname",
            "required": false,
            "type": "string"
          },
          {
            "description": "Media server index primary / secondary\n\n",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "PRIMARY",
              "SECONDARY"
            ],
            "in": "query",
            "name": "mediaServerIndex",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveEntry"
            }
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/livestream/action/update": {
      "get": {
        "description": "Update live stream entry. Only the properties that were set will be updated.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Live stream entry id to update",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaLiveStreamAdminEntry"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[bitrates]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[primaryBroadcastingUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[secondaryBroadcastingUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[primaryRtspBroadcastingUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[secondaryRtspBroadcastingUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[streamName]",
            "type": "string"
          },
          {
            "description": "The stream url",
            "in": "query",
            "name": "liveStreamEntry[streamUrl]",
            "type": "string"
          },
          {
            "description": "HLS URL - URL for live stream playback on mobile device",
            "in": "query",
            "name": "liveStreamEntry[hlsStreamUrl]",
            "type": "string"
          },
          {
            "description": "URL Manager to handle the live stream URL (for instance, add token)",
            "in": "query",
            "name": "liveStreamEntry[urlManager]",
            "type": "string"
          },
          {
            "description": "The broadcast primary ip",
            "in": "query",
            "name": "liveStreamEntry[encodingIP1]",
            "type": "string"
          },
          {
            "description": "The broadcast secondary ip",
            "in": "query",
            "name": "liveStreamEntry[encodingIP2]",
            "type": "string"
          },
          {
            "description": "The broadcast password",
            "in": "query",
            "name": "liveStreamEntry[streamPassword]",
            "type": "string"
          },
          {
            "description": "The message to be presented when the stream is offline",
            "in": "query",
            "name": "liveStreamEntry[offlineMessage]",
            "type": "string"
          },
          {
            "description": "Recording Status Enabled/Disabled",
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "DISABLED",
              "APPENDED",
              "PER_SESSION"
            ],
            "in": "query",
            "name": "liveStreamEntry[recordStatus]",
            "type": "integer"
          },
          {
            "description": "DVR Status Enabled/Disabled",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "liveStreamEntry[dvrStatus]",
            "type": "integer"
          },
          {
            "description": "Window of time which the DVR allows for backwards scrubbing (in minutes)",
            "in": "query",
            "name": "liveStreamEntry[dvrWindow]",
            "type": "integer"
          },
          {
            "description": "Elapsed recording time (in msec) up to the point where the live stream was last stopped (unpublished).",
            "in": "query",
            "name": "liveStreamEntry[lastElapsedRecordingTime]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[liveStreamConfigurations]",
            "type": "array"
          },
          {
            "description": "Recorded entry id",
            "in": "query",
            "name": "liveStreamEntry[recordedEntryId]",
            "type": "string"
          },
          {
            "description": "Flag denoting whether entry should be published by the media server",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "liveStreamEntry[pushPublishEnabled]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[publishConfigurations]",
            "type": "array"
          },
          {
            "description": "The time (unix timestamp in milliseconds) in which the entry broadcast started or 0 when the entry is off the air",
            "in": "query",
            "name": "liveStreamEntry[currentBroadcastStartTime]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "liveStreamEntry[recordingOptions]"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveStreamEntry"
            }
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/livestream/action/updateOfflineThumbnailFromUrl": {
      "get": {
        "description": "Update entry thumbnail using url\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "live stream entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "file url",
            "in": "query",
            "name": "url",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveStreamEntry"
            }
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/livestream/action/updateOfflineThumbnailJpeg": {
      "get": {
        "description": "Update live stream entry thumbnail using a raw jpeg file\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "live stream entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveStreamEntry"
            }
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/livestream/action/validateRegisteredMediaServers": {
      "get": {
        "description": "Validates all registered media servers\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Live entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "liveStream"
        ]
      }
    },
    "/service/media/action/add": {
      "get": {
        "description": "Add entry\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaExternalMediaEntry",
              "KalturaLiveEntry"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The media type of the entry",
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "entry[mediaType]",
            "type": "integer"
          },
          {
            "description": "Override the default conversion quality",
            "in": "query",
            "name": "entry[conversionQuality]",
            "type": "string"
          },
          {
            "description": "The source type of the entry",
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "entry[sourceType]",
            "type": "string"
          },
          {
            "description": "The search provider type used to import this entry",
            "enum": [
              3,
              4,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              20,
              21,
              22,
              23,
              24,
              28,
              100
            ],
            "enumLabels": [
              "FLICKR",
              "YOUTUBE",
              "MYSPACE",
              "PHOTOBUCKET",
              "JAMENDO",
              "CCMIXTER",
              "NYPL",
              "CURRENT",
              "MEDIA_COMMONS",
              "KALTURA",
              "KALTURA_USER_CLIPS",
              "ARCHIVE_ORG",
              "KALTURA_PARTNER",
              "METACAFE",
              "SEARCH_PROXY",
              "PARTNER_SPECIFIC"
            ],
            "in": "query",
            "name": "entry[searchProviderType]",
            "type": "integer"
          },
          {
            "description": "The ID of the media in the importing site",
            "in": "query",
            "name": "entry[searchProviderId]",
            "type": "string"
          },
          {
            "description": "The user name used for credits",
            "in": "query",
            "name": "entry[creditUserName]",
            "type": "string"
          },
          {
            "description": "The URL for credits",
            "in": "query",
            "name": "entry[creditUrl]",
            "type": "string"
          },
          {
            "description": "The duration in miliseconds",
            "in": "query",
            "name": "entry[msDuration]",
            "type": "integer"
          },
          {
            "description": "The source type of the external media",
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "entry[externalSourceType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntry"
            },
            "type": "string"
          },
          {
            "description": "The message to be presented when the stream is offline",
            "in": "query",
            "name": "entry[offlineMessage]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Recording Status Enabled/Disabled",
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "DISABLED",
              "APPENDED",
              "PER_SESSION"
            ],
            "in": "query",
            "name": "entry[recordStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "DVR Status Enabled/Disabled",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "entry[dvrStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Window of time which the DVR allows for backwards scrubbing (in minutes)",
            "in": "query",
            "name": "entry[dvrWindow]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Elapsed recording time (in msec) up to the point where the live stream was last stopped (unpublished).",
            "in": "query",
            "name": "entry[lastElapsedRecordingTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entry[liveStreamConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "Recorded entry id",
            "in": "query",
            "name": "entry[recordedEntryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Flag denoting whether entry should be published by the media server",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "entry[pushPublishEnabled]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "entry[publishConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "The time (unix timestamp in milliseconds) in which the entry broadcast started or 0 when the entry is off the air",
            "in": "query",
            "name": "entry[currentBroadcastStartTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "number"
          },
          {
            "in": "query",
            "name": "entry[recordingOptions]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/addContent": {
      "get": {
        "description": "Add content to media entry which is not yet associated with content (therefore is in status NO_CONTENT).\n     If the requirement is to replace the entry's associated content, use action updateContent.\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaContentResource",
              "KalturaAssetParamsResourceContainer",
              "KalturaAssetsParamsResourceContainers"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "resource[resource]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetParamsResourceContainer"
            }
          },
          {
            "description": "The asset params to associate with the reaource",
            "in": "query",
            "name": "resource[assetParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetParamsResourceContainer"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "resource[resources]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetsParamsResourceContainers"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/addFromEntry": {
      "get": {
        "description": "Copy entry into new entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id to copy from",
            "in": "query",
            "name": "sourceEntryId",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaExternalMediaEntry",
              "KalturaLiveEntry"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The media type of the entry",
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "mediaEntry[mediaType]",
            "type": "integer"
          },
          {
            "description": "Override the default conversion quality",
            "in": "query",
            "name": "mediaEntry[conversionQuality]",
            "type": "string"
          },
          {
            "description": "The source type of the entry",
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "mediaEntry[sourceType]",
            "type": "string"
          },
          {
            "description": "The search provider type used to import this entry",
            "enum": [
              3,
              4,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              20,
              21,
              22,
              23,
              24,
              28,
              100
            ],
            "enumLabels": [
              "FLICKR",
              "YOUTUBE",
              "MYSPACE",
              "PHOTOBUCKET",
              "JAMENDO",
              "CCMIXTER",
              "NYPL",
              "CURRENT",
              "MEDIA_COMMONS",
              "KALTURA",
              "KALTURA_USER_CLIPS",
              "ARCHIVE_ORG",
              "KALTURA_PARTNER",
              "METACAFE",
              "SEARCH_PROXY",
              "PARTNER_SPECIFIC"
            ],
            "in": "query",
            "name": "mediaEntry[searchProviderType]",
            "type": "integer"
          },
          {
            "description": "The ID of the media in the importing site",
            "in": "query",
            "name": "mediaEntry[searchProviderId]",
            "type": "string"
          },
          {
            "description": "The user name used for credits",
            "in": "query",
            "name": "mediaEntry[creditUserName]",
            "type": "string"
          },
          {
            "description": "The URL for credits",
            "in": "query",
            "name": "mediaEntry[creditUrl]",
            "type": "string"
          },
          {
            "description": "The duration in miliseconds",
            "in": "query",
            "name": "mediaEntry[msDuration]",
            "type": "integer"
          },
          {
            "description": "The source type of the external media",
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "mediaEntry[externalSourceType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntry"
            },
            "type": "string"
          },
          {
            "description": "The message to be presented when the stream is offline",
            "in": "query",
            "name": "mediaEntry[offlineMessage]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Recording Status Enabled/Disabled",
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "DISABLED",
              "APPENDED",
              "PER_SESSION"
            ],
            "in": "query",
            "name": "mediaEntry[recordStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "DVR Status Enabled/Disabled",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[dvrStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Window of time which the DVR allows for backwards scrubbing (in minutes)",
            "in": "query",
            "name": "mediaEntry[dvrWindow]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Elapsed recording time (in msec) up to the point where the live stream was last stopped (unpublished).",
            "in": "query",
            "name": "mediaEntry[lastElapsedRecordingTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[liveStreamConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "Recorded entry id",
            "in": "query",
            "name": "mediaEntry[recordedEntryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Flag denoting whether entry should be published by the media server",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[pushPublishEnabled]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[publishConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "The time (unix timestamp in milliseconds) in which the entry broadcast started or 0 when the entry is off the air",
            "in": "query",
            "name": "mediaEntry[currentBroadcastStartTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "number"
          },
          {
            "in": "query",
            "name": "mediaEntry[recordingOptions]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            }
          },
          {
            "description": "The flavor to be used as the new entry source, source flavor will be used if not specified",
            "in": "query",
            "name": "sourceFlavorParamsId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/addFromFlavorAsset": {
      "get": {
        "description": "Copy flavor asset into new entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Flavor asset id to be used as the new entry source",
            "in": "query",
            "name": "sourceFlavorAssetId",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaExternalMediaEntry",
              "KalturaLiveEntry"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The media type of the entry",
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "mediaEntry[mediaType]",
            "type": "integer"
          },
          {
            "description": "Override the default conversion quality",
            "in": "query",
            "name": "mediaEntry[conversionQuality]",
            "type": "string"
          },
          {
            "description": "The source type of the entry",
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "mediaEntry[sourceType]",
            "type": "string"
          },
          {
            "description": "The search provider type used to import this entry",
            "enum": [
              3,
              4,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              20,
              21,
              22,
              23,
              24,
              28,
              100
            ],
            "enumLabels": [
              "FLICKR",
              "YOUTUBE",
              "MYSPACE",
              "PHOTOBUCKET",
              "JAMENDO",
              "CCMIXTER",
              "NYPL",
              "CURRENT",
              "MEDIA_COMMONS",
              "KALTURA",
              "KALTURA_USER_CLIPS",
              "ARCHIVE_ORG",
              "KALTURA_PARTNER",
              "METACAFE",
              "SEARCH_PROXY",
              "PARTNER_SPECIFIC"
            ],
            "in": "query",
            "name": "mediaEntry[searchProviderType]",
            "type": "integer"
          },
          {
            "description": "The ID of the media in the importing site",
            "in": "query",
            "name": "mediaEntry[searchProviderId]",
            "type": "string"
          },
          {
            "description": "The user name used for credits",
            "in": "query",
            "name": "mediaEntry[creditUserName]",
            "type": "string"
          },
          {
            "description": "The URL for credits",
            "in": "query",
            "name": "mediaEntry[creditUrl]",
            "type": "string"
          },
          {
            "description": "The duration in miliseconds",
            "in": "query",
            "name": "mediaEntry[msDuration]",
            "type": "integer"
          },
          {
            "description": "The source type of the external media",
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "mediaEntry[externalSourceType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntry"
            },
            "type": "string"
          },
          {
            "description": "The message to be presented when the stream is offline",
            "in": "query",
            "name": "mediaEntry[offlineMessage]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Recording Status Enabled/Disabled",
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "DISABLED",
              "APPENDED",
              "PER_SESSION"
            ],
            "in": "query",
            "name": "mediaEntry[recordStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "DVR Status Enabled/Disabled",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[dvrStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Window of time which the DVR allows for backwards scrubbing (in minutes)",
            "in": "query",
            "name": "mediaEntry[dvrWindow]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Elapsed recording time (in msec) up to the point where the live stream was last stopped (unpublished).",
            "in": "query",
            "name": "mediaEntry[lastElapsedRecordingTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[liveStreamConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "Recorded entry id",
            "in": "query",
            "name": "mediaEntry[recordedEntryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Flag denoting whether entry should be published by the media server",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[pushPublishEnabled]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[publishConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "The time (unix timestamp in milliseconds) in which the entry broadcast started or 0 when the entry is off the air",
            "in": "query",
            "name": "mediaEntry[currentBroadcastStartTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "number"
          },
          {
            "in": "query",
            "name": "mediaEntry[recordingOptions]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/addFromRecordedWebcam": {
      "get": {
        "description": "Add new entry after the file was recored on the server and the token id exists\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaExternalMediaEntry",
              "KalturaLiveEntry"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The media type of the entry",
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "mediaEntry[mediaType]",
            "type": "integer"
          },
          {
            "description": "Override the default conversion quality",
            "in": "query",
            "name": "mediaEntry[conversionQuality]",
            "type": "string"
          },
          {
            "description": "The source type of the entry",
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "mediaEntry[sourceType]",
            "type": "string"
          },
          {
            "description": "The search provider type used to import this entry",
            "enum": [
              3,
              4,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              20,
              21,
              22,
              23,
              24,
              28,
              100
            ],
            "enumLabels": [
              "FLICKR",
              "YOUTUBE",
              "MYSPACE",
              "PHOTOBUCKET",
              "JAMENDO",
              "CCMIXTER",
              "NYPL",
              "CURRENT",
              "MEDIA_COMMONS",
              "KALTURA",
              "KALTURA_USER_CLIPS",
              "ARCHIVE_ORG",
              "KALTURA_PARTNER",
              "METACAFE",
              "SEARCH_PROXY",
              "PARTNER_SPECIFIC"
            ],
            "in": "query",
            "name": "mediaEntry[searchProviderType]",
            "type": "integer"
          },
          {
            "description": "The ID of the media in the importing site",
            "in": "query",
            "name": "mediaEntry[searchProviderId]",
            "type": "string"
          },
          {
            "description": "The user name used for credits",
            "in": "query",
            "name": "mediaEntry[creditUserName]",
            "type": "string"
          },
          {
            "description": "The URL for credits",
            "in": "query",
            "name": "mediaEntry[creditUrl]",
            "type": "string"
          },
          {
            "description": "The duration in miliseconds",
            "in": "query",
            "name": "mediaEntry[msDuration]",
            "type": "integer"
          },
          {
            "description": "The source type of the external media",
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "mediaEntry[externalSourceType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntry"
            },
            "type": "string"
          },
          {
            "description": "The message to be presented when the stream is offline",
            "in": "query",
            "name": "mediaEntry[offlineMessage]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Recording Status Enabled/Disabled",
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "DISABLED",
              "APPENDED",
              "PER_SESSION"
            ],
            "in": "query",
            "name": "mediaEntry[recordStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "DVR Status Enabled/Disabled",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[dvrStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Window of time which the DVR allows for backwards scrubbing (in minutes)",
            "in": "query",
            "name": "mediaEntry[dvrWindow]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Elapsed recording time (in msec) up to the point where the live stream was last stopped (unpublished).",
            "in": "query",
            "name": "mediaEntry[lastElapsedRecordingTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[liveStreamConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "Recorded entry id",
            "in": "query",
            "name": "mediaEntry[recordedEntryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Flag denoting whether entry should be published by the media server",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[pushPublishEnabled]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[publishConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "The time (unix timestamp in milliseconds) in which the entry broadcast started or 0 when the entry is off the air",
            "in": "query",
            "name": "mediaEntry[currentBroadcastStartTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "number"
          },
          {
            "in": "query",
            "name": "mediaEntry[recordingOptions]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            }
          },
          {
            "description": "Token id for the recored webcam file",
            "in": "query",
            "name": "webcamTokenId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/addFromSearchResult": {
      "get": {
        "description": "Adds new media entry by importing the media file from a search provider.\n\t This action should be used with the search service result.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaExternalMediaEntry",
              "KalturaLiveEntry"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The media type of the entry",
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "mediaEntry[mediaType]",
            "type": "integer"
          },
          {
            "description": "Override the default conversion quality",
            "in": "query",
            "name": "mediaEntry[conversionQuality]",
            "type": "string"
          },
          {
            "description": "The source type of the entry",
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "mediaEntry[sourceType]",
            "type": "string"
          },
          {
            "description": "The search provider type used to import this entry",
            "enum": [
              3,
              4,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              20,
              21,
              22,
              23,
              24,
              28,
              100
            ],
            "enumLabels": [
              "FLICKR",
              "YOUTUBE",
              "MYSPACE",
              "PHOTOBUCKET",
              "JAMENDO",
              "CCMIXTER",
              "NYPL",
              "CURRENT",
              "MEDIA_COMMONS",
              "KALTURA",
              "KALTURA_USER_CLIPS",
              "ARCHIVE_ORG",
              "KALTURA_PARTNER",
              "METACAFE",
              "SEARCH_PROXY",
              "PARTNER_SPECIFIC"
            ],
            "in": "query",
            "name": "mediaEntry[searchProviderType]",
            "type": "integer"
          },
          {
            "description": "The ID of the media in the importing site",
            "in": "query",
            "name": "mediaEntry[searchProviderId]",
            "type": "string"
          },
          {
            "description": "The user name used for credits",
            "in": "query",
            "name": "mediaEntry[creditUserName]",
            "type": "string"
          },
          {
            "description": "The URL for credits",
            "in": "query",
            "name": "mediaEntry[creditUrl]",
            "type": "string"
          },
          {
            "description": "The duration in miliseconds",
            "in": "query",
            "name": "mediaEntry[msDuration]",
            "type": "integer"
          },
          {
            "description": "The source type of the external media",
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "mediaEntry[externalSourceType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntry"
            },
            "type": "string"
          },
          {
            "description": "The message to be presented when the stream is offline",
            "in": "query",
            "name": "mediaEntry[offlineMessage]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Recording Status Enabled/Disabled",
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "DISABLED",
              "APPENDED",
              "PER_SESSION"
            ],
            "in": "query",
            "name": "mediaEntry[recordStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "DVR Status Enabled/Disabled",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[dvrStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Window of time which the DVR allows for backwards scrubbing (in minutes)",
            "in": "query",
            "name": "mediaEntry[dvrWindow]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Elapsed recording time (in msec) up to the point where the live stream was last stopped (unpublished).",
            "in": "query",
            "name": "mediaEntry[lastElapsedRecordingTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[liveStreamConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "Recorded entry id",
            "in": "query",
            "name": "mediaEntry[recordedEntryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Flag denoting whether entry should be published by the media server",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[pushPublishEnabled]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[publishConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "The time (unix timestamp in milliseconds) in which the entry broadcast started or 0 when the entry is off the air",
            "in": "query",
            "name": "mediaEntry[currentBroadcastStartTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "number"
          },
          {
            "in": "query",
            "name": "mediaEntry[recordingOptions]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            }
          },
          {
            "in": "query",
            "name": "searchResult[id]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[title]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[thumbUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[description]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[url]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[sourceLink]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[credit]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "searchResult[licenseType]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "searchResult[flashPlaybackType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[fileExt]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[keyWords]",
            "type": "string"
          },
          {
            "enum": [
              3,
              4,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              20,
              21,
              22,
              23,
              24,
              28,
              100
            ],
            "enumLabels": [
              "FLICKR",
              "YOUTUBE",
              "MYSPACE",
              "PHOTOBUCKET",
              "JAMENDO",
              "CCMIXTER",
              "NYPL",
              "CURRENT",
              "MEDIA_COMMONS",
              "KALTURA",
              "KALTURA_USER_CLIPS",
              "ARCHIVE_ORG",
              "KALTURA_PARTNER",
              "METACAFE",
              "SEARCH_PROXY",
              "PARTNER_SPECIFIC"
            ],
            "in": "query",
            "name": "searchResult[searchSource]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "searchResult[mediaType]",
            "type": "integer"
          },
          {
            "description": "Use this field to pass dynamic data for searching\n\t For example - if you set this field to \"mymovies_$partner_id\"\n\t The $partner_id will be automatically replcaed with your real partner Id",
            "in": "query",
            "name": "searchResult[extraData]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[authData]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/addFromUploadedFile": {
      "get": {
        "description": "Add new entry after the specific media file was uploaded and the upload token id exists\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaExternalMediaEntry",
              "KalturaLiveEntry"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The media type of the entry",
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "mediaEntry[mediaType]",
            "type": "integer"
          },
          {
            "description": "Override the default conversion quality",
            "in": "query",
            "name": "mediaEntry[conversionQuality]",
            "type": "string"
          },
          {
            "description": "The source type of the entry",
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "mediaEntry[sourceType]",
            "type": "string"
          },
          {
            "description": "The search provider type used to import this entry",
            "enum": [
              3,
              4,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              20,
              21,
              22,
              23,
              24,
              28,
              100
            ],
            "enumLabels": [
              "FLICKR",
              "YOUTUBE",
              "MYSPACE",
              "PHOTOBUCKET",
              "JAMENDO",
              "CCMIXTER",
              "NYPL",
              "CURRENT",
              "MEDIA_COMMONS",
              "KALTURA",
              "KALTURA_USER_CLIPS",
              "ARCHIVE_ORG",
              "KALTURA_PARTNER",
              "METACAFE",
              "SEARCH_PROXY",
              "PARTNER_SPECIFIC"
            ],
            "in": "query",
            "name": "mediaEntry[searchProviderType]",
            "type": "integer"
          },
          {
            "description": "The ID of the media in the importing site",
            "in": "query",
            "name": "mediaEntry[searchProviderId]",
            "type": "string"
          },
          {
            "description": "The user name used for credits",
            "in": "query",
            "name": "mediaEntry[creditUserName]",
            "type": "string"
          },
          {
            "description": "The URL for credits",
            "in": "query",
            "name": "mediaEntry[creditUrl]",
            "type": "string"
          },
          {
            "description": "The duration in miliseconds",
            "in": "query",
            "name": "mediaEntry[msDuration]",
            "type": "integer"
          },
          {
            "description": "The source type of the external media",
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "mediaEntry[externalSourceType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntry"
            },
            "type": "string"
          },
          {
            "description": "The message to be presented when the stream is offline",
            "in": "query",
            "name": "mediaEntry[offlineMessage]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Recording Status Enabled/Disabled",
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "DISABLED",
              "APPENDED",
              "PER_SESSION"
            ],
            "in": "query",
            "name": "mediaEntry[recordStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "DVR Status Enabled/Disabled",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[dvrStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Window of time which the DVR allows for backwards scrubbing (in minutes)",
            "in": "query",
            "name": "mediaEntry[dvrWindow]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Elapsed recording time (in msec) up to the point where the live stream was last stopped (unpublished).",
            "in": "query",
            "name": "mediaEntry[lastElapsedRecordingTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[liveStreamConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "Recorded entry id",
            "in": "query",
            "name": "mediaEntry[recordedEntryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Flag denoting whether entry should be published by the media server",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[pushPublishEnabled]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[publishConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "The time (unix timestamp in milliseconds) in which the entry broadcast started or 0 when the entry is off the air",
            "in": "query",
            "name": "mediaEntry[currentBroadcastStartTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "number"
          },
          {
            "in": "query",
            "name": "mediaEntry[recordingOptions]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            }
          },
          {
            "description": "Upload token id",
            "in": "query",
            "name": "uploadTokenId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/addFromUrl": {
      "get": {
        "description": "Adds new media entry by importing an HTTP or FTP URL.\n\t The entry will be queued for import and then for conversion.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaExternalMediaEntry",
              "KalturaLiveEntry"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The media type of the entry",
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "mediaEntry[mediaType]",
            "type": "integer"
          },
          {
            "description": "Override the default conversion quality",
            "in": "query",
            "name": "mediaEntry[conversionQuality]",
            "type": "string"
          },
          {
            "description": "The source type of the entry",
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "mediaEntry[sourceType]",
            "type": "string"
          },
          {
            "description": "The search provider type used to import this entry",
            "enum": [
              3,
              4,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              20,
              21,
              22,
              23,
              24,
              28,
              100
            ],
            "enumLabels": [
              "FLICKR",
              "YOUTUBE",
              "MYSPACE",
              "PHOTOBUCKET",
              "JAMENDO",
              "CCMIXTER",
              "NYPL",
              "CURRENT",
              "MEDIA_COMMONS",
              "KALTURA",
              "KALTURA_USER_CLIPS",
              "ARCHIVE_ORG",
              "KALTURA_PARTNER",
              "METACAFE",
              "SEARCH_PROXY",
              "PARTNER_SPECIFIC"
            ],
            "in": "query",
            "name": "mediaEntry[searchProviderType]",
            "type": "integer"
          },
          {
            "description": "The ID of the media in the importing site",
            "in": "query",
            "name": "mediaEntry[searchProviderId]",
            "type": "string"
          },
          {
            "description": "The user name used for credits",
            "in": "query",
            "name": "mediaEntry[creditUserName]",
            "type": "string"
          },
          {
            "description": "The URL for credits",
            "in": "query",
            "name": "mediaEntry[creditUrl]",
            "type": "string"
          },
          {
            "description": "The duration in miliseconds",
            "in": "query",
            "name": "mediaEntry[msDuration]",
            "type": "integer"
          },
          {
            "description": "The source type of the external media",
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "mediaEntry[externalSourceType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntry"
            },
            "type": "string"
          },
          {
            "description": "The message to be presented when the stream is offline",
            "in": "query",
            "name": "mediaEntry[offlineMessage]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Recording Status Enabled/Disabled",
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "DISABLED",
              "APPENDED",
              "PER_SESSION"
            ],
            "in": "query",
            "name": "mediaEntry[recordStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "DVR Status Enabled/Disabled",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[dvrStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Window of time which the DVR allows for backwards scrubbing (in minutes)",
            "in": "query",
            "name": "mediaEntry[dvrWindow]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Elapsed recording time (in msec) up to the point where the live stream was last stopped (unpublished).",
            "in": "query",
            "name": "mediaEntry[lastElapsedRecordingTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[liveStreamConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "Recorded entry id",
            "in": "query",
            "name": "mediaEntry[recordedEntryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Flag denoting whether entry should be published by the media server",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[pushPublishEnabled]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[publishConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "The time (unix timestamp in milliseconds) in which the entry broadcast started or 0 when the entry is off the air",
            "in": "query",
            "name": "mediaEntry[currentBroadcastStartTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "number"
          },
          {
            "in": "query",
            "name": "mediaEntry[recordingOptions]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            }
          },
          {
            "description": "An HTTP or FTP URL",
            "in": "query",
            "name": "url",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/anonymousRank": {
      "get": {
        "description": "Anonymously rank a media entry, no validation is done on duplicate rankings\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "rank",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/approve": {
      "get": {
        "description": "Approve the media entry and mark the pending flags (if any) as moderated (this will make the entry playable)\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/approveReplace": {
      "get": {
        "description": "Approves media replacement\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id to replace",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/bulkUploadAdd": {
      "get": {
        "description": "Add new bulk upload batch job\n\t Conversion profile id can be specified in the API or in the CSV file, the one in the CSV file will be stronger.\n\t If no conversion profile was specified, partner's default will be used\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaBulkUploadCsvJobData",
              "KalturaBulkUploadFilterJobData",
              "KalturaBulkUploadXmlJobData"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Friendly name of the file, used to be recognized later in the logs.",
            "in": "query",
            "name": "bulkUploadData[fileName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bulkUploadData[objectData]"
          },
          {
            "description": "Recipients of the email for bulk upload success/failure",
            "in": "query",
            "name": "bulkUploadData[emailRecipients]",
            "type": "string"
          },
          {
            "description": "Number of objects that finished on error status",
            "in": "query",
            "name": "bulkUploadData[numOfErrorObjects]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "bulkUploadData[columns]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaBulkUploadCsvJobData"
            },
            "type": "array"
          },
          {
            "in": "query",
            "name": "bulkUploadData[filter]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaBulkUploadFilterJobData"
            }
          },
          {
            "in": "query",
            "name": "bulkUploadData[templateObject]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaBulkUploadFilterJobData"
            }
          },
          {
            "description": "Selected profile id for all bulk entries",
            "in": "query",
            "name": "bulkUploadEntryData[conversionProfileId]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUpload"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/cancelReplace": {
      "get": {
        "description": "Cancels media replacement\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id to cancel",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/convert": {
      "get": {
        "description": "Convert entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "conversionProfileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/count": {
      "get": {
        "description": "Count media entries by filter.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaMediaEntryFilterForPlaylist",
              "KalturaExternalMediaEntryBaseFilter",
              "KalturaLiveEntryBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "filter[mediaTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[mediaTypeIn]",
            "type": "string"
          },
          {
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "filter[sourceTypeEqual]",
            "type": "string"
          },
          {
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "filter[sourceTypeNotEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[sourceTypeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[sourceTypeNotIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[mediaDateGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[mediaDateLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdsMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdsMatchAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[limit]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaMediaEntryFilterForPlaylist"
            },
            "type": "integer"
          },
          {
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "filter[externalSourceTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[externalSourceTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntryBaseFilter"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/delete": {
      "get": {
        "description": "Delete a media entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id to delete",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/flag": {
      "get": {
        "description": "Flag inappropriate media entry for moderation\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "If moderation flag is set for entry, this is the flagged entry id",
            "in": "query",
            "name": "moderationFlag[flaggedEntryId]",
            "type": "string"
          },
          {
            "description": "If moderation flag is set for user, this is the flagged user id",
            "in": "query",
            "name": "moderationFlag[flaggedUserId]",
            "type": "string"
          },
          {
            "description": "The comment that was added to the flag",
            "in": "query",
            "name": "moderationFlag[comments]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "enumLabels": [
              "SEXUAL_CONTENT",
              "VIOLENT_REPULSIVE",
              "HARMFUL_DANGEROUS",
              "SPAM_COMMERCIALS",
              "COPYRIGHT",
              "TERMS_OF_USE_VIOLATION"
            ],
            "in": "query",
            "name": "moderationFlag[flagType]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/get": {
      "get": {
        "description": "Get media entry by ID.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired version of the data",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/getMrss": {
      "get": {
        "description": "Get MRSS by entry id\n     XML will return as an escaped string\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/list": {
      "get": {
        "description": "List media entries by filter with paging support.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaMediaEntryFilterForPlaylist",
              "KalturaExternalMediaEntryBaseFilter",
              "KalturaLiveEntryBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "filter[mediaTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[mediaTypeIn]",
            "type": "string"
          },
          {
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "filter[sourceTypeEqual]",
            "type": "string"
          },
          {
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "filter[sourceTypeNotEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[sourceTypeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[sourceTypeNotIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[mediaDateGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[mediaDateLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdsMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdsMatchAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[limit]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaMediaEntryFilterForPlaylist"
            },
            "type": "integer"
          },
          {
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "filter[externalSourceTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[externalSourceTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaListResponse"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/listFlags": {
      "get": {
        "description": "List all pending flags for the media entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaModerationFlagListResponse"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/reject": {
      "get": {
        "description": "Reject the media entry and mark the pending flags (if any) as moderated (this will make the entry non playable)\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/requestConversion": {
      "get": {
        "description": "Request a new conversion job, this can be used to convert the media entry to a different format\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Format to convert",
            "in": "query",
            "name": "fileFormat",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/update": {
      "get": {
        "description": "Update media entry. Only the properties that were set will be updated.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id to update",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaExternalMediaEntry",
              "KalturaLiveEntry"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The media type of the entry",
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "mediaEntry[mediaType]",
            "type": "integer"
          },
          {
            "description": "Override the default conversion quality",
            "in": "query",
            "name": "mediaEntry[conversionQuality]",
            "type": "string"
          },
          {
            "description": "The source type of the entry",
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "mediaEntry[sourceType]",
            "type": "string"
          },
          {
            "description": "The search provider type used to import this entry",
            "enum": [
              3,
              4,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              20,
              21,
              22,
              23,
              24,
              28,
              100
            ],
            "enumLabels": [
              "FLICKR",
              "YOUTUBE",
              "MYSPACE",
              "PHOTOBUCKET",
              "JAMENDO",
              "CCMIXTER",
              "NYPL",
              "CURRENT",
              "MEDIA_COMMONS",
              "KALTURA",
              "KALTURA_USER_CLIPS",
              "ARCHIVE_ORG",
              "KALTURA_PARTNER",
              "METACAFE",
              "SEARCH_PROXY",
              "PARTNER_SPECIFIC"
            ],
            "in": "query",
            "name": "mediaEntry[searchProviderType]",
            "type": "integer"
          },
          {
            "description": "The ID of the media in the importing site",
            "in": "query",
            "name": "mediaEntry[searchProviderId]",
            "type": "string"
          },
          {
            "description": "The user name used for credits",
            "in": "query",
            "name": "mediaEntry[creditUserName]",
            "type": "string"
          },
          {
            "description": "The URL for credits",
            "in": "query",
            "name": "mediaEntry[creditUrl]",
            "type": "string"
          },
          {
            "description": "The duration in miliseconds",
            "in": "query",
            "name": "mediaEntry[msDuration]",
            "type": "integer"
          },
          {
            "description": "The source type of the external media",
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "mediaEntry[externalSourceType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntry"
            },
            "type": "string"
          },
          {
            "description": "The message to be presented when the stream is offline",
            "in": "query",
            "name": "mediaEntry[offlineMessage]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Recording Status Enabled/Disabled",
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "DISABLED",
              "APPENDED",
              "PER_SESSION"
            ],
            "in": "query",
            "name": "mediaEntry[recordStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "DVR Status Enabled/Disabled",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[dvrStatus]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Window of time which the DVR allows for backwards scrubbing (in minutes)",
            "in": "query",
            "name": "mediaEntry[dvrWindow]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "description": "Elapsed recording time (in msec) up to the point where the live stream was last stopped (unpublished).",
            "in": "query",
            "name": "mediaEntry[lastElapsedRecordingTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[liveStreamConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "Recorded entry id",
            "in": "query",
            "name": "mediaEntry[recordedEntryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "string"
          },
          {
            "description": "Flag denoting whether entry should be published by the media server",
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED"
            ],
            "in": "query",
            "name": "mediaEntry[pushPublishEnabled]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mediaEntry[publishConfigurations]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "array"
          },
          {
            "description": "The time (unix timestamp in milliseconds) in which the entry broadcast started or 0 when the entry is off the air",
            "in": "query",
            "name": "mediaEntry[currentBroadcastStartTime]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            },
            "type": "number"
          },
          {
            "in": "query",
            "name": "mediaEntry[recordingOptions]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaLiveEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/updateContent": {
      "get": {
        "description": "Replace content associated with the media entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id to update",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaContentResource",
              "KalturaAssetParamsResourceContainer",
              "KalturaAssetsParamsResourceContainers"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "resource[resource]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetParamsResourceContainer"
            }
          },
          {
            "description": "The asset params to associate with the reaource",
            "in": "query",
            "name": "resource[assetParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetParamsResourceContainer"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "resource[resources]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetsParamsResourceContainers"
            },
            "type": "array"
          },
          {
            "description": "The conversion profile id to be used on the entry",
            "in": "query",
            "name": "conversionProfileId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "If true manually created thumbnails will not be deleted on entry replacement",
            "in": "query",
            "name": "advancedOptions[keepManualThumbnails]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/updateThumbnail": {
      "get": {
        "description": "Update media entry thumbnail by a specified time offset (In seconds)\n\t If flavor params id not specified, source flavor will be used by default\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Time offset (in seconds)",
            "in": "query",
            "name": "timeOffset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The flavor params id to be used",
            "in": "query",
            "name": "flavorParamsId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/updateThumbnailFromSourceEntry": {
      "get": {
        "description": "Update media entry thumbnail from a different entry by a specified time offset (In seconds)\n\t If flavor params id not specified, source flavor will be used by default\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Media entry id",
            "in": "query",
            "name": "sourceEntryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Time offset (in seconds)",
            "in": "query",
            "name": "timeOffset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The flavor params id to be used",
            "in": "query",
            "name": "flavorParamsId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/updateThumbnailFromUrl": {
      "get": {
        "description": "Update entry thumbnail using url\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "file url",
            "in": "query",
            "name": "url",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/updateThumbnailJpeg": {
      "get": {
        "description": "Update media entry thumbnail using a raw jpeg file\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Media entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaEntry"
            }
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/media/action/upload": {
      "get": {
        "description": "Upload a media file to Kaltura, then the file can be used to create a media entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "media"
        ]
      }
    },
    "/service/mediainfo/action/list": {
      "get": {
        "description": "List media info objects by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[flavorAssetIdEqual]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaInfoListResponse"
            }
          }
        },
        "tags": [
          "mediaInfo"
        ]
      }
    },
    "/service/mediaserver/action/get": {
      "get": {
        "description": "Get media server by hostname\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "hostname",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaServer"
            }
          }
        },
        "tags": [
          "mediaServer"
        ]
      }
    },
    "/service/mediaserver/action/reportStatus": {
      "get": {
        "description": "Update media server status\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "hostname",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaServer"
            }
          }
        },
        "tags": [
          "mediaServer"
        ]
      }
    },
    "/service/metadata_metadata/action/add": {
      "get": {
        "description": "Allows you to add a metadata object and metadata content associated with Kaltura object\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "metadataProfileId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "adCuePointMetadata.AdCuePoint",
              "annotationMetadata.Annotation",
              "codeCuePointMetadata.CodeCuePoint",
              "thumbCuePointMetadata.thumbCuePoint",
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "enumLabels": [
              "AD_CUE_POINT",
              "ANNOTATION",
              "CODE_CUE_POINT",
              "THUMB_CUE_POINT",
              "ENTRY",
              "CATEGORY",
              "USER",
              "PARTNER",
              "DYNAMIC_OBJECT"
            ],
            "in": "query",
            "name": "objectType",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "objectId",
            "required": false,
            "type": "string"
          },
          {
            "description": "XML metadata",
            "in": "query",
            "name": "xmlData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadata"
            }
          }
        },
        "tags": [
          "metadata"
        ]
      }
    },
    "/service/metadata_metadata/action/addFromBulk": {
      "get": {
        "description": "Allows you to add a metadata xml data from remote URL.\n\t Enables different permissions than addFromUrl action.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "metadataProfileId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "adCuePointMetadata.AdCuePoint",
              "annotationMetadata.Annotation",
              "codeCuePointMetadata.CodeCuePoint",
              "thumbCuePointMetadata.thumbCuePoint",
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "enumLabels": [
              "AD_CUE_POINT",
              "ANNOTATION",
              "CODE_CUE_POINT",
              "THUMB_CUE_POINT",
              "ENTRY",
              "CATEGORY",
              "USER",
              "PARTNER",
              "DYNAMIC_OBJECT"
            ],
            "in": "query",
            "name": "objectType",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "objectId",
            "required": false,
            "type": "string"
          },
          {
            "description": "XML metadata remote url",
            "in": "query",
            "name": "url",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadata"
            }
          }
        },
        "tags": [
          "metadata"
        ]
      }
    },
    "/service/metadata_metadata/action/addFromFile": {
      "get": {
        "description": "Allows you to add a metadata object and metadata file associated with Kaltura object\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "metadataProfileId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "adCuePointMetadata.AdCuePoint",
              "annotationMetadata.Annotation",
              "codeCuePointMetadata.CodeCuePoint",
              "thumbCuePointMetadata.thumbCuePoint",
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "enumLabels": [
              "AD_CUE_POINT",
              "ANNOTATION",
              "CODE_CUE_POINT",
              "THUMB_CUE_POINT",
              "ENTRY",
              "CATEGORY",
              "USER",
              "PARTNER",
              "DYNAMIC_OBJECT"
            ],
            "in": "query",
            "name": "objectType",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "objectId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadata"
            }
          }
        },
        "tags": [
          "metadata"
        ]
      }
    },
    "/service/metadata_metadata/action/addFromUrl": {
      "get": {
        "description": "Allows you to add a metadata xml data from remote URL\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "metadataProfileId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "adCuePointMetadata.AdCuePoint",
              "annotationMetadata.Annotation",
              "codeCuePointMetadata.CodeCuePoint",
              "thumbCuePointMetadata.thumbCuePoint",
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "enumLabels": [
              "AD_CUE_POINT",
              "ANNOTATION",
              "CODE_CUE_POINT",
              "THUMB_CUE_POINT",
              "ENTRY",
              "CATEGORY",
              "USER",
              "PARTNER",
              "DYNAMIC_OBJECT"
            ],
            "in": "query",
            "name": "objectType",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "objectId",
            "required": false,
            "type": "string"
          },
          {
            "description": "XML metadata remote url",
            "in": "query",
            "name": "url",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadata"
            }
          }
        },
        "tags": [
          "metadata"
        ]
      }
    },
    "/service/metadata_metadata/action/delete": {
      "get": {
        "description": "Delete an existing metadata\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "metadata"
        ]
      }
    },
    "/service/metadata_metadata/action/get": {
      "get": {
        "description": "Retrieve a metadata object by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadata"
            }
          }
        },
        "tags": [
          "metadata"
        ]
      }
    },
    "/service/metadata_metadata/action/index": {
      "get": {
        "description": "Index metadata by id, will also index the related object\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "shouldUpdate",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "metadata"
        ]
      }
    },
    "/service/metadata_metadata/action/invalidate": {
      "get": {
        "description": "Mark existing metadata as invalid\n\t Used by batch metadata transform\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Enable update only if the metadata object version did not change by other process",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "metadata"
        ]
      }
    },
    "/service/metadata_metadata/action/list": {
      "get": {
        "description": "List metadata objects by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[metadataProfileIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[metadataProfileVersionEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[metadataProfileVersionGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[metadataProfileVersionLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "When null, default is KalturaMetadataObjectType::ENTRY",
            "enum": [
              "adCuePointMetadata.AdCuePoint",
              "annotationMetadata.Annotation",
              "codeCuePointMetadata.CodeCuePoint",
              "thumbCuePointMetadata.thumbCuePoint",
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "enumLabels": [
              "AD_CUE_POINT",
              "ANNOTATION",
              "CODE_CUE_POINT",
              "THUMB_CUE_POINT",
              "ENTRY",
              "CATEGORY",
              "USER",
              "PARTNER",
              "DYNAMIC_OBJECT"
            ],
            "in": "query",
            "name": "filter[metadataObjectTypeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[objectIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[objectIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[versionEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[versionGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[versionLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "VALID",
              "INVALID",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadataListResponse"
            }
          }
        },
        "tags": [
          "metadata"
        ]
      }
    },
    "/service/metadata_metadata/action/serve": {
      "get": {
        "description": "Serves metadata XML file\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "metadata"
        ]
      }
    },
    "/service/metadata_metadata/action/update": {
      "get": {
        "description": "Update an existing metadata object with new XML content\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "XML metadata",
            "in": "query",
            "name": "xmlData",
            "required": false,
            "type": "string"
          },
          {
            "description": "Enable update only if the metadata object version did not change by other process",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadata"
            }
          }
        },
        "tags": [
          "metadata"
        ]
      }
    },
    "/service/metadata_metadata/action/updateFromFile": {
      "get": {
        "description": "Update an existing metadata object with new XML file\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadata"
            }
          }
        },
        "tags": [
          "metadata"
        ]
      }
    },
    "/service/metadata_metadata/action/updateFromXSL": {
      "get": {
        "description": "Action transforms current metadata object XML using a provided XSL.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadata"
            }
          }
        },
        "tags": [
          "metadata"
        ]
      }
    },
    "/service/metadata_metadataprofile/action/add": {
      "get": {
        "description": "Allows you to add a metadata profile object and metadata profile content associated with Kaltura object type\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "adCuePointMetadata.AdCuePoint",
              "annotationMetadata.Annotation",
              "codeCuePointMetadata.CodeCuePoint",
              "thumbCuePointMetadata.thumbCuePoint",
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "enumLabels": [
              "AD_CUE_POINT",
              "ANNOTATION",
              "CODE_CUE_POINT",
              "THUMB_CUE_POINT",
              "ENTRY",
              "CATEGORY",
              "USER",
              "PARTNER",
              "DYNAMIC_OBJECT"
            ],
            "in": "query",
            "name": "metadataProfile[metadataObjectType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadataProfile[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadataProfile[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadataProfile[description]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "API",
              "KMC",
              "APP"
            ],
            "in": "query",
            "name": "metadataProfile[createMode]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "metadataProfile[disableReIndexing]",
            "type": "boolean"
          },
          {
            "description": "XSD metadata definition",
            "in": "query",
            "name": "xsdData",
            "required": false,
            "type": "string"
          },
          {
            "description": "UI views definition",
            "in": "query",
            "name": "viewsData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadataProfile"
            }
          }
        },
        "tags": [
          "metadataProfile"
        ]
      }
    },
    "/service/metadata_metadataprofile/action/addFromFile": {
      "get": {
        "description": "Allows you to add a metadata profile object and metadata profile file associated with Kaltura object type\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "adCuePointMetadata.AdCuePoint",
              "annotationMetadata.Annotation",
              "codeCuePointMetadata.CodeCuePoint",
              "thumbCuePointMetadata.thumbCuePoint",
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "enumLabels": [
              "AD_CUE_POINT",
              "ANNOTATION",
              "CODE_CUE_POINT",
              "THUMB_CUE_POINT",
              "ENTRY",
              "CATEGORY",
              "USER",
              "PARTNER",
              "DYNAMIC_OBJECT"
            ],
            "in": "query",
            "name": "metadataProfile[metadataObjectType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadataProfile[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadataProfile[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadataProfile[description]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "API",
              "KMC",
              "APP"
            ],
            "in": "query",
            "name": "metadataProfile[createMode]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "metadataProfile[disableReIndexing]",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadataProfile"
            }
          }
        },
        "tags": [
          "metadataProfile"
        ]
      }
    },
    "/service/metadata_metadataprofile/action/delete": {
      "get": {
        "description": "Delete an existing metadata profile\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "metadataProfile"
        ]
      }
    },
    "/service/metadata_metadataprofile/action/get": {
      "get": {
        "description": "Retrieve a metadata profile object by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadataProfile"
            }
          }
        },
        "tags": [
          "metadataProfile"
        ]
      }
    },
    "/service/metadata_metadataprofile/action/list": {
      "get": {
        "description": "List metadata profile objects by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "enum": [
              "adCuePointMetadata.AdCuePoint",
              "annotationMetadata.Annotation",
              "codeCuePointMetadata.CodeCuePoint",
              "thumbCuePointMetadata.thumbCuePoint",
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "enumLabels": [
              "AD_CUE_POINT",
              "ANNOTATION",
              "CODE_CUE_POINT",
              "THUMB_CUE_POINT",
              "ENTRY",
              "CATEGORY",
              "USER",
              "PARTNER",
              "DYNAMIC_OBJECT"
            ],
            "in": "query",
            "name": "filter[metadataObjectTypeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[metadataObjectTypeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[versionEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[nameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "ACTIVE",
              "DEPRECATED",
              "TRANSFORMING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "API",
              "KMC",
              "APP"
            ],
            "in": "query",
            "name": "filter[createModeEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "API",
              "KMC",
              "APP"
            ],
            "in": "query",
            "name": "filter[createModeNotEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createModeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createModeNotIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadataProfileListResponse"
            }
          }
        },
        "tags": [
          "metadataProfile"
        ]
      }
    },
    "/service/metadata_metadataprofile/action/listFields": {
      "get": {
        "description": "List metadata profile fields by metadata profile id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "metadataProfileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadataProfileFieldListResponse"
            }
          }
        },
        "tags": [
          "metadataProfile"
        ]
      }
    },
    "/service/metadata_metadataprofile/action/revert": {
      "get": {
        "description": "Update an existing metadata object definition file\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "toVersion",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadataProfile"
            }
          }
        },
        "tags": [
          "metadataProfile"
        ]
      }
    },
    "/service/metadata_metadataprofile/action/serve": {
      "get": {
        "description": "Serves metadata profile XSD file\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "metadataProfile"
        ]
      }
    },
    "/service/metadata_metadataprofile/action/serveView": {
      "get": {
        "description": "Serves metadata profile view file\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "metadataProfile"
        ]
      }
    },
    "/service/metadata_metadataprofile/action/update": {
      "get": {
        "description": "Update an existing metadata object\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "adCuePointMetadata.AdCuePoint",
              "annotationMetadata.Annotation",
              "codeCuePointMetadata.CodeCuePoint",
              "thumbCuePointMetadata.thumbCuePoint",
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "enumLabels": [
              "AD_CUE_POINT",
              "ANNOTATION",
              "CODE_CUE_POINT",
              "THUMB_CUE_POINT",
              "ENTRY",
              "CATEGORY",
              "USER",
              "PARTNER",
              "DYNAMIC_OBJECT"
            ],
            "in": "query",
            "name": "metadataProfile[metadataObjectType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadataProfile[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadataProfile[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadataProfile[description]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "API",
              "KMC",
              "APP"
            ],
            "in": "query",
            "name": "metadataProfile[createMode]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "metadataProfile[disableReIndexing]",
            "type": "boolean"
          },
          {
            "description": "XSD metadata definition",
            "in": "query",
            "name": "xsdData",
            "required": false,
            "type": "string"
          },
          {
            "description": "UI views definition",
            "in": "query",
            "name": "viewsData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadataProfile"
            }
          }
        },
        "tags": [
          "metadataProfile"
        ]
      }
    },
    "/service/metadata_metadataprofile/action/updateDefinitionFromFile": {
      "get": {
        "description": "Update an existing metadata object definition file\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadataProfile"
            }
          }
        },
        "tags": [
          "metadataProfile"
        ]
      }
    },
    "/service/metadata_metadataprofile/action/updateTransformationFromFile": {
      "get": {
        "description": "Update an existing metadata object xslt file\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadataProfile"
            }
          }
        },
        "tags": [
          "metadataProfile"
        ]
      }
    },
    "/service/metadata_metadataprofile/action/updateViewsFromFile": {
      "get": {
        "description": "Update an existing metadata object views file\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetadataProfile"
            }
          }
        },
        "tags": [
          "metadataProfile"
        ]
      }
    },
    "/service/mixing/action/add": {
      "get": {
        "description": "Adds a new mix.\n\t If the dataContent is null, a default timeline will be created.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The editor type used to edit the metadata",
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "SIMPLE",
              "ADVANCED"
            ],
            "in": "query",
            "name": "mixEntry[editorType]",
            "type": "integer"
          },
          {
            "description": "The xml data of the mix",
            "in": "query",
            "name": "mixEntry[dataContent]",
            "type": "string"
          },
          {
            "description": "The duration in miliseconds",
            "in": "query",
            "name": "mixEntry[msDuration]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMixEntry"
            }
          }
        },
        "tags": [
          "mixing"
        ]
      }
    },
    "/service/mixing/action/anonymousRank": {
      "get": {
        "description": "Anonymously rank a mix entry, no validation is done on duplicate rankings\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "rank",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "mixing"
        ]
      }
    },
    "/service/mixing/action/appendMediaEntry": {
      "get": {
        "description": "Appends a media entry to a the end of the mix timeline, this will save the mix timeline as a new version.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Mix entry to append to its timeline",
            "in": "query",
            "name": "mixEntryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Media entry to append to the timeline",
            "in": "query",
            "name": "mediaEntryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMixEntry"
            }
          }
        },
        "tags": [
          "mixing"
        ]
      }
    },
    "/service/mixing/action/clone": {
      "get": {
        "description": "Clones an existing mix.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Mix entry id to clone",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMixEntry"
            }
          }
        },
        "tags": [
          "mixing"
        ]
      }
    },
    "/service/mixing/action/count": {
      "get": {
        "description": "Count mix entries by filter.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaMediaEntryFilterForPlaylist",
              "KalturaExternalMediaEntryBaseFilter",
              "KalturaLiveEntryBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "filter[mediaTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[mediaTypeIn]",
            "type": "string"
          },
          {
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "filter[sourceTypeEqual]",
            "type": "string"
          },
          {
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "filter[sourceTypeNotEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[sourceTypeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[sourceTypeNotIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[mediaDateGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[mediaDateLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdsMatchOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdsMatchAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[limit]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaMediaEntryFilterForPlaylist"
            },
            "type": "integer"
          },
          {
            "enum": [
              "InterCall",
              "YouTube"
            ],
            "enumLabels": [
              "INTERCALL",
              "YOUTUBE"
            ],
            "in": "query",
            "name": "filter[externalSourceTypeEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[externalSourceTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchOr]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntryBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[assetParamsIdsMatchAnd]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaExternalMediaEntryBaseFilter"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "mixing"
        ]
      }
    },
    "/service/mixing/action/delete": {
      "get": {
        "description": "Delete a mix entry.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Mix entry id to delete",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "mixing"
        ]
      }
    },
    "/service/mixing/action/get": {
      "get": {
        "description": "Get mix entry by id.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Mix entry id",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired version of the data",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMixEntry"
            }
          }
        },
        "tags": [
          "mixing"
        ]
      }
    },
    "/service/mixing/action/getMixesByMediaId": {
      "get": {
        "description": "Get the mixes in which the media entry is included\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "mediaEntryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "mixing"
        ]
      }
    },
    "/service/mixing/action/getReadyMediaEntries": {
      "get": {
        "description": "Get all ready media entries that exist in the given mix id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "mixId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired version to get the data from",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "mixing"
        ]
      }
    },
    "/service/mixing/action/list": {
      "get": {
        "description": "List entries by filter with paging support.\n\t Return parameter is an array of mix entries.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMixListResponse"
            }
          }
        },
        "tags": [
          "mixing"
        ]
      }
    },
    "/service/mixing/action/update": {
      "get": {
        "description": "Update mix entry. Only the properties that were set will be updated.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Mix entry id to update",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The editor type used to edit the metadata",
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "SIMPLE",
              "ADVANCED"
            ],
            "in": "query",
            "name": "mixEntry[editorType]",
            "type": "integer"
          },
          {
            "description": "The xml data of the mix",
            "in": "query",
            "name": "mixEntry[dataContent]",
            "type": "string"
          },
          {
            "description": "The duration in miliseconds",
            "in": "query",
            "name": "mixEntry[msDuration]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMixEntry"
            }
          }
        },
        "tags": [
          "mixing"
        ]
      }
    },
    "/service/notification/action/getClientNotification": {
      "get": {
        "description": "Return the notifications for a specific entry id and type\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "21",
              "26"
            ],
            "enumLabels": [
              "ENTRY_ADD",
              "ENTR_UPDATE_PERMISSIONS",
              "ENTRY_DELETE",
              "ENTRY_BLOCK",
              "ENTRY_UPDATE",
              "ENTRY_UPDATE_THUMBNAIL",
              "ENTRY_UPDATE_MODERATION",
              "USER_ADD",
              "USER_BANNED"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaClientNotification"
            }
          }
        },
        "tags": [
          "notification"
        ]
      }
    },
    "/service/partner/action/count": {
      "get": {
        "description": "Count partner's existing sub-publishers (count includes the partner itself).\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaSystemPartnerFilter",
              "KalturaVarConsolePartnerFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idNotIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameEqual]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "DELETED",
              "ACTIVE",
              "BLOCKED",
              "FULL_BLOCK"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerPackageEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerPackageGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerPackageLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "filter[partnerGroupTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerNameDescriptionWebsiteAdminNameAdminEmailLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerParentIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerParentIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Eq filter for the partner's group type",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "filter[groupTypeEq]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "integer"
          },
          {
            "description": "In filter for the partner's group type",
            "in": "query",
            "name": "filter[groupTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Filter for partner permissions- filter contains comma-separated string of permission names which the returned partners should have.",
            "in": "query",
            "name": "filter[partnerPermissionsExist]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "partner"
        ]
      }
    },
    "/service/partner/action/get": {
      "get": {
        "description": "Retrieve partner object by Id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartner"
            }
          }
        },
        "tags": [
          "partner"
        ]
      }
    },
    "/service/partner/action/getInfo": {
      "get": {
        "description": "Retrieve all info attributed to the partner\n\t This action expects no parameters. It returns information for the current KS partnerId.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartner"
            }
          }
        },
        "tags": [
          "partner"
        ]
      }
    },
    "/service/partner/action/getSecrets": {
      "get": {
        "description": "Retrieve partner secret and admin secret\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "partnerId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "adminEmail",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "cmsPassword",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartner"
            }
          }
        },
        "tags": [
          "partner"
        ]
      }
    },
    "/service/partner/action/getStatistics": {
      "get": {
        "description": "Get usage statistics for a partner\n\t Calculation is done according to partner's package\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartnerStatistics"
            }
          }
        },
        "tags": [
          "partner"
        ]
      }
    },
    "/service/partner/action/getUsage": {
      "get": {
        "description": "Get usage statistics for a partner\n\t Calculation is done according to partner's package\n\t Additional data returned is a graph points of streaming usage in a timeframe\n\t The resolution can be \"days\" or \"months\"\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "year",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "month",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "days",
              "months"
            ],
            "enumLabels": [
              "DAYS",
              "MONTHS"
            ],
            "in": "query",
            "name": "resolution",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartnerUsage"
            }
          }
        },
        "tags": [
          "partner"
        ]
      }
    },
    "/service/partner/action/list": {
      "get": {
        "description": "List partners by filter with paging support\n\t Current implementation will only list the sub partners of the partner initiating the api call (using the current KS).\n\t This action is only partially implemented to support listing sub partners of a VAR partner.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaSystemPartnerFilter",
              "KalturaVarConsolePartnerFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idNotIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameEqual]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "DELETED",
              "ACTIVE",
              "BLOCKED",
              "FULL_BLOCK"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerPackageEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerPackageGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerPackageLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "filter[partnerGroupTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerNameDescriptionWebsiteAdminNameAdminEmailLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerParentIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerParentIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Eq filter for the partner's group type",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "filter[groupTypeEq]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "integer"
          },
          {
            "description": "In filter for the partner's group type",
            "in": "query",
            "name": "filter[groupTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Filter for partner permissions- filter contains comma-separated string of permission names which the returned partners should have.",
            "in": "query",
            "name": "filter[partnerPermissionsExist]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartnerListResponse"
            }
          }
        },
        "tags": [
          "partner"
        ]
      }
    },
    "/service/partner/action/listFeatureStatus": {
      "get": {
        "description": "List partner's current processes' statuses\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFeatureStatusListResponse"
            }
          }
        },
        "tags": [
          "partner"
        ]
      }
    },
    "/service/partner/action/listPartnersForUser": {
      "get": {
        "description": "Retrieve a list of partner objects which the current user is allowed to access.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaSystemPartnerFilter",
              "KalturaVarConsolePartnerFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "partnerFilter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[idNotIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[nameLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[nameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[nameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[nameEqual]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "DELETED",
              "ACTIVE",
              "BLOCKED",
              "FULL_BLOCK"
            ],
            "in": "query",
            "name": "partnerFilter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerPackageEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerPackageGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerPackageLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "partnerFilter[partnerGroupTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerNameDescriptionWebsiteAdminNameAdminEmailLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerParentIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerParentIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Eq filter for the partner's group type",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "partnerFilter[groupTypeEq]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "integer"
          },
          {
            "description": "In filter for the partner's group type",
            "in": "query",
            "name": "partnerFilter[groupTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Filter for partner permissions- filter contains comma-separated string of permission names which the returned partners should have.",
            "in": "query",
            "name": "partnerFilter[partnerPermissionsExist]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartnerListResponse"
            }
          }
        },
        "tags": [
          "partner"
        ]
      }
    },
    "/service/partner/action/register": {
      "get": {
        "description": "Create a new Partner object\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "partner[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[website]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[notificationUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[appearInSearch]",
            "type": "integer"
          },
          {
            "description": "deprecated - lastName and firstName replaces this field",
            "in": "query",
            "name": "partner[adminName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[adminEmail]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[description]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "NON_COMMERCIAL_USE",
              "COMMERCIAL_USE"
            ],
            "in": "query",
            "name": "partner[commercialUse]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner[landingPage]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[userLandingPage]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[contentCategories]",
            "type": "string"
          },
          {
            "enum": [
              1,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109
            ],
            "enumLabels": [
              "KMC",
              "WIKI",
              "WORDPRESS",
              "DRUPAL",
              "DEKIWIKI",
              "MOODLE",
              "COMMUNITY_EDITION",
              "JOOMLA",
              "BLACKBOARD",
              "SAKAI",
              "ADMIN_CONSOLE"
            ],
            "in": "query",
            "name": "partner[type]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner[phone]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[describeYourself]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[adultContent]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "partner[defConversionProfileType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[notify]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner[allowQuickEdit]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner[mergeEntryLists]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner[notificationsConfig]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[maxUploadSize]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner[allowMultiNotification]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner[adminUserId]",
            "type": "string"
          },
          {
            "description": "firstName and lastName replace the old (deprecated) adminName",
            "in": "query",
            "name": "partner[firstName]",
            "type": "string"
          },
          {
            "description": "lastName and firstName replace the old (deprecated) adminName",
            "in": "query",
            "name": "partner[lastName]",
            "type": "string"
          },
          {
            "description": "country code (2char) - this field is optional",
            "in": "query",
            "name": "partner[country]",
            "type": "string"
          },
          {
            "description": "state code (2char) - this field is optional",
            "in": "query",
            "name": "partner[state]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[additionalParams]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "partner[deliveryTypes]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "partner[embedCodeTypes]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "partner[referenceId]",
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "cmsPassword",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "templatePartnerId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "silent",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartner"
            }
          }
        },
        "tags": [
          "partner"
        ]
      }
    },
    "/service/partner/action/update": {
      "get": {
        "description": "Update details and settings of an existing partner\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "partner[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[website]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[notificationUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[appearInSearch]",
            "type": "integer"
          },
          {
            "description": "deprecated - lastName and firstName replaces this field",
            "in": "query",
            "name": "partner[adminName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[adminEmail]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[description]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "NON_COMMERCIAL_USE",
              "COMMERCIAL_USE"
            ],
            "in": "query",
            "name": "partner[commercialUse]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner[landingPage]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[userLandingPage]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[contentCategories]",
            "type": "string"
          },
          {
            "enum": [
              1,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109
            ],
            "enumLabels": [
              "KMC",
              "WIKI",
              "WORDPRESS",
              "DRUPAL",
              "DEKIWIKI",
              "MOODLE",
              "COMMUNITY_EDITION",
              "JOOMLA",
              "BLACKBOARD",
              "SAKAI",
              "ADMIN_CONSOLE"
            ],
            "in": "query",
            "name": "partner[type]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner[phone]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[describeYourself]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[adultContent]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "partner[defConversionProfileType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[notify]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner[allowQuickEdit]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner[mergeEntryLists]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner[notificationsConfig]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[maxUploadSize]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner[allowMultiNotification]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner[adminUserId]",
            "type": "string"
          },
          {
            "description": "firstName and lastName replace the old (deprecated) adminName",
            "in": "query",
            "name": "partner[firstName]",
            "type": "string"
          },
          {
            "description": "lastName and firstName replace the old (deprecated) adminName",
            "in": "query",
            "name": "partner[lastName]",
            "type": "string"
          },
          {
            "description": "country code (2char) - this field is optional",
            "in": "query",
            "name": "partner[country]",
            "type": "string"
          },
          {
            "description": "state code (2char) - this field is optional",
            "in": "query",
            "name": "partner[state]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partner[additionalParams]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "partner[deliveryTypes]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "partner[embedCodeTypes]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "partner[referenceId]",
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "allowEmpty",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartner"
            }
          }
        },
        "tags": [
          "partner"
        ]
      }
    },
    "/service/permission/action/add": {
      "get": {
        "description": "Adds a new permission object to the account.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "permission[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "permission[friendlyName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "permission[description]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "ACTIVE",
              "BLOCKED",
              "DELETED"
            ],
            "in": "query",
            "name": "permission[status]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "permission[dependsOnPermissionNames]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "permission[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "permission[permissionItemsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "permission[partnerGroup]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPermission"
            }
          }
        },
        "tags": [
          "permission"
        ]
      }
    },
    "/service/permission/action/delete": {
      "get": {
        "description": "Deletes an existing permission object.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The name assigned to the permission",
            "in": "query",
            "name": "permissionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPermission"
            }
          }
        },
        "tags": [
          "permission"
        ]
      }
    },
    "/service/permission/action/get": {
      "get": {
        "description": "Retrieves a permission object using its ID.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The name assigned to the permission",
            "in": "query",
            "name": "permissionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPermission"
            }
          }
        },
        "tags": [
          "permission"
        ]
      }
    },
    "/service/permission/action/getCurrentPermissions": {
      "get": {
        "description": "Retrieves a list of permissions that apply to the current KS.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "permission"
        ]
      }
    },
    "/service/permission/action/list": {
      "get": {
        "description": "Lists permission objects that are associated with an account.\n\t Blocked permissions are listed unless you use a filter to exclude them.\n\t Blocked permissions are listed unless you use a filter to exclude them.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "NORMAL",
              "SPECIAL_FEATURE",
              "PLUGIN",
              "PARTNER_GROUP"
            ],
            "in": "query",
            "name": "filter[typeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[typeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[friendlyNameLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionLike]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "ACTIVE",
              "BLOCKED",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[dependsOnPermissionNamesMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[dependsOnPermissionNamesMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPermissionListResponse"
            }
          }
        },
        "tags": [
          "permission"
        ]
      }
    },
    "/service/permission/action/update": {
      "get": {
        "description": "Updates an existing permission object.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The name assigned to the permission",
            "in": "query",
            "name": "permissionName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "permission[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "permission[friendlyName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "permission[description]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "ACTIVE",
              "BLOCKED",
              "DELETED"
            ],
            "in": "query",
            "name": "permission[status]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "permission[dependsOnPermissionNames]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "permission[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "permission[permissionItemsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "permission[partnerGroup]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPermission"
            }
          }
        },
        "tags": [
          "permission"
        ]
      }
    },
    "/service/permissionitem/action/add": {
      "get": {
        "description": "Adds a new permission item object to the account.\n\t This action is available only to Kaltura system administrators.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaApiActionPermissionItem",
              "KalturaApiParameterPermissionItem"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "permissionItem[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "permissionItem[service]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaApiActionPermissionItem"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "permissionItem[action]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaApiActionPermissionItem"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "permissionItem[object]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaApiParameterPermissionItem"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "permissionItem[parameter]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaApiParameterPermissionItem"
            },
            "type": "string"
          },
          {
            "enum": [
              "all",
              "insert",
              "read",
              "update"
            ],
            "enumLabels": [
              "USAGE",
              "INSERT",
              "READ",
              "UPDATE"
            ],
            "in": "query",
            "name": "permissionItem[action]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaApiParameterPermissionItem"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPermissionItem"
            }
          }
        },
        "tags": [
          "permissionItem"
        ]
      }
    },
    "/service/permissionitem/action/delete": {
      "get": {
        "description": "Deletes an existing permission item object.\n\t This action is available only to Kaltura system administrators.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The permission item's unique identifier",
            "in": "query",
            "name": "permissionItemId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPermissionItem"
            }
          }
        },
        "tags": [
          "permissionItem"
        ]
      }
    },
    "/service/permissionitem/action/get": {
      "get": {
        "description": "Retrieves a permission item object using its ID.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The permission item's unique identifier",
            "in": "query",
            "name": "permissionItemId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPermissionItem"
            }
          }
        },
        "tags": [
          "permissionItem"
        ]
      }
    },
    "/service/permissionitem/action/list": {
      "get": {
        "description": "Lists permission item objects that are associated with an account.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaApiActionPermissionItemBaseFilter",
              "KalturaApiParameterPermissionItemBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "enum": [
              "kApiActionPermissionItem",
              "kApiParameterPermissionItem"
            ],
            "enumLabels": [
              "API_ACTION_ITEM",
              "API_PARAMETER_ITEM"
            ],
            "in": "query",
            "name": "filter[typeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[typeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPermissionItemListResponse"
            }
          }
        },
        "tags": [
          "permissionItem"
        ]
      }
    },
    "/service/permissionitem/action/update": {
      "get": {
        "description": "Updates an existing permission item object.\n\t This action is available only to Kaltura system administrators.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The permission item's unique identifier",
            "in": "query",
            "name": "permissionItemId",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "KalturaApiActionPermissionItem",
              "KalturaApiParameterPermissionItem"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "permissionItem[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "permissionItem[service]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaApiActionPermissionItem"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "permissionItem[action]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaApiActionPermissionItem"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "permissionItem[object]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaApiParameterPermissionItem"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "permissionItem[parameter]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaApiParameterPermissionItem"
            },
            "type": "string"
          },
          {
            "enum": [
              "all",
              "insert",
              "read",
              "update"
            ],
            "enumLabels": [
              "USAGE",
              "INSERT",
              "READ",
              "UPDATE"
            ],
            "in": "query",
            "name": "permissionItem[action]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaApiParameterPermissionItem"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPermissionItem"
            }
          }
        },
        "tags": [
          "permissionItem"
        ]
      }
    },
    "/service/playlist/action/add": {
      "get": {
        "description": "Add new playlist\n\t Note that all entries used in a playlist will become public and may appear in KalturaNetwork\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Content of the playlist - \n\t XML if the playlistType is dynamic \n\t text if the playlistType is static \n\t url if the playlistType is mRss",
            "in": "query",
            "name": "playlist[playlistContent]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "playlist[filters]",
            "type": "array"
          },
          {
            "description": "Maximum count of results to be returned in playlist execution",
            "in": "query",
            "name": "playlist[totalResults]",
            "type": "integer"
          },
          {
            "description": "Type of playlist",
            "enum": [
              3,
              10,
              101
            ],
            "enumLabels": [
              "STATIC_LIST",
              "DYNAMIC",
              "EXTERNAL"
            ],
            "in": "query",
            "name": "playlist[playlistType]",
            "type": "integer"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "playlist[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "playlist[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "playlist[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "playlist[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "playlist[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "playlist[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "playlist[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "playlist[categoriesIds]",
            "type": "string"
          },
          {
            "description": "The type of the entry, this is auto filled by the derived entry object",
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "playlist[type]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "playlist[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "playlist[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "playlist[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "playlist[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "playlist[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "playlist[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "playlist[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "playlist[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "playlist[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "playlist[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "playlist[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "playlist[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "playlist[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "playlist[entitledUsersPublish]",
            "type": "string"
          },
          {
            "description": "indicates that the playlist statistics attributes should be updated synchronously now",
            "in": "query",
            "name": "updateStats",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPlaylist"
            }
          }
        },
        "tags": [
          "playlist"
        ]
      }
    },
    "/service/playlist/action/clone": {
      "get": {
        "description": "Clone an existing playlist\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": " Id of the playlist to clone",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Content of the playlist - \n\t XML if the playlistType is dynamic \n\t text if the playlistType is static \n\t url if the playlistType is mRss",
            "in": "query",
            "name": "newPlaylist[playlistContent]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "newPlaylist[filters]",
            "type": "array"
          },
          {
            "description": "Maximum count of results to be returned in playlist execution",
            "in": "query",
            "name": "newPlaylist[totalResults]",
            "type": "integer"
          },
          {
            "description": "Type of playlist",
            "enum": [
              3,
              10,
              101
            ],
            "enumLabels": [
              "STATIC_LIST",
              "DYNAMIC",
              "EXTERNAL"
            ],
            "in": "query",
            "name": "newPlaylist[playlistType]",
            "type": "integer"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "newPlaylist[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "newPlaylist[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "newPlaylist[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "newPlaylist[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "newPlaylist[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "newPlaylist[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "newPlaylist[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "newPlaylist[categoriesIds]",
            "type": "string"
          },
          {
            "description": "The type of the entry, this is auto filled by the derived entry object",
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "newPlaylist[type]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "newPlaylist[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "newPlaylist[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "newPlaylist[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "newPlaylist[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "newPlaylist[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "newPlaylist[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "newPlaylist[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "newPlaylist[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "newPlaylist[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "newPlaylist[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "newPlaylist[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "newPlaylist[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "newPlaylist[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "newPlaylist[entitledUsersPublish]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPlaylist"
            }
          }
        },
        "tags": [
          "playlist"
        ]
      }
    },
    "/service/playlist/action/delete": {
      "get": {
        "description": "Delete existing playlist\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "playlist"
        ]
      }
    },
    "/service/playlist/action/execute": {
      "get": {
        "description": "Retrieve playlist for playing purpose\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "detailed",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaEntryContext"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The entry ID in the context of which the playlist should be built",
            "in": "query",
            "name": "playlistContext[entryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEntryContext"
            },
            "type": "string"
          },
          {
            "description": "Is this a redirected entry followup?",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "playlistContext[followEntryRedirect]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEntryContext"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[limit]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "playlist"
        ]
      }
    },
    "/service/playlist/action/executeFromContent": {
      "get": {
        "description": "Retrieve playlist for playing purpose, based on content\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "enum": [
              "3",
              "10",
              "101"
            ],
            "enumLabels": [
              "STATIC_LIST",
              "DYNAMIC",
              "EXTERNAL"
            ],
            "in": "query",
            "name": "playlistType",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "playlistContent",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "detailed",
            "required": false,
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "playlist"
        ]
      }
    },
    "/service/playlist/action/executeFromFilters": {
      "get": {
        "description": "Revrieve playlist for playing purpose, based on media entry filters\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "totalResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "detailed",
            "required": false,
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "playlist"
        ]
      }
    },
    "/service/playlist/action/get": {
      "get": {
        "description": "Retrieve a playlist\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired version of the data",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPlaylist"
            }
          }
        },
        "tags": [
          "playlist"
        ]
      }
    },
    "/service/playlist/action/getStatsFromContent": {
      "get": {
        "description": "Retrieve playlist statistics\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "enum": [
              "3",
              "10",
              "101"
            ],
            "enumLabels": [
              "STATIC_LIST",
              "DYNAMIC",
              "EXTERNAL"
            ],
            "in": "query",
            "name": "playlistType",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "playlistContent",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPlaylist"
            }
          }
        },
        "tags": [
          "playlist"
        ]
      }
    },
    "/service/playlist/action/list": {
      "get": {
        "description": "List available playlists\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPlaylistListResponse"
            }
          }
        },
        "tags": [
          "playlist"
        ]
      }
    },
    "/service/playlist/action/update": {
      "get": {
        "description": "Update existing playlist\n\t Note - you cannot change playlist type. updated playlist must be of the same type.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Content of the playlist - \n\t XML if the playlistType is dynamic \n\t text if the playlistType is static \n\t url if the playlistType is mRss",
            "in": "query",
            "name": "playlist[playlistContent]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "playlist[filters]",
            "type": "array"
          },
          {
            "description": "Maximum count of results to be returned in playlist execution",
            "in": "query",
            "name": "playlist[totalResults]",
            "type": "integer"
          },
          {
            "description": "Type of playlist",
            "enum": [
              3,
              10,
              101
            ],
            "enumLabels": [
              "STATIC_LIST",
              "DYNAMIC",
              "EXTERNAL"
            ],
            "in": "query",
            "name": "playlist[playlistType]",
            "type": "integer"
          },
          {
            "description": "Entry name (Min 1 chars)",
            "in": "query",
            "name": "playlist[name]",
            "type": "string"
          },
          {
            "description": "Entry description",
            "in": "query",
            "name": "playlist[description]",
            "type": "string"
          },
          {
            "description": "The ID of the user who is the owner of this entry",
            "in": "query",
            "name": "playlist[userId]",
            "type": "string"
          },
          {
            "description": "The ID of the user who created this entry",
            "in": "query",
            "name": "playlist[creatorId]",
            "type": "string"
          },
          {
            "description": "Entry tags",
            "in": "query",
            "name": "playlist[tags]",
            "type": "string"
          },
          {
            "description": "Entry admin tags can be updated only by administrators",
            "in": "query",
            "name": "playlist[adminTags]",
            "type": "string"
          },
          {
            "description": "Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "playlist[categories]",
            "type": "string"
          },
          {
            "description": "Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.",
            "in": "query",
            "name": "playlist[categoriesIds]",
            "type": "string"
          },
          {
            "description": "The type of the entry, this is auto filled by the derived entry object",
            "enum": [
              "-1",
              "externalMedia.externalMedia",
              "1",
              "2",
              "5",
              "6",
              "7",
              "8",
              "10"
            ],
            "enumLabels": [
              "AUTOMATIC",
              "EXTERNAL_MEDIA",
              "MEDIA_CLIP",
              "MIX",
              "PLAYLIST",
              "DATA",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "playlist[type]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "playlist[groupId]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "playlist[partnerData]",
            "type": "string"
          },
          {
            "description": "License type used for this entry",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "playlist[licenseType]",
            "type": "integer"
          },
          {
            "description": "The Access Control ID assigned to this entry (null when not set, send -1 to remove)",
            "in": "query",
            "name": "playlist[accessControlId]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling start date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "playlist[startDate]",
            "type": "integer"
          },
          {
            "description": "Entry scheduling end date (null when not set, send -1 to remove)",
            "in": "query",
            "name": "playlist[endDate]",
            "type": "integer"
          },
          {
            "description": "Entry external reference id",
            "in": "query",
            "name": "playlist[referenceId]",
            "type": "string"
          },
          {
            "description": "Can be used to store various partner related data as a numeric value",
            "in": "query",
            "name": "playlist[partnerSortValue]",
            "type": "integer"
          },
          {
            "description": "Override the default ingestion profile",
            "in": "query",
            "name": "playlist[conversionProfileId]",
            "type": "integer"
          },
          {
            "description": "IF not empty, points to an entry ID the should replace this current entry's id.",
            "in": "query",
            "name": "playlist[redirectEntryId]",
            "type": "string"
          },
          {
            "description": "ID of source root entry, used for defining entires association",
            "in": "query",
            "name": "playlist[parentEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "playlist[operationAttributes]",
            "type": "array"
          },
          {
            "description": "list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "playlist[entitledUsersEdit]",
            "type": "string"
          },
          {
            "description": "list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only",
            "in": "query",
            "name": "playlist[entitledUsersPublish]",
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "updateStats",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPlaylist"
            }
          }
        },
        "tags": [
          "playlist"
        ]
      }
    },
    "/service/quiz_quiz/action/add": {
      "get": {
        "description": "Allows to add a quiz to an entry\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "quiz[uiAttributes]",
            "type": "array"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "quiz[showResultOnAnswer]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "quiz[showCorrectKeyOnAnswer]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "quiz[allowAnswerUpdate]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "quiz[showCorrectAfterSubmission]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaQuiz"
            }
          }
        },
        "tags": [
          "quiz"
        ]
      }
    },
    "/service/quiz_quiz/action/get": {
      "get": {
        "description": "Allows to get a quiz\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaQuiz"
            }
          }
        },
        "tags": [
          "quiz"
        ]
      }
    },
    "/service/quiz_quiz/action/list": {
      "get": {
        "description": "List quiz objects by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "This filter should be in use for retrieving only a specific quiz entry (identified by its entryId).",
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "description": "This filter should be in use for retrieving few specific quiz entries (string should include comma separated list of entryId strings).",
            "in": "query",
            "name": "filter[entryIdIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaQuizListResponse"
            }
          }
        },
        "tags": [
          "quiz"
        ]
      }
    },
    "/service/quiz_quiz/action/update": {
      "get": {
        "description": "Allows to update a quiz\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "quiz[uiAttributes]",
            "type": "array"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "quiz[showResultOnAnswer]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "quiz[showCorrectKeyOnAnswer]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "quiz[allowAnswerUpdate]",
            "type": "integer"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "quiz[showCorrectAfterSubmission]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaQuiz"
            }
          }
        },
        "tags": [
          "quiz"
        ]
      }
    },
    "/service/report/action/execute": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaReportResponse"
            }
          }
        },
        "tags": [
          "report"
        ]
      }
    },
    "/service/report/action/getBaseTotal": {
      "get": {
        "description": "report getBaseTotal action allows to get a the total base for storage reports  \n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": " \n\n",
            "enum": [
              "quiz.QUIZ",
              "quiz.self::QUIZ_USER_PERCENTAGE",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "201"
            ],
            "enumLabels": [
              "QUIZ",
              "QUIZ_USER_PERCENTAGE",
              "TOP_CONTENT",
              "CONTENT_DROPOFF",
              "CONTENT_INTERACTIONS",
              "MAP_OVERLAY",
              "TOP_CONTRIBUTORS",
              "TOP_SYNDICATION",
              "CONTENT_CONTRIBUTIONS",
              "USER_ENGAGEMENT",
              "SPEFICIC_USER_ENGAGEMENT",
              "USER_TOP_CONTENT",
              "USER_CONTENT_DROPOFF",
              "USER_CONTENT_INTERACTIONS",
              "APPLICATIONS",
              "USER_USAGE",
              "SPECIFIC_USER_USAGE",
              "VAR_USAGE",
              "TOP_CREATORS",
              "PLATFORMS",
              "OPERATION_SYSTEM",
              "BROWSERS",
              "LIVE",
              "TOP_PLAYBACK_CONTEXT",
              "PARTNER_USAGE"
            ],
            "in": "query",
            "name": "reportType",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaEndUserReportInputFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Search keywords to filter objects",
            "in": "query",
            "name": "reportInputFilter[keywords]",
            "type": "string"
          },
          {
            "description": "Search keywords in onjects tags",
            "in": "query",
            "name": "reportInputFilter[searchInTags]",
            "type": "boolean"
          },
          {
            "description": "Search keywords in onjects admin tags",
            "in": "query",
            "name": "reportInputFilter[searchInAdminTags]",
            "type": "boolean"
          },
          {
            "description": "Search onjects in specified categories",
            "in": "query",
            "name": "reportInputFilter[categories]",
            "type": "string"
          },
          {
            "description": "Time zone offset in minutes",
            "in": "query",
            "name": "reportInputFilter[timeZoneOffset]",
            "type": "integer"
          },
          {
            "description": "Aggregated results according to interval",
            "enum": [
              "days",
              "months"
            ],
            "enumLabels": [
              "DAYS",
              "MONTHS"
            ],
            "in": "query",
            "name": "reportInputFilter[interval]",
            "type": "string"
          },
          {
            "description": "Start date as Unix timestamp (In seconds)",
            "in": "query",
            "name": "reportInputFilter[fromDate]",
            "type": "integer"
          },
          {
            "description": "End date as Unix timestamp (In seconds)",
            "in": "query",
            "name": "reportInputFilter[toDate]",
            "type": "integer"
          },
          {
            "description": "Start day as string (YYYYMMDD)",
            "in": "query",
            "name": "reportInputFilter[fromDay]",
            "type": "string"
          },
          {
            "description": "End date as string (YYYYMMDD)",
            "in": "query",
            "name": "reportInputFilter[toDay]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[application]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[userIds]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[playbackContext]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[ancestorPlaybackContext]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "description": "- one ID or more (separated by ',') of specific objects to query",
            "in": "query",
            "name": "objectIds",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "report"
        ]
      }
    },
    "/service/report/action/getCsv": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "report"
        ]
      }
    },
    "/service/report/action/getCsvFromStringParams": {
      "get": {
        "description": "Returns report CSV file executed by string params with the following convention: param1=value1;param2=value2 \n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "params",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "report"
        ]
      }
    },
    "/service/report/action/getGraphs": {
      "get": {
        "description": "report getGraphs action allows to get a graph data for a specific report. \n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": " \n\n",
            "enum": [
              "quiz.QUIZ",
              "quiz.self::QUIZ_USER_PERCENTAGE",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "201"
            ],
            "enumLabels": [
              "QUIZ",
              "QUIZ_USER_PERCENTAGE",
              "TOP_CONTENT",
              "CONTENT_DROPOFF",
              "CONTENT_INTERACTIONS",
              "MAP_OVERLAY",
              "TOP_CONTRIBUTORS",
              "TOP_SYNDICATION",
              "CONTENT_CONTRIBUTIONS",
              "USER_ENGAGEMENT",
              "SPEFICIC_USER_ENGAGEMENT",
              "USER_TOP_CONTENT",
              "USER_CONTENT_DROPOFF",
              "USER_CONTENT_INTERACTIONS",
              "APPLICATIONS",
              "USER_USAGE",
              "SPECIFIC_USER_USAGE",
              "VAR_USAGE",
              "TOP_CREATORS",
              "PLATFORMS",
              "OPERATION_SYSTEM",
              "BROWSERS",
              "LIVE",
              "TOP_PLAYBACK_CONTEXT",
              "PARTNER_USAGE"
            ],
            "in": "query",
            "name": "reportType",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaEndUserReportInputFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Search keywords to filter objects",
            "in": "query",
            "name": "reportInputFilter[keywords]",
            "type": "string"
          },
          {
            "description": "Search keywords in onjects tags",
            "in": "query",
            "name": "reportInputFilter[searchInTags]",
            "type": "boolean"
          },
          {
            "description": "Search keywords in onjects admin tags",
            "in": "query",
            "name": "reportInputFilter[searchInAdminTags]",
            "type": "boolean"
          },
          {
            "description": "Search onjects in specified categories",
            "in": "query",
            "name": "reportInputFilter[categories]",
            "type": "string"
          },
          {
            "description": "Time zone offset in minutes",
            "in": "query",
            "name": "reportInputFilter[timeZoneOffset]",
            "type": "integer"
          },
          {
            "description": "Aggregated results according to interval",
            "enum": [
              "days",
              "months"
            ],
            "enumLabels": [
              "DAYS",
              "MONTHS"
            ],
            "in": "query",
            "name": "reportInputFilter[interval]",
            "type": "string"
          },
          {
            "description": "Start date as Unix timestamp (In seconds)",
            "in": "query",
            "name": "reportInputFilter[fromDate]",
            "type": "integer"
          },
          {
            "description": "End date as Unix timestamp (In seconds)",
            "in": "query",
            "name": "reportInputFilter[toDate]",
            "type": "integer"
          },
          {
            "description": "Start day as string (YYYYMMDD)",
            "in": "query",
            "name": "reportInputFilter[fromDay]",
            "type": "string"
          },
          {
            "description": "End date as string (YYYYMMDD)",
            "in": "query",
            "name": "reportInputFilter[toDay]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[application]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[userIds]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[playbackContext]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[ancestorPlaybackContext]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "dimension",
            "required": false,
            "type": "string"
          },
          {
            "description": "- one ID or more (separated by ',') of specific objects to query",
            "in": "query",
            "name": "objectIds",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "report"
        ]
      }
    },
    "/service/report/action/getTable": {
      "get": {
        "description": "report getTable action allows to get a graph data for a specific report. \n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": " \n\n",
            "enum": [
              "quiz.QUIZ",
              "quiz.self::QUIZ_USER_PERCENTAGE",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "201"
            ],
            "enumLabels": [
              "QUIZ",
              "QUIZ_USER_PERCENTAGE",
              "TOP_CONTENT",
              "CONTENT_DROPOFF",
              "CONTENT_INTERACTIONS",
              "MAP_OVERLAY",
              "TOP_CONTRIBUTORS",
              "TOP_SYNDICATION",
              "CONTENT_CONTRIBUTIONS",
              "USER_ENGAGEMENT",
              "SPEFICIC_USER_ENGAGEMENT",
              "USER_TOP_CONTENT",
              "USER_CONTENT_DROPOFF",
              "USER_CONTENT_INTERACTIONS",
              "APPLICATIONS",
              "USER_USAGE",
              "SPECIFIC_USER_USAGE",
              "VAR_USAGE",
              "TOP_CREATORS",
              "PLATFORMS",
              "OPERATION_SYSTEM",
              "BROWSERS",
              "LIVE",
              "TOP_PLAYBACK_CONTEXT",
              "PARTNER_USAGE"
            ],
            "in": "query",
            "name": "reportType",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaEndUserReportInputFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Search keywords to filter objects",
            "in": "query",
            "name": "reportInputFilter[keywords]",
            "type": "string"
          },
          {
            "description": "Search keywords in onjects tags",
            "in": "query",
            "name": "reportInputFilter[searchInTags]",
            "type": "boolean"
          },
          {
            "description": "Search keywords in onjects admin tags",
            "in": "query",
            "name": "reportInputFilter[searchInAdminTags]",
            "type": "boolean"
          },
          {
            "description": "Search onjects in specified categories",
            "in": "query",
            "name": "reportInputFilter[categories]",
            "type": "string"
          },
          {
            "description": "Time zone offset in minutes",
            "in": "query",
            "name": "reportInputFilter[timeZoneOffset]",
            "type": "integer"
          },
          {
            "description": "Aggregated results according to interval",
            "enum": [
              "days",
              "months"
            ],
            "enumLabels": [
              "DAYS",
              "MONTHS"
            ],
            "in": "query",
            "name": "reportInputFilter[interval]",
            "type": "string"
          },
          {
            "description": "Start date as Unix timestamp (In seconds)",
            "in": "query",
            "name": "reportInputFilter[fromDate]",
            "type": "integer"
          },
          {
            "description": "End date as Unix timestamp (In seconds)",
            "in": "query",
            "name": "reportInputFilter[toDate]",
            "type": "integer"
          },
          {
            "description": "Start day as string (YYYYMMDD)",
            "in": "query",
            "name": "reportInputFilter[fromDay]",
            "type": "string"
          },
          {
            "description": "End date as string (YYYYMMDD)",
            "in": "query",
            "name": "reportInputFilter[toDay]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[application]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[userIds]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[playbackContext]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[ancestorPlaybackContext]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "order",
            "required": false,
            "type": "string"
          },
          {
            "description": "- one ID or more (separated by ',') of specific objects to query",
            "in": "query",
            "name": "objectIds",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaReportTable"
            }
          }
        },
        "tags": [
          "report"
        ]
      }
    },
    "/service/report/action/getTotal": {
      "get": {
        "description": "report getTotal action allows to get a graph data for a specific report. \n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": " \n\n",
            "enum": [
              "quiz.QUIZ",
              "quiz.self::QUIZ_USER_PERCENTAGE",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "201"
            ],
            "enumLabels": [
              "QUIZ",
              "QUIZ_USER_PERCENTAGE",
              "TOP_CONTENT",
              "CONTENT_DROPOFF",
              "CONTENT_INTERACTIONS",
              "MAP_OVERLAY",
              "TOP_CONTRIBUTORS",
              "TOP_SYNDICATION",
              "CONTENT_CONTRIBUTIONS",
              "USER_ENGAGEMENT",
              "SPEFICIC_USER_ENGAGEMENT",
              "USER_TOP_CONTENT",
              "USER_CONTENT_DROPOFF",
              "USER_CONTENT_INTERACTIONS",
              "APPLICATIONS",
              "USER_USAGE",
              "SPECIFIC_USER_USAGE",
              "VAR_USAGE",
              "TOP_CREATORS",
              "PLATFORMS",
              "OPERATION_SYSTEM",
              "BROWSERS",
              "LIVE",
              "TOP_PLAYBACK_CONTEXT",
              "PARTNER_USAGE"
            ],
            "in": "query",
            "name": "reportType",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaEndUserReportInputFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Search keywords to filter objects",
            "in": "query",
            "name": "reportInputFilter[keywords]",
            "type": "string"
          },
          {
            "description": "Search keywords in onjects tags",
            "in": "query",
            "name": "reportInputFilter[searchInTags]",
            "type": "boolean"
          },
          {
            "description": "Search keywords in onjects admin tags",
            "in": "query",
            "name": "reportInputFilter[searchInAdminTags]",
            "type": "boolean"
          },
          {
            "description": "Search onjects in specified categories",
            "in": "query",
            "name": "reportInputFilter[categories]",
            "type": "string"
          },
          {
            "description": "Time zone offset in minutes",
            "in": "query",
            "name": "reportInputFilter[timeZoneOffset]",
            "type": "integer"
          },
          {
            "description": "Aggregated results according to interval",
            "enum": [
              "days",
              "months"
            ],
            "enumLabels": [
              "DAYS",
              "MONTHS"
            ],
            "in": "query",
            "name": "reportInputFilter[interval]",
            "type": "string"
          },
          {
            "description": "Start date as Unix timestamp (In seconds)",
            "in": "query",
            "name": "reportInputFilter[fromDate]",
            "type": "integer"
          },
          {
            "description": "End date as Unix timestamp (In seconds)",
            "in": "query",
            "name": "reportInputFilter[toDate]",
            "type": "integer"
          },
          {
            "description": "Start day as string (YYYYMMDD)",
            "in": "query",
            "name": "reportInputFilter[fromDay]",
            "type": "string"
          },
          {
            "description": "End date as string (YYYYMMDD)",
            "in": "query",
            "name": "reportInputFilter[toDay]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[application]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[userIds]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[playbackContext]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[ancestorPlaybackContext]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "description": "- one ID or more (separated by ',') of specific objects to query",
            "in": "query",
            "name": "objectIds",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaReportTotal"
            }
          }
        },
        "tags": [
          "report"
        ]
      }
    },
    "/service/report/action/getUrlForReportAsCsv": {
      "get": {
        "description": "will create a Csv file for the given report and return the URL to access it\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The title of the report to display at top of CSV ",
            "in": "query",
            "name": "reportTitle",
            "required": false,
            "type": "string"
          },
          {
            "description": "The text of the filter of the report",
            "in": "query",
            "name": "reportText",
            "required": false,
            "type": "string"
          },
          {
            "description": "The headers of the columns - a map between the enumerations on the server side and the their display text  ",
            "in": "query",
            "name": "headers",
            "required": false,
            "type": "string"
          },
          {
            "description": " \n\n",
            "enum": [
              "quiz.QUIZ",
              "quiz.self::QUIZ_USER_PERCENTAGE",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "201"
            ],
            "enumLabels": [
              "QUIZ",
              "QUIZ_USER_PERCENTAGE",
              "TOP_CONTENT",
              "CONTENT_DROPOFF",
              "CONTENT_INTERACTIONS",
              "MAP_OVERLAY",
              "TOP_CONTRIBUTORS",
              "TOP_SYNDICATION",
              "CONTENT_CONTRIBUTIONS",
              "USER_ENGAGEMENT",
              "SPEFICIC_USER_ENGAGEMENT",
              "USER_TOP_CONTENT",
              "USER_CONTENT_DROPOFF",
              "USER_CONTENT_INTERACTIONS",
              "APPLICATIONS",
              "USER_USAGE",
              "SPECIFIC_USER_USAGE",
              "VAR_USAGE",
              "TOP_CREATORS",
              "PLATFORMS",
              "OPERATION_SYSTEM",
              "BROWSERS",
              "LIVE",
              "TOP_PLAYBACK_CONTEXT",
              "PARTNER_USAGE"
            ],
            "in": "query",
            "name": "reportType",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaEndUserReportInputFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Search keywords to filter objects",
            "in": "query",
            "name": "reportInputFilter[keywords]",
            "type": "string"
          },
          {
            "description": "Search keywords in onjects tags",
            "in": "query",
            "name": "reportInputFilter[searchInTags]",
            "type": "boolean"
          },
          {
            "description": "Search keywords in onjects admin tags",
            "in": "query",
            "name": "reportInputFilter[searchInAdminTags]",
            "type": "boolean"
          },
          {
            "description": "Search onjects in specified categories",
            "in": "query",
            "name": "reportInputFilter[categories]",
            "type": "string"
          },
          {
            "description": "Time zone offset in minutes",
            "in": "query",
            "name": "reportInputFilter[timeZoneOffset]",
            "type": "integer"
          },
          {
            "description": "Aggregated results according to interval",
            "enum": [
              "days",
              "months"
            ],
            "enumLabels": [
              "DAYS",
              "MONTHS"
            ],
            "in": "query",
            "name": "reportInputFilter[interval]",
            "type": "string"
          },
          {
            "description": "Start date as Unix timestamp (In seconds)",
            "in": "query",
            "name": "reportInputFilter[fromDate]",
            "type": "integer"
          },
          {
            "description": "End date as Unix timestamp (In seconds)",
            "in": "query",
            "name": "reportInputFilter[toDate]",
            "type": "integer"
          },
          {
            "description": "Start day as string (YYYYMMDD)",
            "in": "query",
            "name": "reportInputFilter[fromDay]",
            "type": "string"
          },
          {
            "description": "End date as string (YYYYMMDD)",
            "in": "query",
            "name": "reportInputFilter[toDay]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[application]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[userIds]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[playbackContext]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "reportInputFilter[ancestorPlaybackContext]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "description": "\t  ",
            "in": "query",
            "name": "dimension",
            "required": false,
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "order",
            "required": false,
            "type": "string"
          },
          {
            "description": "- one ID or more (separated by ',') of specific objects to query",
            "in": "query",
            "name": "objectIds",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "report"
        ]
      }
    },
    "/service/report/action/serve": {
      "get": {
        "description": "Will serve a requested report\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "- the requested id",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "report"
        ]
      }
    },
    "/service/responseprofile/action/add": {
      "get": {
        "description": "Add new response profile\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Unique system name",
            "in": "query",
            "name": "addResponseProfile[systemName]",
            "type": "string"
          },
          {
            "description": "Friendly name",
            "in": "query",
            "name": "addResponseProfile[name]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "INCLUDE_FIELDS",
              "EXCLUDE_FIELDS"
            ],
            "in": "query",
            "name": "addResponseProfile[type]",
            "type": "integer"
          },
          {
            "description": "Comma separated fields list to be included or excluded",
            "in": "query",
            "name": "addResponseProfile[fields]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "addResponseProfile[filter]"
          },
          {
            "in": "query",
            "name": "addResponseProfile[pager]"
          },
          {
            "in": "query",
            "name": "addResponseProfile[relatedProfiles]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "addResponseProfile[mappings]",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaResponseProfile"
            }
          }
        },
        "tags": [
          "responseProfile"
        ]
      }
    },
    "/service/responseprofile/action/delete": {
      "get": {
        "description": "Delete response profile by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "responseProfile"
        ]
      }
    },
    "/service/responseprofile/action/get": {
      "get": {
        "description": "Get response profile by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaResponseProfile"
            }
          }
        },
        "tags": [
          "responseProfile"
        ]
      }
    },
    "/service/responseprofile/action/list": {
      "get": {
        "description": "List response profiles by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaResponseProfileListResponse"
            }
          }
        },
        "tags": [
          "responseProfile"
        ]
      }
    },
    "/service/responseprofile/action/recalculate": {
      "get": {
        "description": "Recalculate response profile cached objects\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Maximum number of keys to recalculate",
            "in": "query",
            "name": "options[limit]",
            "type": "integer"
          },
          {
            "description": "Class name",
            "in": "query",
            "name": "options[cachedObjectType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "options[objectId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "options[startObjectKey]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "options[endObjectKey]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "options[jobCreatedAt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "options[isFirstLoop]",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaResponseProfileCacheRecalculateResults"
            }
          }
        },
        "tags": [
          "responseProfile"
        ]
      }
    },
    "/service/responseprofile/action/update": {
      "get": {
        "description": "Update response profile by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Unique system name",
            "in": "query",
            "name": "updateResponseProfile[systemName]",
            "type": "string"
          },
          {
            "description": "Friendly name",
            "in": "query",
            "name": "updateResponseProfile[name]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "INCLUDE_FIELDS",
              "EXCLUDE_FIELDS"
            ],
            "in": "query",
            "name": "updateResponseProfile[type]",
            "type": "integer"
          },
          {
            "description": "Comma separated fields list to be included or excluded",
            "in": "query",
            "name": "updateResponseProfile[fields]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "updateResponseProfile[filter]"
          },
          {
            "in": "query",
            "name": "updateResponseProfile[pager]"
          },
          {
            "in": "query",
            "name": "updateResponseProfile[relatedProfiles]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "updateResponseProfile[mappings]",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaResponseProfile"
            }
          }
        },
        "tags": [
          "responseProfile"
        ]
      }
    },
    "/service/responseprofile/action/updateStatus": {
      "get": {
        "description": "Update response profile status by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaResponseProfile"
            }
          }
        },
        "tags": [
          "responseProfile"
        ]
      }
    },
    "/service/scheduledtask_scheduledtaskprofile/action/add": {
      "get": {
        "description": "Add a new scheduled task profile\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "scheduledTaskProfile[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scheduledTaskProfile[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scheduledTaskProfile[description]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "enumLabels": [
              "DISABLED",
              "ACTIVE",
              "DELETED",
              "SUSPENDED",
              "DRY_RUN_ONLY"
            ],
            "in": "query",
            "name": "scheduledTaskProfile[status]",
            "type": "integer"
          },
          {
            "description": "The type of engine to use to list objects using the given \"objectFilter\"",
            "enum": [
              "1"
            ],
            "enumLabels": [
              "ENTRY"
            ],
            "in": "query",
            "name": "scheduledTaskProfile[objectFilterEngineType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scheduledTaskProfile[objectFilter]"
          },
          {
            "in": "query",
            "name": "scheduledTaskProfile[objectTasks]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "scheduledTaskProfile[lastExecutionStartedAt]",
            "type": "integer"
          },
          {
            "description": "The maximum number of result count allowed to be processed by this profile per execution",
            "in": "query",
            "name": "scheduledTaskProfile[maxTotalCountAllowed]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaScheduledTaskProfile"
            }
          }
        },
        "tags": [
          "scheduledTaskProfile"
        ]
      }
    },
    "/service/scheduledtask_scheduledtaskprofile/action/delete": {
      "get": {
        "description": "Delete a scheduled task profile\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "scheduledTaskProfile"
        ]
      }
    },
    "/service/scheduledtask_scheduledtaskprofile/action/get": {
      "get": {
        "description": "Retrieve a scheduled task profile by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaScheduledTaskProfile"
            }
          }
        },
        "tags": [
          "scheduledTaskProfile"
        ]
      }
    },
    "/service/scheduledtask_scheduledtaskprofile/action/getDryRunResults": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "requestId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaObjectListResponse"
            }
          }
        },
        "tags": [
          "scheduledTaskProfile"
        ]
      }
    },
    "/service/scheduledtask_scheduledtaskprofile/action/list": {
      "get": {
        "description": "List scheduled task profiles\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "enumLabels": [
              "DISABLED",
              "ACTIVE",
              "DELETED",
              "SUSPENDED",
              "DRY_RUN_ONLY"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[lastExecutionStartedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[lastExecutionStartedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaScheduledTaskProfileListResponse"
            }
          }
        },
        "tags": [
          "scheduledTaskProfile"
        ]
      }
    },
    "/service/scheduledtask_scheduledtaskprofile/action/requestDryRun": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "scheduledTaskProfileId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "scheduledTaskProfile"
        ]
      }
    },
    "/service/scheduledtask_scheduledtaskprofile/action/update": {
      "get": {
        "description": "Update an existing scheduled task profile\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "scheduledTaskProfile[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scheduledTaskProfile[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scheduledTaskProfile[description]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "enumLabels": [
              "DISABLED",
              "ACTIVE",
              "DELETED",
              "SUSPENDED",
              "DRY_RUN_ONLY"
            ],
            "in": "query",
            "name": "scheduledTaskProfile[status]",
            "type": "integer"
          },
          {
            "description": "The type of engine to use to list objects using the given \"objectFilter\"",
            "enum": [
              "1"
            ],
            "enumLabels": [
              "ENTRY"
            ],
            "in": "query",
            "name": "scheduledTaskProfile[objectFilterEngineType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scheduledTaskProfile[objectFilter]"
          },
          {
            "in": "query",
            "name": "scheduledTaskProfile[objectTasks]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "scheduledTaskProfile[lastExecutionStartedAt]",
            "type": "integer"
          },
          {
            "description": "The maximum number of result count allowed to be processed by this profile per execution",
            "in": "query",
            "name": "scheduledTaskProfile[maxTotalCountAllowed]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaScheduledTaskProfile"
            }
          }
        },
        "tags": [
          "scheduledTaskProfile"
        ]
      }
    },
    "/service/schema/action/serve": {
      "get": {
        "description": "Serves the requested XSD according to the type and name. \n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": " \n\n",
            "enum": [
              "bulkUploadXml.bulkUploadResultXML",
              "bulkUploadXml.bulkUploadXML",
              "cuePoint.ingestAPI",
              "cuePoint.serveAPI",
              "dropFolderXmlBulkUpload.dropFolderXml",
              "syndication"
            ],
            "enumLabels": [
              "BULK_UPLOAD_RESULT_XML",
              "BULK_UPLOAD_XML",
              "INGEST_API",
              "SERVE_API",
              "DROP_FOLDER_XML",
              "SYNDICATION"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "schema"
        ]
      }
    },
    "/service/search/action/externalLogin": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "enum": [
              "3",
              "4",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "20",
              "21",
              "22",
              "23",
              "24",
              "28",
              "100"
            ],
            "enumLabels": [
              "FLICKR",
              "YOUTUBE",
              "MYSPACE",
              "PHOTOBUCKET",
              "JAMENDO",
              "CCMIXTER",
              "NYPL",
              "CURRENT",
              "MEDIA_COMMONS",
              "KALTURA",
              "KALTURA_USER_CLIPS",
              "ARCHIVE_ORG",
              "KALTURA_PARTNER",
              "METACAFE",
              "SEARCH_PROXY",
              "PARTNER_SPECIFIC"
            ],
            "in": "query",
            "name": "searchSource",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "userName",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "password",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSearchAuthData"
            }
          }
        },
        "tags": [
          "search"
        ]
      }
    },
    "/service/search/action/getMediaInfo": {
      "get": {
        "description": "Retrieve extra information about media found in search action\n\t Some providers return only part of the fields needed to create entry from, use this action to get the rest of the fields.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "searchResult[id]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[title]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[thumbUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[description]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[url]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[sourceLink]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[credit]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "searchResult[licenseType]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "searchResult[flashPlaybackType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[fileExt]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[keyWords]",
            "type": "string"
          },
          {
            "enum": [
              3,
              4,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              20,
              21,
              22,
              23,
              24,
              28,
              100
            ],
            "enumLabels": [
              "FLICKR",
              "YOUTUBE",
              "MYSPACE",
              "PHOTOBUCKET",
              "JAMENDO",
              "CCMIXTER",
              "NYPL",
              "CURRENT",
              "MEDIA_COMMONS",
              "KALTURA",
              "KALTURA_USER_CLIPS",
              "ARCHIVE_ORG",
              "KALTURA_PARTNER",
              "METACAFE",
              "SEARCH_PROXY",
              "PARTNER_SPECIFIC"
            ],
            "in": "query",
            "name": "searchResult[searchSource]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "searchResult[mediaType]",
            "type": "integer"
          },
          {
            "description": "Use this field to pass dynamic data for searching\n\t For example - if you set this field to \"mymovies_$partner_id\"\n\t The $partner_id will be automatically replcaed with your real partner Id",
            "in": "query",
            "name": "searchResult[extraData]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchResult[authData]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSearchResult"
            }
          }
        },
        "tags": [
          "search"
        ]
      }
    },
    "/service/search/action/search": {
      "get": {
        "description": "Search for media in one of the supported media providers\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaSearchResult"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "search[keyWords]",
            "type": "string"
          },
          {
            "enum": [
              3,
              4,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              20,
              21,
              22,
              23,
              24,
              28,
              100
            ],
            "enumLabels": [
              "FLICKR",
              "YOUTUBE",
              "MYSPACE",
              "PHOTOBUCKET",
              "JAMENDO",
              "CCMIXTER",
              "NYPL",
              "CURRENT",
              "MEDIA_COMMONS",
              "KALTURA",
              "KALTURA_USER_CLIPS",
              "ARCHIVE_ORG",
              "KALTURA_PARTNER",
              "METACAFE",
              "SEARCH_PROXY",
              "PARTNER_SPECIFIC"
            ],
            "in": "query",
            "name": "search[searchSource]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              5,
              201,
              202,
              203,
              204
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "search[mediaType]",
            "type": "integer"
          },
          {
            "description": "Use this field to pass dynamic data for searching\n\t For example - if you set this field to \"mymovies_$partner_id\"\n\t The $partner_id will be automatically replcaed with your real partner Id",
            "in": "query",
            "name": "search[extraData]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search[authData]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search[id]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSearchResult"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "search[title]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSearchResult"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "search[thumbUrl]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSearchResult"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "search[description]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSearchResult"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "search[tags]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSearchResult"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "search[url]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSearchResult"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "search[sourceLink]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSearchResult"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "search[credit]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSearchResult"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "enumLabels": [
              "UNKNOWN",
              "NONE",
              "COPYRIGHTED",
              "PUBLIC_DOMAIN",
              "CREATIVECOMMONS_ATTRIBUTION",
              "CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE",
              "CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES",
              "GFDL",
              "GPL",
              "AFFERO_GPL",
              "LGPL",
              "BSD",
              "APACHE",
              "MOZILLA"
            ],
            "in": "query",
            "name": "search[licenseType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSearchResult"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "search[flashPlaybackType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSearchResult"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "search[fileExt]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSearchResult"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSearchResultResponse"
            }
          }
        },
        "tags": [
          "search"
        ]
      }
    },
    "/service/search/action/searchUrl": {
      "get": {
        "description": "Search for media given a specific URL\n\t Kaltura supports a searchURL action on some of the media providers.\n\t This action will return a KalturaSearchResult object based on a given URL (assuming the media provider is supported)\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "enum": [
              "1",
              "2",
              "5",
              "201",
              "202",
              "203",
              "204"
            ],
            "enumLabels": [
              "VIDEO",
              "IMAGE",
              "AUDIO",
              "LIVE_STREAM_FLASH",
              "LIVE_STREAM_WINDOWS_MEDIA",
              "LIVE_STREAM_REAL_MEDIA",
              "LIVE_STREAM_QUICKTIME"
            ],
            "in": "query",
            "name": "mediaType",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "url",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSearchResult"
            }
          }
        },
        "tags": [
          "search"
        ]
      }
    },
    "/service/session/action/end": {
      "get": {
        "description": "End a session with the Kaltura server, making the current KS invalid.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "session"
        ]
      }
    },
    "/service/session/action/get": {
      "get": {
        "description": "Parse session key and return its info\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The KS to be parsed, keep it empty to use current session.",
            "in": "query",
            "name": "session",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSessionInfo"
            }
          }
        },
        "tags": [
          "session"
        ]
      }
    },
    "/service/session/action/impersonate": {
      "get": {
        "description": "Start an impersonated session with Kaltura's server.\n\t The result KS is the session key that you should pass to all services that requires a ticket.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "- should be the secret (admin or user) of the original partnerId (not impersonatedPartnerId).",
            "in": "query",
            "name": "secret",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "impersonatedPartnerId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "- impersonated userId",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "enum": [
              "0",
              "2"
            ],
            "enumLabels": [
              "USER",
              "ADMIN"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "partnerId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "KS expiry time in seconds",
            "in": "query",
            "name": "expiry",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "privileges",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "session"
        ]
      }
    },
    "/service/session/action/impersonateByKs": {
      "get": {
        "description": "Start an impersonated session with Kaltura's server.\n\t The result KS info contains the session key that you should pass to all services that requires a ticket.\n\t Type, expiry and privileges won't be changed if they're not set\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The old KS of the impersonated partner",
            "in": "query",
            "name": "session",
            "required": false,
            "type": "string"
          },
          {
            "description": "Type of the new KS \n\n",
            "enum": [
              "0",
              "2"
            ],
            "enumLabels": [
              "USER",
              "ADMIN"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Expiry time in seconds of the new KS",
            "in": "query",
            "name": "expiry",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Privileges of the new KS",
            "in": "query",
            "name": "privileges",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSessionInfo"
            }
          }
        },
        "tags": [
          "session"
        ]
      }
    },
    "/service/session/action/start": {
      "get": {
        "description": "Start a session with Kaltura's server.\n\t The result KS is the session key that you should pass to all services that requires a ticket.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Remember to provide the correct secret according to the sessionType you want",
            "in": "query",
            "name": "secret",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Regular session or Admin session\n\n",
            "enum": [
              "0",
              "2"
            ],
            "enumLabels": [
              "USER",
              "ADMIN"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "partnerId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "KS expiry time in seconds",
            "in": "query",
            "name": "expiry",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "privileges",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "session"
        ]
      }
    },
    "/service/session/action/startWidgetSession": {
      "get": {
        "description": "Start a session for Kaltura's flash widgets\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "widgetId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "expiry",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaStartWidgetSessionResponse"
            }
          }
        },
        "tags": [
          "session"
        ]
      }
    },
    "/service/shortlink_shortlink/action/add": {
      "get": {
        "description": "Allows you to add a short link object\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "shortLink[expiresAt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "shortLink[userId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "shortLink[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "shortLink[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "shortLink[fullUrl]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "shortLink[status]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaShortLink"
            }
          }
        },
        "tags": [
          "shortLink"
        ]
      }
    },
    "/service/shortlink_shortlink/action/delete": {
      "get": {
        "description": "Mark the short link as deleted\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaShortLink"
            }
          }
        },
        "tags": [
          "shortLink"
        ]
      }
    },
    "/service/shortlink_shortlink/action/get": {
      "get": {
        "description": "Retrieve an short link object by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaShortLink"
            }
          }
        },
        "tags": [
          "shortLink"
        ]
      }
    },
    "/service/shortlink_shortlink/action/goto": {
      "get": {
        "description": "Serves short link\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "proxy the response instead of redirect",
            "in": "query",
            "name": "proxy",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "shortLink"
        ]
      }
    },
    "/service/shortlink_shortlink/action/list": {
      "get": {
        "description": "List short link objects by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[expiresAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[expiresAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaShortLinkListResponse"
            }
          }
        },
        "tags": [
          "shortLink"
        ]
      }
    },
    "/service/shortlink_shortlink/action/update": {
      "get": {
        "description": "Update exisitng short link\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "shortLink[expiresAt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "shortLink[userId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "shortLink[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "shortLink[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "shortLink[fullUrl]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "shortLink[status]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaShortLink"
            }
          }
        },
        "tags": [
          "shortLink"
        ]
      }
    },
    "/service/stats/action/collect": {
      "get": {
        "description": "Will write to the event log a single line representing the event\n\t client version - will help interprete the line structure. different client versions might have slightly different data/data formats in the line\nevent_id - number is the row number in yuval's excel\ndatetime - same format as MySql's datetime - can change and should reflect the time zone\nsession id - can be some big random number or guid\npartner id\nentry id\nunique viewer\nwidget id\nui_conf id\nuid - the puser id as set by the ppartner\ncurrent point - in milliseconds\nduration - milliseconds\nuser ip\nprocess duration - in milliseconds\ncontrol id\nseek\nnew point\nreferrer\n\t\n\t\n\t KalturaStatsEvent $event\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "event[clientVer]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40
            ],
            "enumLabels": [
              "WIDGET_LOADED",
              "MEDIA_LOADED",
              "PLAY",
              "PLAY_REACHED_25",
              "PLAY_REACHED_50",
              "PLAY_REACHED_75",
              "PLAY_REACHED_100",
              "OPEN_EDIT",
              "OPEN_VIRAL",
              "OPEN_DOWNLOAD",
              "OPEN_REPORT",
              "BUFFER_START",
              "BUFFER_END",
              "OPEN_FULL_SCREEN",
              "CLOSE_FULL_SCREEN",
              "REPLAY",
              "SEEK",
              "OPEN_UPLOAD",
              "SAVE_PUBLISH",
              "CLOSE_EDITOR",
              "PRE_BUMPER_PLAYED",
              "POST_BUMPER_PLAYED",
              "BUMPER_CLICKED",
              "PREROLL_STARTED",
              "MIDROLL_STARTED",
              "POSTROLL_STARTED",
              "OVERLAY_STARTED",
              "PREROLL_CLICKED",
              "MIDROLL_CLICKED",
              "POSTROLL_CLICKED",
              "OVERLAY_CLICKED",
              "PREROLL_25",
              "PREROLL_50",
              "PREROLL_75",
              "MIDROLL_25",
              "MIDROLL_50",
              "MIDROLL_75",
              "POSTROLL_25",
              "POSTROLL_50",
              "POSTROLL_75"
            ],
            "in": "query",
            "name": "event[eventType]",
            "type": "integer"
          },
          {
            "description": "the client's timestamp of this event",
            "in": "query",
            "name": "event[eventTimestamp]",
            "type": "number"
          },
          {
            "description": "a unique string generated by the client that will represent the client-side session: the primary component will pass it on to other components that sprout from it",
            "in": "query",
            "name": "event[sessionId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event[partnerId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "event[entryId]",
            "type": "string"
          },
          {
            "description": "the UV cookie - creates in the operational system and should be passed on ofr every event",
            "in": "query",
            "name": "event[uniqueViewer]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event[widgetId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event[uiconfId]",
            "type": "integer"
          },
          {
            "description": "the partner's user id",
            "in": "query",
            "name": "event[userId]",
            "type": "string"
          },
          {
            "description": "the timestamp along the video when the event happend",
            "in": "query",
            "name": "event[currentPoint]",
            "type": "integer"
          },
          {
            "description": "the duration of the video in milliseconds - will make it much faster than quering the db for each entry",
            "in": "query",
            "name": "event[duration]",
            "type": "integer"
          },
          {
            "description": "the time in milliseconds the event took",
            "in": "query",
            "name": "event[processDuration]",
            "type": "integer"
          },
          {
            "description": "the id of the GUI control - will be used in the future to better understand what the user clicked",
            "in": "query",
            "name": "event[controlId]",
            "type": "string"
          },
          {
            "description": "true if the user ever used seek in this session",
            "in": "query",
            "name": "event[seek]",
            "type": "boolean"
          },
          {
            "description": "timestamp of the new point on the timeline of the video after the user seeks",
            "in": "query",
            "name": "event[newPoint]",
            "type": "integer"
          },
          {
            "description": "the referrer of the client",
            "in": "query",
            "name": "event[referrer]",
            "type": "string"
          },
          {
            "description": "will indicate if the event is thrown for the first video in the session",
            "in": "query",
            "name": "event[isFirstInSession]",
            "type": "boolean"
          },
          {
            "description": "kaltura application name",
            "in": "query",
            "name": "event[applicationId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event[contextId]",
            "type": "integer"
          },
          {
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "NONE",
              "RELATED"
            ],
            "in": "query",
            "name": "event[featureType]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "stats"
        ]
      }
    },
    "/service/stats/action/kmcCollect": {
      "get": {
        "description": "Will collect the kmcEvent sent form the KMC client\n\t // this will actually be an empty function because all events will be sent using GET and will anyway be logged in the apache log\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "kmcEvent[clientVer]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "kmcEvent[kmcEventActionPath]",
            "type": "string"
          },
          {
            "enum": [
              1001,
              1010,
              1011,
              1012,
              1013,
              1014,
              1015,
              1016,
              1017,
              1018,
              1019,
              1020,
              1021,
              1022,
              1023,
              1030,
              1031,
              1032,
              1033,
              1034,
              1035,
              1036,
              1037,
              1038,
              1039,
              1040,
              1041,
              1042,
              1043,
              1044,
              1045,
              1046,
              1047,
              1048,
              1050,
              1051,
              1052,
              1053,
              1054,
              1055,
              1056,
              1057,
              1058,
              1059,
              1070,
              1071,
              1072,
              1073,
              1074,
              1075,
              1076,
              1077,
              1078,
              1079,
              1080,
              1081,
              1082,
              1083,
              1084,
              1085,
              1086,
              1087,
              1088,
              1089
            ],
            "enumLabels": [
              "CONTENT_PAGE_VIEW",
              "CONTENT_ADD_PLAYLIST",
              "CONTENT_EDIT_PLAYLIST",
              "CONTENT_DELETE_PLAYLIST",
              "CONTENT_EDIT_ENTRY",
              "CONTENT_CHANGE_THUMBNAIL",
              "CONTENT_ADD_TAGS",
              "CONTENT_REMOVE_TAGS",
              "CONTENT_ADD_ADMIN_TAGS",
              "CONTENT_REMOVE_ADMIN_TAGS",
              "CONTENT_DOWNLOAD",
              "CONTENT_APPROVE_MODERATION",
              "CONTENT_REJECT_MODERATION",
              "CONTENT_BULK_UPLOAD",
              "CONTENT_ADMIN_KCW_UPLOAD",
              "ACCOUNT_CHANGE_PARTNER_INFO",
              "ACCOUNT_CHANGE_LOGIN_INFO",
              "ACCOUNT_CONTACT_US_USAGE",
              "ACCOUNT_UPDATE_SERVER_SETTINGS",
              "ACCOUNT_ACCOUNT_OVERVIEW",
              "ACCOUNT_ACCESS_CONTROL",
              "ACCOUNT_TRANSCODING_SETTINGS",
              "ACCOUNT_ACCOUNT_UPGRADE",
              "ACCOUNT_SAVE_SERVER_SETTINGS",
              "ACCOUNT_ACCESS_CONTROL_DELETE",
              "ACCOUNT_SAVE_TRANSCODING_SETTINGS",
              "LOGIN",
              "DASHBOARD_IMPORT_CONTENT",
              "DASHBOARD_UPDATE_CONTENT",
              "DASHBOARD_ACCOUNT_CONTACT_US",
              "DASHBOARD_VIEW_REPORTS",
              "DASHBOARD_EMBED_PLAYER",
              "DASHBOARD_EMBED_PLAYLIST",
              "DASHBOARD_CUSTOMIZE_PLAYERS",
              "APP_STUDIO_NEW_PLAYER_SINGLE_VIDEO",
              "APP_STUDIO_NEW_PLAYER_PLAYLIST",
              "APP_STUDIO_NEW_PLAYER_MULTI_TAB_PLAYLIST",
              "APP_STUDIO_EDIT_PLAYER_SINGLE_VIDEO",
              "APP_STUDIO_EDIT_PLAYER_PLAYLIST",
              "APP_STUDIO_EDIT_PLAYER_MULTI_TAB_PLAYLIST",
              "APP_STUDIO_DUPLICATE_PLAYER",
              "CONTENT_CONTENT_GO_TO_PAGE",
              "CONTENT_DELETE_ITEM",
              "CONTENT_DELETE_MIX",
              "REPORTS_AND_ANALYTICS_BANDWIDTH_USAGE_TAB",
              "REPORTS_AND_ANALYTICS_CONTENT_REPORTS_TAB",
              "REPORTS_AND_ANALYTICS_USERS_AND_COMMUNITY_REPORTS_TAB",
              "REPORTS_AND_ANALYTICS_TOP_CONTRIBUTORS",
              "REPORTS_AND_ANALYTICS_MAP_OVERLAYS",
              "REPORTS_AND_ANALYTICS_TOP_SYNDICATIONS",
              "REPORTS_AND_ANALYTICS_TOP_CONTENT",
              "REPORTS_AND_ANALYTICS_CONTENT_DROPOFF",
              "REPORTS_AND_ANALYTICS_CONTENT_INTERACTIONS",
              "REPORTS_AND_ANALYTICS_CONTENT_CONTRIBUTIONS",
              "REPORTS_AND_ANALYTICS_VIDEO_DRILL_DOWN",
              "REPORTS_AND_ANALYTICS_CONTENT_DRILL_DOWN_INTERACTION",
              "REPORTS_AND_ANALYTICS_CONTENT_CONTRIBUTIONS_DRILLDOWN",
              "REPORTS_AND_ANALYTICS_VIDEO_DRILL_DOWN_DROPOFF",
              "REPORTS_AND_ANALYTICS_MAP_OVERLAYS_DRILLDOWN",
              "REPORTS_AND_ANALYTICS_TOP_SYNDICATIONS_DRILL_DOWN",
              "REPORTS_AND_ANALYTICS_BANDWIDTH_USAGE_VIEW_MONTHLY",
              "REPORTS_AND_ANALYTICS_BANDWIDTH_USAGE_VIEW_YEARLY",
              "CONTENT_ENTRY_DRILLDOWN",
              "CONTENT_OPEN_PREVIEW_AND_EMBED"
            ],
            "in": "query",
            "name": "kmcEvent[kmcEventType]",
            "type": "integer"
          },
          {
            "description": "the client's timestamp of this event",
            "in": "query",
            "name": "kmcEvent[eventTimestamp]",
            "type": "number"
          },
          {
            "description": "a unique string generated by the client that will represent the client-side session: the primary component will pass it on to other components that sprout from it",
            "in": "query",
            "name": "kmcEvent[sessionId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "kmcEvent[partnerId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "kmcEvent[entryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "kmcEvent[widgetId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "kmcEvent[uiconfId]",
            "type": "integer"
          },
          {
            "description": "the partner's user id",
            "in": "query",
            "name": "kmcEvent[userId]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "stats"
        ]
      }
    },
    "/service/stats/action/reportError": {
      "get": {
        "description": "Use this action to report errors to the kaltura server.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "errorCode",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "errorMessage",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "stats"
        ]
      }
    },
    "/service/stats/action/reportKceError": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "kalturaCEError[partnerId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "kalturaCEError[browser]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "kalturaCEError[serverIp]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "kalturaCEError[serverOs]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "kalturaCEError[phpVersion]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "kalturaCEError[ceAdminEmail]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "kalturaCEError[type]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "kalturaCEError[description]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "kalturaCEError[data]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCEError"
            }
          }
        },
        "tags": [
          "stats"
        ]
      }
    },
    "/service/storageprofile/action/add": {
      "get": {
        "description": "Adds a storage profile to the Kaltura DB.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAmazonS3StorageProfile",
              "KalturaKontikiStorageProfile"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "storageProfile[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[desciption]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "AUTOMATIC",
              "MANUAL"
            ],
            "in": "query",
            "name": "storageProfile[status]",
            "type": "integer"
          },
          {
            "enum": [
              "kontiki.KONTIKI",
              "0",
              "1",
              "2",
              "3",
              "6",
              "7"
            ],
            "enumLabels": [
              "KONTIKI",
              "KALTURA_DC",
              "FTP",
              "SCP",
              "SFTP",
              "S3",
              "LOCAL"
            ],
            "in": "query",
            "name": "storageProfile[protocol]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[storageUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[storageBaseDir]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[storageUsername]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[storagePassword]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[storageFtpPassiveMode]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "storageProfile[minFileSize]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "storageProfile[maxFileSize]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "storageProfile[flavorParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[maxConcurrentConnections]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "storageProfile[pathManagerClass]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[pathManagerParams]",
            "type": "array"
          },
          {
            "description": "No need to create enum for temp field",
            "in": "query",
            "name": "storageProfile[trigger]",
            "type": "integer"
          },
          {
            "description": "Delivery Priority",
            "in": "query",
            "name": "storageProfile[deliveryPriority]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "ACTIVE",
              "BLOCKED"
            ],
            "in": "query",
            "name": "storageProfile[deliveryStatus]",
            "type": "integer"
          },
          {
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "NO_IMPACT",
              "REQUIRED"
            ],
            "in": "query",
            "name": "storageProfile[readyBehavior]",
            "type": "integer"
          },
          {
            "description": "Flag sugnifying that the storage exported content should be deleted when soure entry is deleted",
            "in": "query",
            "name": "storageProfile[allowAutoDelete]",
            "type": "integer"
          },
          {
            "description": "Indicates to the local file transfer manager to create a link to the file instead of copying it",
            "in": "query",
            "name": "storageProfile[createFileLink]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "storageProfile[rules]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "storageProfile[deliveryProfileIds]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "storageProfile[privateKey]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[publicKey]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[passPhrase]",
            "type": "string"
          },
          {
            "enum": [
              "authenticated-read",
              "private",
              "public-read",
              "public-read-write"
            ],
            "enumLabels": [
              "ACL_AUTHENTICATED_READ",
              "ACL_PRIVATE",
              "ACL_PUBLIC_READ",
              "ACL_PUBLIC_READ_WRITE"
            ],
            "in": "query",
            "name": "storageProfile[filesPermissionInS3]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAmazonS3StorageProfile"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[s3Region]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAmazonS3StorageProfile"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[serviceToken]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaKontikiStorageProfile"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaStorageProfile"
            }
          }
        },
        "tags": [
          "storageProfile"
        ]
      }
    },
    "/service/storageprofile/action/get": {
      "get": {
        "description": "Get storage profile by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "storageProfileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaStorageProfile"
            }
          }
        },
        "tags": [
          "storageProfile"
        ]
      }
    },
    "/service/storageprofile/action/list": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAmazonS3StorageProfileBaseFilter",
              "KalturaKontikiStorageProfileBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "AUTOMATIC",
              "MANUAL"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "enum": [
              "kontiki.KONTIKI",
              "0",
              "1",
              "2",
              "3",
              "6",
              "7"
            ],
            "enumLabels": [
              "KONTIKI",
              "KALTURA_DC",
              "FTP",
              "SCP",
              "SFTP",
              "S3",
              "LOCAL"
            ],
            "in": "query",
            "name": "filter[protocolEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[protocolIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaStorageProfileListResponse"
            }
          }
        },
        "tags": [
          "storageProfile"
        ]
      }
    },
    "/service/storageprofile/action/update": {
      "get": {
        "description": "Update storage profile by id \n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "storageProfileId",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "KalturaAmazonS3StorageProfile",
              "KalturaKontikiStorageProfile"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "storageProfile[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[desciption]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "AUTOMATIC",
              "MANUAL"
            ],
            "in": "query",
            "name": "storageProfile[status]",
            "type": "integer"
          },
          {
            "enum": [
              "kontiki.KONTIKI",
              "0",
              "1",
              "2",
              "3",
              "6",
              "7"
            ],
            "enumLabels": [
              "KONTIKI",
              "KALTURA_DC",
              "FTP",
              "SCP",
              "SFTP",
              "S3",
              "LOCAL"
            ],
            "in": "query",
            "name": "storageProfile[protocol]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[storageUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[storageBaseDir]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[storageUsername]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[storagePassword]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[storageFtpPassiveMode]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "storageProfile[minFileSize]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "storageProfile[maxFileSize]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "storageProfile[flavorParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[maxConcurrentConnections]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "storageProfile[pathManagerClass]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[pathManagerParams]",
            "type": "array"
          },
          {
            "description": "No need to create enum for temp field",
            "in": "query",
            "name": "storageProfile[trigger]",
            "type": "integer"
          },
          {
            "description": "Delivery Priority",
            "in": "query",
            "name": "storageProfile[deliveryPriority]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "ACTIVE",
              "BLOCKED"
            ],
            "in": "query",
            "name": "storageProfile[deliveryStatus]",
            "type": "integer"
          },
          {
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "NO_IMPACT",
              "REQUIRED"
            ],
            "in": "query",
            "name": "storageProfile[readyBehavior]",
            "type": "integer"
          },
          {
            "description": "Flag sugnifying that the storage exported content should be deleted when soure entry is deleted",
            "in": "query",
            "name": "storageProfile[allowAutoDelete]",
            "type": "integer"
          },
          {
            "description": "Indicates to the local file transfer manager to create a link to the file instead of copying it",
            "in": "query",
            "name": "storageProfile[createFileLink]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "storageProfile[rules]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "storageProfile[deliveryProfileIds]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "storageProfile[privateKey]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[publicKey]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[passPhrase]",
            "type": "string"
          },
          {
            "enum": [
              "authenticated-read",
              "private",
              "public-read",
              "public-read-write"
            ],
            "enumLabels": [
              "ACL_AUTHENTICATED_READ",
              "ACL_PRIVATE",
              "ACL_PUBLIC_READ",
              "ACL_PUBLIC_READ_WRITE"
            ],
            "in": "query",
            "name": "storageProfile[filesPermissionInS3]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAmazonS3StorageProfile"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[s3Region]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAmazonS3StorageProfile"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "storageProfile[serviceToken]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaKontikiStorageProfile"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaStorageProfile"
            }
          }
        },
        "tags": [
          "storageProfile"
        ]
      }
    },
    "/service/storageprofile/action/updateStatus": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "storageId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "DISABLED",
              "AUTOMATIC",
              "MANUAL"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "storageProfile"
        ]
      }
    },
    "/service/syndicationfeed/action/add": {
      "get": {
        "description": "Add new Syndication Feed\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaGenericSyndicationFeed",
              "KalturaGoogleVideoSyndicationFeed",
              "KalturaITunesSyndicationFeed",
              "KalturaTubeMogulSyndicationFeed",
              "KalturaYahooSyndicationFeed"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "link a playlist that will set what content the feed will include\n\t if empty, all content will be included in feed",
            "in": "query",
            "name": "syndicationFeed[playlistId]",
            "type": "string"
          },
          {
            "description": "feed name",
            "in": "query",
            "name": "syndicationFeed[name]",
            "type": "string"
          },
          {
            "description": "Base URL for each video, on the partners site\n\t This is required by all syndication types.",
            "in": "query",
            "name": "syndicationFeed[landingPage]",
            "type": "string"
          },
          {
            "description": "allow_embed tells google OR yahoo weather to allow embedding the video on google OR yahoo video results\n\t or just to provide a link to the landing page.\n\t it is applied on the video-player_loc property in the XML (google)\n\t and addes media-player tag (yahoo)",
            "in": "query",
            "name": "syndicationFeed[allowEmbed]",
            "type": "boolean"
          },
          {
            "description": "Select a uiconf ID as player skin to include in the kwidget url",
            "in": "query",
            "name": "syndicationFeed[playerUiconfId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "syndicationFeed[flavorParamId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "syndicationFeed[transcodeExistingContent]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "syndicationFeed[addToDefaultConversionProfile]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "syndicationFeed[categories]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "syndicationFeed[storageId]",
            "type": "integer"
          },
          {
            "enum": [
              "-createdAt",
              "recent"
            ],
            "enumLabels": [
              "CREATED_AT_DESC",
              "RECENT"
            ],
            "in": "query",
            "name": "syndicationFeed[entriesOrderBy]",
            "type": "string"
          },
          {
            "description": "Should enforce entitlement on feed entries",
            "in": "query",
            "name": "syndicationFeed[enforceEntitlement]",
            "type": "boolean"
          },
          {
            "description": "Set privacy context for search entries that assiged to private and public categories within a category privacy context.",
            "in": "query",
            "name": "syndicationFeed[privacyContext]",
            "type": "string"
          },
          {
            "description": "feed description",
            "in": "query",
            "name": "syndicationFeed[feedDescription]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "feed landing page (i.e publisher website)",
            "in": "query",
            "name": "syndicationFeed[feedLandingPage]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericSyndicationFeed"
            },
            "type": "string"
          },
          {
            "enum": [
              "No",
              "Yes"
            ],
            "enumLabels": [
              "NO",
              "YES"
            ],
            "in": "query",
            "name": "syndicationFeed[adultContent]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGoogleVideoSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "feed description",
            "in": "query",
            "name": "syndicationFeed[feedDescription]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "feed language",
            "in": "query",
            "name": "syndicationFeed[language]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "feed landing page (i.e publisher website)",
            "in": "query",
            "name": "syndicationFeed[feedLandingPage]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "author/publisher name",
            "in": "query",
            "name": "syndicationFeed[ownerName]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "publisher email",
            "in": "query",
            "name": "syndicationFeed[ownerEmail]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "podcast thumbnail",
            "in": "query",
            "name": "syndicationFeed[feedImageUrl]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "enum": [
              "clean",
              "no",
              "yes"
            ],
            "enumLabels": [
              "CLEAN",
              "NO",
              "YES"
            ],
            "in": "query",
            "name": "syndicationFeed[adultContent]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "syndicationFeed[feedAuthor]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "true in case you want to enfore the palylist order on the",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "syndicationFeed[enforceOrder]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "integer"
          },
          {
            "enum": [
              "adult",
              "nonadult"
            ],
            "enumLabels": [
              "ADULT",
              "NON_ADULT"
            ],
            "in": "query",
            "name": "syndicationFeed[adultContent]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaYahooSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "feed description",
            "in": "query",
            "name": "syndicationFeed[feedDescription]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaYahooSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "feed landing page (i.e publisher website)",
            "in": "query",
            "name": "syndicationFeed[feedLandingPage]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaYahooSyndicationFeed"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseSyndicationFeed"
            }
          }
        },
        "tags": [
          "syndicationFeed"
        ]
      }
    },
    "/service/syndicationfeed/action/delete": {
      "get": {
        "description": "Delete Syndication Feed by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "syndicationFeed"
        ]
      }
    },
    "/service/syndicationfeed/action/get": {
      "get": {
        "description": "Get Syndication Feed by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseSyndicationFeed"
            }
          }
        },
        "tags": [
          "syndicationFeed"
        ]
      }
    },
    "/service/syndicationfeed/action/getEntryCount": {
      "get": {
        "description": "get entry count for a syndication feed\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "feedId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSyndicationFeedEntryCount"
            }
          }
        },
        "tags": [
          "syndicationFeed"
        ]
      }
    },
    "/service/syndicationfeed/action/list": {
      "get": {
        "description": "List Syndication Feeds by filter with paging support\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaGenericSyndicationFeedBaseFilter",
              "KalturaGoogleVideoSyndicationFeedBaseFilter",
              "KalturaITunesSyndicationFeedBaseFilter",
              "KalturaTubeMogulSyndicationFeedBaseFilter",
              "KalturaYahooSyndicationFeedBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseSyndicationFeedListResponse"
            }
          }
        },
        "tags": [
          "syndicationFeed"
        ]
      }
    },
    "/service/syndicationfeed/action/requestConversion": {
      "get": {
        "description": "request conversion for all entries that doesnt have the required flavor param\n\t returns a comma-separated ids of conversion jobs\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "feedId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "syndicationFeed"
        ]
      }
    },
    "/service/syndicationfeed/action/update": {
      "get": {
        "description": "Update Syndication Feed by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaGenericSyndicationFeed",
              "KalturaGoogleVideoSyndicationFeed",
              "KalturaITunesSyndicationFeed",
              "KalturaTubeMogulSyndicationFeed",
              "KalturaYahooSyndicationFeed"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "link a playlist that will set what content the feed will include\n\t if empty, all content will be included in feed",
            "in": "query",
            "name": "syndicationFeed[playlistId]",
            "type": "string"
          },
          {
            "description": "feed name",
            "in": "query",
            "name": "syndicationFeed[name]",
            "type": "string"
          },
          {
            "description": "Base URL for each video, on the partners site\n\t This is required by all syndication types.",
            "in": "query",
            "name": "syndicationFeed[landingPage]",
            "type": "string"
          },
          {
            "description": "allow_embed tells google OR yahoo weather to allow embedding the video on google OR yahoo video results\n\t or just to provide a link to the landing page.\n\t it is applied on the video-player_loc property in the XML (google)\n\t and addes media-player tag (yahoo)",
            "in": "query",
            "name": "syndicationFeed[allowEmbed]",
            "type": "boolean"
          },
          {
            "description": "Select a uiconf ID as player skin to include in the kwidget url",
            "in": "query",
            "name": "syndicationFeed[playerUiconfId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "syndicationFeed[flavorParamId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "syndicationFeed[transcodeExistingContent]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "syndicationFeed[addToDefaultConversionProfile]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "syndicationFeed[categories]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "syndicationFeed[storageId]",
            "type": "integer"
          },
          {
            "enum": [
              "-createdAt",
              "recent"
            ],
            "enumLabels": [
              "CREATED_AT_DESC",
              "RECENT"
            ],
            "in": "query",
            "name": "syndicationFeed[entriesOrderBy]",
            "type": "string"
          },
          {
            "description": "Should enforce entitlement on feed entries",
            "in": "query",
            "name": "syndicationFeed[enforceEntitlement]",
            "type": "boolean"
          },
          {
            "description": "Set privacy context for search entries that assiged to private and public categories within a category privacy context.",
            "in": "query",
            "name": "syndicationFeed[privacyContext]",
            "type": "string"
          },
          {
            "description": "feed description",
            "in": "query",
            "name": "syndicationFeed[feedDescription]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "feed landing page (i.e publisher website)",
            "in": "query",
            "name": "syndicationFeed[feedLandingPage]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGenericSyndicationFeed"
            },
            "type": "string"
          },
          {
            "enum": [
              "No",
              "Yes"
            ],
            "enumLabels": [
              "NO",
              "YES"
            ],
            "in": "query",
            "name": "syndicationFeed[adultContent]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaGoogleVideoSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "feed description",
            "in": "query",
            "name": "syndicationFeed[feedDescription]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "feed language",
            "in": "query",
            "name": "syndicationFeed[language]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "feed landing page (i.e publisher website)",
            "in": "query",
            "name": "syndicationFeed[feedLandingPage]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "author/publisher name",
            "in": "query",
            "name": "syndicationFeed[ownerName]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "publisher email",
            "in": "query",
            "name": "syndicationFeed[ownerEmail]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "podcast thumbnail",
            "in": "query",
            "name": "syndicationFeed[feedImageUrl]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "enum": [
              "clean",
              "no",
              "yes"
            ],
            "enumLabels": [
              "CLEAN",
              "NO",
              "YES"
            ],
            "in": "query",
            "name": "syndicationFeed[adultContent]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "syndicationFeed[feedAuthor]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "true in case you want to enfore the palylist order on the",
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "syndicationFeed[enforceOrder]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaITunesSyndicationFeed"
            },
            "type": "integer"
          },
          {
            "enum": [
              "adult",
              "nonadult"
            ],
            "enumLabels": [
              "ADULT",
              "NON_ADULT"
            ],
            "in": "query",
            "name": "syndicationFeed[adultContent]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaYahooSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "feed description",
            "in": "query",
            "name": "syndicationFeed[feedDescription]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaYahooSyndicationFeed"
            },
            "type": "string"
          },
          {
            "description": "feed landing page (i.e publisher website)",
            "in": "query",
            "name": "syndicationFeed[feedLandingPage]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaYahooSyndicationFeed"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBaseSyndicationFeed"
            }
          }
        },
        "tags": [
          "syndicationFeed"
        ]
      }
    },
    "/service/system/action/getTime": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/service/system/action/getVersion": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/service/system/action/ping": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/service/system/action/pingDatabase": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/service/systempartner_systempartner/action/get": {
      "get": {
        "description": "Retrieve all info about partner\n\t This service gets partner id as parameter and accessable to the admin console partner only\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "X",
            "in": "query",
            "name": "partnerId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartner"
            }
          }
        },
        "tags": [
          "systemPartner"
        ]
      }
    },
    "/service/systempartner_systempartner/action/getAdminSession": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "partnerId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "systemPartner"
        ]
      }
    },
    "/service/systempartner_systempartner/action/getConfiguration": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "partnerId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSystemPartnerConfiguration"
            }
          }
        },
        "tags": [
          "systemPartner"
        ]
      }
    },
    "/service/systempartner_systempartner/action/getPackages": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "systemPartner"
        ]
      }
    },
    "/service/systempartner_systempartner/action/getPackagesClassOfService": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "systemPartner"
        ]
      }
    },
    "/service/systempartner_systempartner/action/getPackagesVertical": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "systemPartner"
        ]
      }
    },
    "/service/systempartner_systempartner/action/getPlayerDeliveryTypes": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "systemPartner"
        ]
      }
    },
    "/service/systempartner_systempartner/action/getPlayerEmbedCodeTypes": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "systemPartner"
        ]
      }
    },
    "/service/systempartner_systempartner/action/getUsage": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaSystemPartnerFilter",
              "KalturaVarConsolePartnerFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "partnerFilter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[idNotIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[nameLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[nameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[nameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[nameEqual]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "DELETED",
              "ACTIVE",
              "BLOCKED",
              "FULL_BLOCK"
            ],
            "in": "query",
            "name": "partnerFilter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerPackageEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerPackageGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerPackageLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "partnerFilter[partnerGroupTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerNameDescriptionWebsiteAdminNameAdminEmailLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerParentIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerParentIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Eq filter for the partner's group type",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "partnerFilter[groupTypeEq]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "integer"
          },
          {
            "description": "In filter for the partner's group type",
            "in": "query",
            "name": "partnerFilter[groupTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Filter for partner permissions- filter contains comma-separated string of permission names which the returned partners should have.",
            "in": "query",
            "name": "partnerFilter[partnerPermissionsExist]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Date range from",
            "in": "query",
            "name": "usageFilter[fromDate]",
            "type": "integer"
          },
          {
            "description": "Date range to",
            "in": "query",
            "name": "usageFilter[toDate]",
            "type": "integer"
          },
          {
            "description": "Time zone offset",
            "in": "query",
            "name": "usageFilter[timezoneOffset]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "usageFilter[orderBy]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "usageFilter[advancedSearch]"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSystemPartnerUsageListResponse"
            }
          }
        },
        "tags": [
          "systemPartner"
        ]
      }
    },
    "/service/systempartner_systempartner/action/list": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaSystemPartnerFilter",
              "KalturaVarConsolePartnerFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idNotIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameEqual]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "DELETED",
              "ACTIVE",
              "BLOCKED",
              "FULL_BLOCK"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerPackageEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerPackageGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerPackageLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "filter[partnerGroupTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerNameDescriptionWebsiteAdminNameAdminEmailLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerParentIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerParentIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Eq filter for the partner's group type",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "filter[groupTypeEq]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "integer"
          },
          {
            "description": "In filter for the partner's group type",
            "in": "query",
            "name": "filter[groupTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Filter for partner permissions- filter contains comma-separated string of permission names which the returned partners should have.",
            "in": "query",
            "name": "filter[partnerPermissionsExist]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartnerListResponse"
            }
          }
        },
        "tags": [
          "systemPartner"
        ]
      }
    },
    "/service/systempartner_systempartner/action/listUserLoginData": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[loginEmailEqual]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserLoginDataListResponse"
            }
          }
        },
        "tags": [
          "systemPartner"
        ]
      }
    },
    "/service/systempartner_systempartner/action/resetUserPassword": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "partnerId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "newPassword",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "systemPartner"
        ]
      }
    },
    "/service/systempartner_systempartner/action/updateConfiguration": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "partnerId",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[partnerName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[description]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[adminName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[adminEmail]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[host]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[cdnHost]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[cdnHostWhiteList]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[thumbnailHost]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[partnerPackage]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[monitorUsage]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[moderateContent]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "configuration[storageDeleteFromKaltura]",
            "type": "boolean"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "KALTURA_ONLY",
              "KALTURA_FIRST",
              "EXTERNAL_FIRST",
              "EXTERNAL_ONLY"
            ],
            "in": "query",
            "name": "configuration[storageServePriority]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[kmcVersion]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[restrictThumbnailByKs]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[supportAnimatedThumbnails]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "configuration[defThumbOffset]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[defThumbDensity]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[userSessionRoleId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[adminSessionRoleId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[alwaysAllowedPermissionNames]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[importRemoteSourceForConvert]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "configuration[permissions]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "configuration[notificationsConfig]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[allowMultiNotification]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "configuration[loginBlockPeriod]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[numPrevPassToKeep]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[passReplaceFreq]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[isFirstLogin]",
            "type": "boolean"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "configuration[partnerGroupType]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[partnerParentId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[limits]",
            "type": "array"
          },
          {
            "description": "http/rtmp/hdnetwork",
            "in": "query",
            "name": "configuration[streamerType]",
            "type": "string"
          },
          {
            "description": "http/https, rtmp/rtmpe",
            "in": "query",
            "name": "configuration[mediaProtocol]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[extendedFreeTrailExpiryReason]",
            "type": "string"
          },
          {
            "description": "Unix timestamp (In seconds)",
            "in": "query",
            "name": "configuration[extendedFreeTrailExpiryDate]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[extendedFreeTrail]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[crmId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[referenceId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[crmLink]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[verticalClasiffication]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[partnerPackageClassOfService]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[enableBulkUploadNotificationsEmails]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "configuration[deliveryProfileIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[enforceDelivery]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "configuration[bulkUploadNotificationsEmail]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[internalUse]",
            "type": "boolean"
          },
          {
            "enum": [
              "velocix.VELOCIX_LIVE",
              "1",
              "2",
              "5",
              "6",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "42"
            ],
            "enumLabels": [
              "VELOCIX_LIVE",
              "FILE",
              "WEBCAM",
              "URL",
              "SEARCH_PROVIDER",
              "AKAMAI_LIVE",
              "MANUAL_LIVE_STREAM",
              "AKAMAI_UNIVERSAL_LIVE",
              "LIVE_STREAM",
              "LIVE_CHANNEL",
              "RECORDED_LIVE",
              "CLIP",
              "LIVE_STREAM_ONTEXTDATA_CAPTIONS"
            ],
            "in": "query",
            "name": "configuration[defaultLiveStreamEntrySourceType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[liveStreamProvisionParams]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[autoModerateEntryFilter]"
          },
          {
            "in": "query",
            "name": "configuration[logoutUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[defaultEntitlementEnforcement]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "configuration[cacheFlavorVersion]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[apiAccessControlId]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "configuration[defaultDeliveryType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[defaultEmbedCodeType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[customDeliveryTypes]",
            "type": "array"
          },
          {
            "in": "query",
            "name": "configuration[restrictEntryByMetadata]",
            "type": "boolean"
          },
          {
            "enum": [
              "aa",
              "ab",
              "af",
              "am",
              "ar",
              "as",
              "ay",
              "az",
              "ba",
              "be",
              "bg",
              "bh",
              "bi",
              "bn",
              "bo",
              "br",
              "ca",
              "co",
              "cs",
              "cy",
              "da",
              "de",
              "dz",
              "el",
              "en",
              "eo",
              "es",
              "et",
              "eu",
              "fa",
              "fi",
              "fj",
              "fo",
              "fr",
              "fy",
              "ga",
              "gd",
              "gl",
              "gn",
              "gu",
              "gv",
              "ha",
              "he",
              "hi",
              "hr",
              "hu",
              "hy",
              "ia",
              "id",
              "ie",
              "ik",
              "in",
              "is",
              "it",
              "iu",
              "iw",
              "ja",
              "ji",
              "jv",
              "ka",
              "kk",
              "kl",
              "km",
              "kn",
              "ko",
              "ks",
              "ku",
              "ky",
              "la",
              "li",
              "ln",
              "lo",
              "lt",
              "lv",
              "mg",
              "mi",
              "mk",
              "ml",
              "mn",
              "mo",
              "mr",
              "ms",
              "mt",
              "multilingual",
              "my",
              "na",
              "ne",
              "nl",
              "no",
              "oc",
              "om",
              "or",
              "pa",
              "pl",
              "ps",
              "pt",
              "qu",
              "rm",
              "rn",
              "ro",
              "ru",
              "rw",
              "sa",
              "sd",
              "sg",
              "sh",
              "si",
              "sk",
              "sl",
              "sm",
              "sn",
              "so",
              "sq",
              "sr",
              "ss",
              "st",
              "su",
              "sv",
              "sw",
              "ta",
              "te",
              "tg",
              "th",
              "ti",
              "tk",
              "tl",
              "tn",
              "to",
              "tr",
              "ts",
              "tt",
              "tw",
              "ug",
              "uk",
              "ur",
              "uz",
              "vi",
              "vo",
              "wo",
              "xh",
              "yi",
              "yo",
              "zh",
              "zu"
            ],
            "enumLabels": [
              "AA",
              "AB",
              "AF",
              "AM",
              "AR",
              "AS_",
              "AY",
              "AZ",
              "BA",
              "BE",
              "BG",
              "BH",
              "BI",
              "BN",
              "BO",
              "BR",
              "CA",
              "CO",
              "CS",
              "CY",
              "DA",
              "DE",
              "DZ",
              "EL",
              "EN",
              "EO",
              "ES",
              "ET",
              "EU",
              "FA",
              "FI",
              "FJ",
              "FO",
              "FR",
              "FY",
              "GA",
              "GD",
              "GL",
              "GN",
              "GU",
              "GV",
              "HA",
              "HE",
              "HI",
              "HR",
              "HU",
              "HY",
              "IA",
              "ID",
              "IE",
              "IK",
              "IN",
              "IS",
              "IT",
              "IU",
              "IW",
              "JA",
              "JI",
              "JV",
              "KA",
              "KK",
              "KL",
              "KM",
              "KN",
              "KO",
              "KS",
              "KU",
              "KY",
              "LA",
              "LI",
              "LN",
              "LO",
              "LT",
              "LV",
              "MG",
              "MI",
              "MK",
              "ML",
              "MN",
              "MO",
              "MR",
              "MS",
              "MT",
              "MU",
              "MY",
              "NA",
              "NE",
              "NL",
              "NO",
              "OC",
              "OM",
              "OR_",
              "PA",
              "PL",
              "PS",
              "PT",
              "QU",
              "RM",
              "RN",
              "RO",
              "RU",
              "RW",
              "SA",
              "SD",
              "SG",
              "SH",
              "SI",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SQ",
              "SR",
              "SS",
              "ST",
              "SU",
              "SV",
              "SW",
              "TA",
              "TE",
              "TG",
              "TH",
              "TI",
              "TK",
              "TL",
              "TN",
              "TO",
              "TR",
              "TS",
              "TT",
              "TW",
              "UG",
              "UK",
              "UR",
              "UZ",
              "VI",
              "VO",
              "WO",
              "XH",
              "YI",
              "YO",
              "ZH",
              "ZU"
            ],
            "in": "query",
            "name": "configuration[language]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[audioThumbEntryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "configuration[liveThumbEntryId]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "systemPartner"
        ]
      }
    },
    "/service/systempartner_systempartner/action/updateStatus": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "partnerId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "DELETED",
              "ACTIVE",
              "BLOCKED",
              "FULL_BLOCK"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "reason",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "systemPartner"
        ]
      }
    },
    "/service/tagsearch_tag/action/deletePending": {
      "get": {
        "description": "Action goes over all tags with instanceCount==0 and checks whether they need to be removed from the DB. Returns number of removed tags.\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "tag"
        ]
      }
    },
    "/service/tagsearch_tag/action/indexCategoryEntryTags": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "categoryId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "pcToDecrement",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "pcToIncrement",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "tag"
        ]
      }
    },
    "/service/tagsearch_tag/action/search": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "1",
              "2"
            ],
            "enumLabels": [
              "ENTRY",
              "CATEGORY"
            ],
            "in": "query",
            "name": "tagFilter[objectTypeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tagFilter[tagEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tagFilter[tagStartsWith]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tagFilter[instanceCountEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "tagFilter[instanceCountIn]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "tagFilter[orderBy]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tagFilter[advancedSearch]"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTagListResponse"
            }
          }
        },
        "tags": [
          "tag"
        ]
      }
    },
    "/service/thumbasset/action/add": {
      "get": {
        "description": "Add thumbnail asset\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaTimedThumbAsset"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The Flavor Params used to create this Flavor Asset",
            "in": "query",
            "name": "thumbAsset[thumbParamsId]",
            "type": "integer"
          },
          {
            "description": "Tags used to identify the Flavor Asset in various scenarios",
            "in": "query",
            "name": "thumbAsset[tags]",
            "type": "string"
          },
          {
            "description": "The file extension",
            "in": "query",
            "name": "thumbAsset[fileExt]",
            "type": "string"
          },
          {
            "description": "Partner private data",
            "in": "query",
            "name": "thumbAsset[partnerData]",
            "type": "string"
          },
          {
            "description": "Partner friendly description",
            "in": "query",
            "name": "thumbAsset[partnerDescription]",
            "type": "string"
          },
          {
            "description": "Comma separated list of source flavor params ids",
            "in": "query",
            "name": "thumbAsset[actualSourceAssetParamsIds]",
            "type": "string"
          },
          {
            "description": "Associated thumb cue point ID",
            "in": "query",
            "name": "thumbAsset[cuePointId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaTimedThumbAsset"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbAsset"
            }
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/addFromImage": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbAsset"
            }
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/addFromUrl": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "url",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbAsset"
            }
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/delete": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "thumbAssetId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/generate": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaThumbParamsOutput"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "enumLabels": [
              "RESIZE",
              "RESIZE_WITH_PADDING",
              "CROP",
              "CROP_FROM_TOP",
              "RESIZE_WITH_FORCE"
            ],
            "in": "query",
            "name": "thumbParams[cropType]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[quality]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropX]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropY]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropWidth]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropHeight]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[videoOffset]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "thumbParams[width]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[height]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[scaleWidth]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "thumbParams[scaleHeight]",
            "type": "number"
          },
          {
            "description": "Hexadecimal value",
            "in": "query",
            "name": "thumbParams[backgroundColor]",
            "type": "string"
          },
          {
            "description": "Id of the flavor params or the thumbnail params to be used as source for the thumbnail creation",
            "in": "query",
            "name": "thumbParams[sourceParamsId]",
            "type": "integer"
          },
          {
            "description": "The container format of the Flavor Params",
            "enum": [
              "3gp",
              "applehttp",
              "avi",
              "bmp",
              "copy",
              "flv",
              "hls",
              "isma",
              "ismv",
              "jpg",
              "m2ts",
              "m4v",
              "mkv",
              "mov",
              "mp3",
              "mp4",
              "mpeg",
              "mpegts",
              "mxf",
              "ogg",
              "ogv",
              "pdf",
              "png",
              "swf",
              "wav",
              "webm",
              "wma",
              "wmv",
              "wvm"
            ],
            "enumLabels": [
              "_3GP",
              "APPLEHTTP",
              "AVI",
              "BMP",
              "COPY",
              "FLV",
              "HLS",
              "ISMA",
              "ISMV",
              "JPG",
              "M2TS",
              "M4V",
              "MKV",
              "MOV",
              "MP3",
              "MP4",
              "MPEG",
              "MPEGTS",
              "MXF",
              "OGG",
              "OGV",
              "PDF",
              "PNG",
              "SWF",
              "WAV",
              "WEBM",
              "WMA",
              "WMV",
              "WVM"
            ],
            "in": "query",
            "name": "thumbParams[format]",
            "type": "string"
          },
          {
            "description": "The image density (dpi) for example: 72 or 96",
            "in": "query",
            "name": "thumbParams[density]",
            "type": "integer"
          },
          {
            "description": "Strip profiles and comments",
            "in": "query",
            "name": "thumbParams[stripProfiles]",
            "type": "boolean"
          },
          {
            "description": "Create thumbnail from the videoLengthpercentage second",
            "in": "query",
            "name": "thumbParams[videoOffsetInPercentage]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[partnerId]",
            "type": "integer"
          },
          {
            "description": "The name of the Flavor Params",
            "in": "query",
            "name": "thumbParams[name]",
            "type": "string"
          },
          {
            "description": "System name of the Flavor Params",
            "in": "query",
            "name": "thumbParams[systemName]",
            "type": "string"
          },
          {
            "description": "The description of the Flavor Params",
            "in": "query",
            "name": "thumbParams[description]",
            "type": "string"
          },
          {
            "description": "The Flavor Params tags are used to identify the flavor for different usage (e.g. web, hd, mobile)",
            "in": "query",
            "name": "thumbParams[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[requiredPermissions]",
            "type": "array"
          },
          {
            "description": "Id of remote storage profile that used to get the source, zero indicates Kaltura data center",
            "in": "query",
            "name": "thumbParams[sourceRemoteStorageProfileId]",
            "type": "integer"
          },
          {
            "description": "Comma seperated ids of remote storage profiles that the flavor distributed to, the distribution done by the conversion engine",
            "in": "query",
            "name": "thumbParams[remoteStorageProfileIds]",
            "type": "integer"
          },
          {
            "description": "Media parser type to be used for post-conversion validation",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "MEDIAINFO",
              "FFMPEG"
            ],
            "in": "query",
            "name": "thumbParams[mediaParserType]",
            "type": "string"
          },
          {
            "description": "Comma seperated ids of source flavor params this flavor is created from",
            "in": "query",
            "name": "thumbParams[sourceAssetParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbParamsVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbAssetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbAssetVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[rotate]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "integer"
          },
          {
            "description": "id of the source asset (flavor or thumbnail) to be used as source for the thumbnail generation",
            "in": "query",
            "name": "sourceAssetId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbAsset"
            }
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/generateByEntryId": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "indicate the id of the ThumbParams to be generate this thumbnail by",
            "in": "query",
            "name": "destThumbParamsId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbAsset"
            }
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/get": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "thumbAssetId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbAsset"
            }
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/getByEntryId": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/getRemotePaths": {
      "get": {
        "description": "Get remote storage existing paths for the asset\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRemotePathListResponse"
            }
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/getUrl": {
      "get": {
        "description": "Get download URL for the asset\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "storageId",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "KalturaThumbParamsOutput"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "enumLabels": [
              "RESIZE",
              "RESIZE_WITH_PADDING",
              "CROP",
              "CROP_FROM_TOP",
              "RESIZE_WITH_FORCE"
            ],
            "in": "query",
            "name": "thumbParams[cropType]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[quality]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropX]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropY]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropWidth]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropHeight]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[videoOffset]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "thumbParams[width]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[height]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[scaleWidth]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "thumbParams[scaleHeight]",
            "type": "number"
          },
          {
            "description": "Hexadecimal value",
            "in": "query",
            "name": "thumbParams[backgroundColor]",
            "type": "string"
          },
          {
            "description": "Id of the flavor params or the thumbnail params to be used as source for the thumbnail creation",
            "in": "query",
            "name": "thumbParams[sourceParamsId]",
            "type": "integer"
          },
          {
            "description": "The container format of the Flavor Params",
            "enum": [
              "3gp",
              "applehttp",
              "avi",
              "bmp",
              "copy",
              "flv",
              "hls",
              "isma",
              "ismv",
              "jpg",
              "m2ts",
              "m4v",
              "mkv",
              "mov",
              "mp3",
              "mp4",
              "mpeg",
              "mpegts",
              "mxf",
              "ogg",
              "ogv",
              "pdf",
              "png",
              "swf",
              "wav",
              "webm",
              "wma",
              "wmv",
              "wvm"
            ],
            "enumLabels": [
              "_3GP",
              "APPLEHTTP",
              "AVI",
              "BMP",
              "COPY",
              "FLV",
              "HLS",
              "ISMA",
              "ISMV",
              "JPG",
              "M2TS",
              "M4V",
              "MKV",
              "MOV",
              "MP3",
              "MP4",
              "MPEG",
              "MPEGTS",
              "MXF",
              "OGG",
              "OGV",
              "PDF",
              "PNG",
              "SWF",
              "WAV",
              "WEBM",
              "WMA",
              "WMV",
              "WVM"
            ],
            "in": "query",
            "name": "thumbParams[format]",
            "type": "string"
          },
          {
            "description": "The image density (dpi) for example: 72 or 96",
            "in": "query",
            "name": "thumbParams[density]",
            "type": "integer"
          },
          {
            "description": "Strip profiles and comments",
            "in": "query",
            "name": "thumbParams[stripProfiles]",
            "type": "boolean"
          },
          {
            "description": "Create thumbnail from the videoLengthpercentage second",
            "in": "query",
            "name": "thumbParams[videoOffsetInPercentage]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[partnerId]",
            "type": "integer"
          },
          {
            "description": "The name of the Flavor Params",
            "in": "query",
            "name": "thumbParams[name]",
            "type": "string"
          },
          {
            "description": "System name of the Flavor Params",
            "in": "query",
            "name": "thumbParams[systemName]",
            "type": "string"
          },
          {
            "description": "The description of the Flavor Params",
            "in": "query",
            "name": "thumbParams[description]",
            "type": "string"
          },
          {
            "description": "The Flavor Params tags are used to identify the flavor for different usage (e.g. web, hd, mobile)",
            "in": "query",
            "name": "thumbParams[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[requiredPermissions]",
            "type": "array"
          },
          {
            "description": "Id of remote storage profile that used to get the source, zero indicates Kaltura data center",
            "in": "query",
            "name": "thumbParams[sourceRemoteStorageProfileId]",
            "type": "integer"
          },
          {
            "description": "Comma seperated ids of remote storage profiles that the flavor distributed to, the distribution done by the conversion engine",
            "in": "query",
            "name": "thumbParams[remoteStorageProfileIds]",
            "type": "integer"
          },
          {
            "description": "Media parser type to be used for post-conversion validation",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "MEDIAINFO",
              "FFMPEG"
            ],
            "in": "query",
            "name": "thumbParams[mediaParserType]",
            "type": "string"
          },
          {
            "description": "Comma seperated ids of source flavor params this flavor is created from",
            "in": "query",
            "name": "thumbParams[sourceAssetParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbParamsVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbAssetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbAssetVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[rotate]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/list": {
      "get": {
        "description": "List Thumbnail Assets by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAttachmentAssetBaseFilter",
              "KalturaCaptionAssetBaseFilter",
              "KalturaFlavorAssetBaseFilter",
              "KalturaThumbAssetBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[sizeGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[sizeLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[tagsLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[deletedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[deletedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "TEXT",
              "MEDIA",
              "DOCUMENT"
            ],
            "in": "query",
            "name": "filter[formatEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[formatIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              2,
              3,
              7,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "READY",
              "DELETED",
              "IMPORTING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAttachmentAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[captionParamsIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[captionParamsIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "SRT",
              "DFXP",
              "WEBVTT"
            ],
            "in": "query",
            "name": "filter[formatEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[formatIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              2,
              3,
              7,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "READY",
              "DELETED",
              "IMPORTING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaCaptionAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[flavorParamsIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "CONVERTING",
              "READY",
              "DELETED",
              "NOT_APPLICABLE",
              "TEMP",
              "WAIT_FOR_CONVERT",
              "IMPORTING",
              "VALIDATING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFlavorAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[thumbParamsIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[thumbParamsIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              7,
              9
            ],
            "enumLabels": [
              "ERROR",
              "QUEUED",
              "CAPTURING",
              "READY",
              "DELETED",
              "IMPORTING",
              "EXPORTING"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[statusNotIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbAssetBaseFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbAssetListResponse"
            }
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/regenerate": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "thumbAssetId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbAsset"
            }
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/serve": {
      "get": {
        "description": "Serves thumbnail by its id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "thumbAssetId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "KalturaThumbParamsOutput"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "enumLabels": [
              "RESIZE",
              "RESIZE_WITH_PADDING",
              "CROP",
              "CROP_FROM_TOP",
              "RESIZE_WITH_FORCE"
            ],
            "in": "query",
            "name": "thumbParams[cropType]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[quality]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropX]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropY]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropWidth]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropHeight]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[videoOffset]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "thumbParams[width]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[height]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[scaleWidth]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "thumbParams[scaleHeight]",
            "type": "number"
          },
          {
            "description": "Hexadecimal value",
            "in": "query",
            "name": "thumbParams[backgroundColor]",
            "type": "string"
          },
          {
            "description": "Id of the flavor params or the thumbnail params to be used as source for the thumbnail creation",
            "in": "query",
            "name": "thumbParams[sourceParamsId]",
            "type": "integer"
          },
          {
            "description": "The container format of the Flavor Params",
            "enum": [
              "3gp",
              "applehttp",
              "avi",
              "bmp",
              "copy",
              "flv",
              "hls",
              "isma",
              "ismv",
              "jpg",
              "m2ts",
              "m4v",
              "mkv",
              "mov",
              "mp3",
              "mp4",
              "mpeg",
              "mpegts",
              "mxf",
              "ogg",
              "ogv",
              "pdf",
              "png",
              "swf",
              "wav",
              "webm",
              "wma",
              "wmv",
              "wvm"
            ],
            "enumLabels": [
              "_3GP",
              "APPLEHTTP",
              "AVI",
              "BMP",
              "COPY",
              "FLV",
              "HLS",
              "ISMA",
              "ISMV",
              "JPG",
              "M2TS",
              "M4V",
              "MKV",
              "MOV",
              "MP3",
              "MP4",
              "MPEG",
              "MPEGTS",
              "MXF",
              "OGG",
              "OGV",
              "PDF",
              "PNG",
              "SWF",
              "WAV",
              "WEBM",
              "WMA",
              "WMV",
              "WVM"
            ],
            "in": "query",
            "name": "thumbParams[format]",
            "type": "string"
          },
          {
            "description": "The image density (dpi) for example: 72 or 96",
            "in": "query",
            "name": "thumbParams[density]",
            "type": "integer"
          },
          {
            "description": "Strip profiles and comments",
            "in": "query",
            "name": "thumbParams[stripProfiles]",
            "type": "boolean"
          },
          {
            "description": "Create thumbnail from the videoLengthpercentage second",
            "in": "query",
            "name": "thumbParams[videoOffsetInPercentage]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[partnerId]",
            "type": "integer"
          },
          {
            "description": "The name of the Flavor Params",
            "in": "query",
            "name": "thumbParams[name]",
            "type": "string"
          },
          {
            "description": "System name of the Flavor Params",
            "in": "query",
            "name": "thumbParams[systemName]",
            "type": "string"
          },
          {
            "description": "The description of the Flavor Params",
            "in": "query",
            "name": "thumbParams[description]",
            "type": "string"
          },
          {
            "description": "The Flavor Params tags are used to identify the flavor for different usage (e.g. web, hd, mobile)",
            "in": "query",
            "name": "thumbParams[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[requiredPermissions]",
            "type": "array"
          },
          {
            "description": "Id of remote storage profile that used to get the source, zero indicates Kaltura data center",
            "in": "query",
            "name": "thumbParams[sourceRemoteStorageProfileId]",
            "type": "integer"
          },
          {
            "description": "Comma seperated ids of remote storage profiles that the flavor distributed to, the distribution done by the conversion engine",
            "in": "query",
            "name": "thumbParams[remoteStorageProfileIds]",
            "type": "integer"
          },
          {
            "description": "Media parser type to be used for post-conversion validation",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "MEDIAINFO",
              "FFMPEG"
            ],
            "in": "query",
            "name": "thumbParams[mediaParserType]",
            "type": "string"
          },
          {
            "description": "Comma seperated ids of source flavor params this flavor is created from",
            "in": "query",
            "name": "thumbParams[sourceAssetParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbParamsVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbAssetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbAssetVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[rotate]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "options[download]",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/serveByEntryId": {
      "get": {
        "description": "Serves thumbnail by entry id and thumnail params id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "entryId",
            "required": false,
            "type": "string"
          },
          {
            "description": "if not set, default thumbnail will be used.",
            "in": "query",
            "name": "thumbParamId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/setAsDefault": {
      "get": {
        "description": "Tags the thumbnail as DEFAULT_THUMB and removes that tag from all other thumbnail assets of the entry.\n\t Create a new file sync link on the entry thumbnail that points to the thumbnail asset file sync.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "thumbAssetId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/setContent": {
      "get": {
        "description": "Update content of thumbnail asset\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaUrlResource",
              "KalturaDataCenterContentResource",
              "KalturaAssetResource",
              "KalturaEntryResource",
              "KalturaFileSyncResource",
              "KalturaOperationResource",
              "KalturaRemoteStorageResources",
              "KalturaStringResource"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Remote URL, FTP, HTTP or HTTPS",
            "in": "query",
            "name": "contentResource[url]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaUrlResource"
            },
            "type": "string"
          },
          {
            "description": "Force Import Job",
            "in": "query",
            "name": "contentResource[forceAsyncDownload]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaUrlResource"
            },
            "type": "boolean"
          },
          {
            "description": "ID of the source asset",
            "in": "query",
            "name": "contentResource[assetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaAssetResource"
            },
            "type": "string"
          },
          {
            "description": "ID of the source entry",
            "in": "query",
            "name": "contentResource[entryId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEntryResource"
            },
            "type": "string"
          },
          {
            "description": "ID of the source flavor params, set to null to use the source flavor",
            "in": "query",
            "name": "contentResource[flavorParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEntryResource"
            },
            "type": "integer"
          },
          {
            "description": "The object type of the file sync object",
            "in": "query",
            "name": "contentResource[fileSyncObjectType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "integer"
          },
          {
            "description": "The object sub-type of the file sync object",
            "in": "query",
            "name": "contentResource[objectSubType]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "integer"
          },
          {
            "description": "The object id of the file sync object",
            "in": "query",
            "name": "contentResource[objectId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "string"
          },
          {
            "description": "The version of the file sync object",
            "in": "query",
            "name": "contentResource[version]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaFileSyncResource"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "contentResource[resource]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaOperationResource"
            }
          },
          {
            "in": "query",
            "name": "contentResource[operationAttributes]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaOperationResource"
            },
            "type": "array"
          },
          {
            "description": "ID of alternative asset params to be used instead of the system default flavor params",
            "in": "query",
            "name": "contentResource[assetParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaOperationResource"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "contentResource[resources]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaRemoteStorageResources"
            },
            "type": "array"
          },
          {
            "description": "Textual content",
            "in": "query",
            "name": "contentResource[content]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaStringResource"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbAsset"
            }
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbasset/action/update": {
      "get": {
        "description": "Update thumbnail asset\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaTimedThumbAsset"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "The Flavor Params used to create this Flavor Asset",
            "in": "query",
            "name": "thumbAsset[thumbParamsId]",
            "type": "integer"
          },
          {
            "description": "Tags used to identify the Flavor Asset in various scenarios",
            "in": "query",
            "name": "thumbAsset[tags]",
            "type": "string"
          },
          {
            "description": "The file extension",
            "in": "query",
            "name": "thumbAsset[fileExt]",
            "type": "string"
          },
          {
            "description": "Partner private data",
            "in": "query",
            "name": "thumbAsset[partnerData]",
            "type": "string"
          },
          {
            "description": "Partner friendly description",
            "in": "query",
            "name": "thumbAsset[partnerDescription]",
            "type": "string"
          },
          {
            "description": "Comma separated list of source flavor params ids",
            "in": "query",
            "name": "thumbAsset[actualSourceAssetParamsIds]",
            "type": "string"
          },
          {
            "description": "Associated thumb cue point ID",
            "in": "query",
            "name": "thumbAsset[cuePointId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaTimedThumbAsset"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbAsset"
            }
          }
        },
        "tags": [
          "thumbAsset"
        ]
      }
    },
    "/service/thumbparams/action/add": {
      "get": {
        "description": "Add new Thumb Params\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaThumbParamsOutput"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "enumLabels": [
              "RESIZE",
              "RESIZE_WITH_PADDING",
              "CROP",
              "CROP_FROM_TOP",
              "RESIZE_WITH_FORCE"
            ],
            "in": "query",
            "name": "thumbParams[cropType]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[quality]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropX]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropY]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropWidth]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropHeight]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[videoOffset]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "thumbParams[width]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[height]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[scaleWidth]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "thumbParams[scaleHeight]",
            "type": "number"
          },
          {
            "description": "Hexadecimal value",
            "in": "query",
            "name": "thumbParams[backgroundColor]",
            "type": "string"
          },
          {
            "description": "Id of the flavor params or the thumbnail params to be used as source for the thumbnail creation",
            "in": "query",
            "name": "thumbParams[sourceParamsId]",
            "type": "integer"
          },
          {
            "description": "The container format of the Flavor Params",
            "enum": [
              "3gp",
              "applehttp",
              "avi",
              "bmp",
              "copy",
              "flv",
              "hls",
              "isma",
              "ismv",
              "jpg",
              "m2ts",
              "m4v",
              "mkv",
              "mov",
              "mp3",
              "mp4",
              "mpeg",
              "mpegts",
              "mxf",
              "ogg",
              "ogv",
              "pdf",
              "png",
              "swf",
              "wav",
              "webm",
              "wma",
              "wmv",
              "wvm"
            ],
            "enumLabels": [
              "_3GP",
              "APPLEHTTP",
              "AVI",
              "BMP",
              "COPY",
              "FLV",
              "HLS",
              "ISMA",
              "ISMV",
              "JPG",
              "M2TS",
              "M4V",
              "MKV",
              "MOV",
              "MP3",
              "MP4",
              "MPEG",
              "MPEGTS",
              "MXF",
              "OGG",
              "OGV",
              "PDF",
              "PNG",
              "SWF",
              "WAV",
              "WEBM",
              "WMA",
              "WMV",
              "WVM"
            ],
            "in": "query",
            "name": "thumbParams[format]",
            "type": "string"
          },
          {
            "description": "The image density (dpi) for example: 72 or 96",
            "in": "query",
            "name": "thumbParams[density]",
            "type": "integer"
          },
          {
            "description": "Strip profiles and comments",
            "in": "query",
            "name": "thumbParams[stripProfiles]",
            "type": "boolean"
          },
          {
            "description": "Create thumbnail from the videoLengthpercentage second",
            "in": "query",
            "name": "thumbParams[videoOffsetInPercentage]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[partnerId]",
            "type": "integer"
          },
          {
            "description": "The name of the Flavor Params",
            "in": "query",
            "name": "thumbParams[name]",
            "type": "string"
          },
          {
            "description": "System name of the Flavor Params",
            "in": "query",
            "name": "thumbParams[systemName]",
            "type": "string"
          },
          {
            "description": "The description of the Flavor Params",
            "in": "query",
            "name": "thumbParams[description]",
            "type": "string"
          },
          {
            "description": "The Flavor Params tags are used to identify the flavor for different usage (e.g. web, hd, mobile)",
            "in": "query",
            "name": "thumbParams[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[requiredPermissions]",
            "type": "array"
          },
          {
            "description": "Id of remote storage profile that used to get the source, zero indicates Kaltura data center",
            "in": "query",
            "name": "thumbParams[sourceRemoteStorageProfileId]",
            "type": "integer"
          },
          {
            "description": "Comma seperated ids of remote storage profiles that the flavor distributed to, the distribution done by the conversion engine",
            "in": "query",
            "name": "thumbParams[remoteStorageProfileIds]",
            "type": "integer"
          },
          {
            "description": "Media parser type to be used for post-conversion validation",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "MEDIAINFO",
              "FFMPEG"
            ],
            "in": "query",
            "name": "thumbParams[mediaParserType]",
            "type": "string"
          },
          {
            "description": "Comma seperated ids of source flavor params this flavor is created from",
            "in": "query",
            "name": "thumbParams[sourceAssetParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbParamsVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbAssetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbAssetVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[rotate]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbParams"
            }
          }
        },
        "tags": [
          "thumbParams"
        ]
      }
    },
    "/service/thumbparams/action/delete": {
      "get": {
        "description": "Delete Thumb Params by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "thumbParams"
        ]
      }
    },
    "/service/thumbparams/action/get": {
      "get": {
        "description": "Get Thumb Params by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbParams"
            }
          }
        },
        "tags": [
          "thumbParams"
        ]
      }
    },
    "/service/thumbparams/action/getByConversionProfileId": {
      "get": {
        "description": "Get Thumb Params by Conversion Profile ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "conversionProfileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "thumbParams"
        ]
      }
    },
    "/service/thumbparams/action/list": {
      "get": {
        "description": "List Thumb Params by filter with paging support (By default - all system default params will be listed too)\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaThumbParamsOutputBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "enum": [
              "3gp",
              "applehttp",
              "avi",
              "bmp",
              "copy",
              "flv",
              "hls",
              "isma",
              "ismv",
              "jpg",
              "m2ts",
              "m4v",
              "mkv",
              "mov",
              "mp3",
              "mp4",
              "mpeg",
              "mpegts",
              "mxf",
              "ogg",
              "ogv",
              "pdf",
              "png",
              "swf",
              "wav",
              "webm",
              "wma",
              "wmv",
              "wvm"
            ],
            "enumLabels": [
              "_3GP",
              "APPLEHTTP",
              "AVI",
              "BMP",
              "COPY",
              "FLV",
              "HLS",
              "ISMA",
              "ISMV",
              "JPG",
              "M2TS",
              "M4V",
              "MKV",
              "MOV",
              "MP3",
              "MP4",
              "MPEG",
              "MPEGTS",
              "MXF",
              "OGG",
              "OGV",
              "PDF",
              "PNG",
              "SWF",
              "WAV",
              "WEBM",
              "WMA",
              "WMV",
              "WVM"
            ],
            "in": "query",
            "name": "filter[formatEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[thumbParamsIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutputBaseFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[thumbParamsVersionEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutputBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[thumbAssetIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutputBaseFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[thumbAssetVersionEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutputBaseFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbParamsListResponse"
            }
          }
        },
        "tags": [
          "thumbParams"
        ]
      }
    },
    "/service/thumbparams/action/update": {
      "get": {
        "description": "Update Thumb Params by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "KalturaThumbParamsOutput"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "enumLabels": [
              "RESIZE",
              "RESIZE_WITH_PADDING",
              "CROP",
              "CROP_FROM_TOP",
              "RESIZE_WITH_FORCE"
            ],
            "in": "query",
            "name": "thumbParams[cropType]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[quality]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropX]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropY]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropWidth]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[cropHeight]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[videoOffset]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "thumbParams[width]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[height]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[scaleWidth]",
            "type": "number"
          },
          {
            "in": "query",
            "name": "thumbParams[scaleHeight]",
            "type": "number"
          },
          {
            "description": "Hexadecimal value",
            "in": "query",
            "name": "thumbParams[backgroundColor]",
            "type": "string"
          },
          {
            "description": "Id of the flavor params or the thumbnail params to be used as source for the thumbnail creation",
            "in": "query",
            "name": "thumbParams[sourceParamsId]",
            "type": "integer"
          },
          {
            "description": "The container format of the Flavor Params",
            "enum": [
              "3gp",
              "applehttp",
              "avi",
              "bmp",
              "copy",
              "flv",
              "hls",
              "isma",
              "ismv",
              "jpg",
              "m2ts",
              "m4v",
              "mkv",
              "mov",
              "mp3",
              "mp4",
              "mpeg",
              "mpegts",
              "mxf",
              "ogg",
              "ogv",
              "pdf",
              "png",
              "swf",
              "wav",
              "webm",
              "wma",
              "wmv",
              "wvm"
            ],
            "enumLabels": [
              "_3GP",
              "APPLEHTTP",
              "AVI",
              "BMP",
              "COPY",
              "FLV",
              "HLS",
              "ISMA",
              "ISMV",
              "JPG",
              "M2TS",
              "M4V",
              "MKV",
              "MOV",
              "MP3",
              "MP4",
              "MPEG",
              "MPEGTS",
              "MXF",
              "OGG",
              "OGV",
              "PDF",
              "PNG",
              "SWF",
              "WAV",
              "WEBM",
              "WMA",
              "WMV",
              "WVM"
            ],
            "in": "query",
            "name": "thumbParams[format]",
            "type": "string"
          },
          {
            "description": "The image density (dpi) for example: 72 or 96",
            "in": "query",
            "name": "thumbParams[density]",
            "type": "integer"
          },
          {
            "description": "Strip profiles and comments",
            "in": "query",
            "name": "thumbParams[stripProfiles]",
            "type": "boolean"
          },
          {
            "description": "Create thumbnail from the videoLengthpercentage second",
            "in": "query",
            "name": "thumbParams[videoOffsetInPercentage]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[partnerId]",
            "type": "integer"
          },
          {
            "description": "The name of the Flavor Params",
            "in": "query",
            "name": "thumbParams[name]",
            "type": "string"
          },
          {
            "description": "System name of the Flavor Params",
            "in": "query",
            "name": "thumbParams[systemName]",
            "type": "string"
          },
          {
            "description": "The description of the Flavor Params",
            "in": "query",
            "name": "thumbParams[description]",
            "type": "string"
          },
          {
            "description": "The Flavor Params tags are used to identify the flavor for different usage (e.g. web, hd, mobile)",
            "in": "query",
            "name": "thumbParams[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[requiredPermissions]",
            "type": "array"
          },
          {
            "description": "Id of remote storage profile that used to get the source, zero indicates Kaltura data center",
            "in": "query",
            "name": "thumbParams[sourceRemoteStorageProfileId]",
            "type": "integer"
          },
          {
            "description": "Comma seperated ids of remote storage profiles that the flavor distributed to, the distribution done by the conversion engine",
            "in": "query",
            "name": "thumbParams[remoteStorageProfileIds]",
            "type": "integer"
          },
          {
            "description": "Media parser type to be used for post-conversion validation",
            "enum": [
              "0",
              "1"
            ],
            "enumLabels": [
              "MEDIAINFO",
              "FFMPEG"
            ],
            "in": "query",
            "name": "thumbParams[mediaParserType]",
            "type": "string"
          },
          {
            "description": "Comma seperated ids of source flavor params this flavor is created from",
            "in": "query",
            "name": "thumbParams[sourceAssetParamsIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbParamsId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbParamsVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbAssetId]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[thumbAssetVersion]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "thumbParams[rotate]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaThumbParamsOutput"
            },
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbParams"
            }
          }
        },
        "tags": [
          "thumbParams"
        ]
      }
    },
    "/service/thumbparamsoutput/action/get": {
      "get": {
        "description": "Get thumb params output object by ID\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbParamsOutput"
            }
          }
        },
        "tags": [
          "thumbParamsOutput"
        ]
      }
    },
    "/service/thumbparamsoutput/action/list": {
      "get": {
        "description": "List thumb params output objects by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[thumbParamsIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[thumbParamsVersionEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[thumbAssetIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[thumbAssetVersionEqual]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaThumbParamsOutputListResponse"
            }
          }
        },
        "tags": [
          "thumbParamsOutput"
        ]
      }
    },
    "/service/uiconf/action/add": {
      "get": {
        "description": "UIConf Add action allows you to add a UIConf to Kaltura DB\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaUiConfAdmin"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Name of the uiConf, this is not a primary key",
            "in": "query",
            "name": "uiConf[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[description]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21
            ],
            "enumLabels": [
              "PLAYER",
              "CONTRIBUTION_WIZARD",
              "SIMPLE_EDITOR",
              "ADVANCED_EDITOR",
              "PLAYLIST",
              "APP_STUDIO",
              "KRECORD",
              "PLAYER_V3",
              "KMC_ACCOUNT",
              "KMC_ANALYTICS",
              "KMC_CONTENT",
              "KMC_DASHBOARD",
              "KMC_LOGIN",
              "PLAYER_SL",
              "CLIENTSIDE_ENCODER",
              "KMC_GENERAL",
              "KMC_ROLES_AND_PERMISSIONS",
              "CLIPPER",
              "KSR",
              "KUPLOAD",
              "WEBCASTING"
            ],
            "in": "query",
            "name": "uiConf[objType]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[width]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[height]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[htmlParams]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[swfUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[confFile]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[confFileFeatures]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[config]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[confVars]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[useCdn]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "uiConf[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[swfUrlVersion]",
            "type": "string"
          },
          {
            "enum": [
              2,
              3
            ],
            "enumLabels": [
              "WIZARD",
              "ADVANCED"
            ],
            "in": "query",
            "name": "uiConf[creationMode]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[html5Url]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[partnerTags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[isPublic]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaUiConfAdmin"
            },
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUiConf"
            }
          }
        },
        "tags": [
          "uiConf"
        ]
      }
    },
    "/service/uiconf/action/clone": {
      "get": {
        "description": "Clone an existing UIConf\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUiConf"
            }
          }
        },
        "tags": [
          "uiConf"
        ]
      }
    },
    "/service/uiconf/action/delete": {
      "get": {
        "description": "Delete an existing UIConf\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "uiConf"
        ]
      }
    },
    "/service/uiconf/action/get": {
      "get": {
        "description": "Retrieve a UIConf by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUiConf"
            }
          }
        },
        "tags": [
          "uiConf"
        ]
      }
    },
    "/service/uiconf/action/getAvailableTypes": {
      "get": {
        "description": "Retrieve a list of all available versions by object type\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "uiConf"
        ]
      }
    },
    "/service/uiconf/action/list": {
      "get": {
        "description": "Retrieve a list of available UIConfs\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaUiConfAdminBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21
            ],
            "enumLabels": [
              "PLAYER",
              "CONTRIBUTION_WIZARD",
              "SIMPLE_EDITOR",
              "ADVANCED_EDITOR",
              "PLAYLIST",
              "APP_STUDIO",
              "KRECORD",
              "PLAYER_V3",
              "KMC_ACCOUNT",
              "KMC_ANALYTICS",
              "KMC_CONTENT",
              "KMC_DASHBOARD",
              "KMC_LOGIN",
              "PLAYER_SL",
              "CLIENTSIDE_ENCODER",
              "KMC_GENERAL",
              "KMC_ROLES_AND_PERMISSIONS",
              "CLIPPER",
              "KSR",
              "KUPLOAD",
              "WEBCASTING"
            ],
            "in": "query",
            "name": "filter[objTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[objTypeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              2,
              3
            ],
            "enumLabels": [
              "WIZARD",
              "ADVANCED"
            ],
            "in": "query",
            "name": "filter[creationModeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[creationModeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[versionEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[versionMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[versionMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerTagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerTagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUiConfListResponse"
            }
          }
        },
        "tags": [
          "uiConf"
        ]
      }
    },
    "/service/uiconf/action/listTemplates": {
      "get": {
        "description": "retrieve a list of available template UIConfs\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaUiConfAdminBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21
            ],
            "enumLabels": [
              "PLAYER",
              "CONTRIBUTION_WIZARD",
              "SIMPLE_EDITOR",
              "ADVANCED_EDITOR",
              "PLAYLIST",
              "APP_STUDIO",
              "KRECORD",
              "PLAYER_V3",
              "KMC_ACCOUNT",
              "KMC_ANALYTICS",
              "KMC_CONTENT",
              "KMC_DASHBOARD",
              "KMC_LOGIN",
              "PLAYER_SL",
              "CLIENTSIDE_ENCODER",
              "KMC_GENERAL",
              "KMC_ROLES_AND_PERMISSIONS",
              "CLIPPER",
              "KSR",
              "KUPLOAD",
              "WEBCASTING"
            ],
            "in": "query",
            "name": "filter[objTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[objTypeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              2,
              3
            ],
            "enumLabels": [
              "WIZARD",
              "ADVANCED"
            ],
            "in": "query",
            "name": "filter[creationModeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[creationModeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[versionEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[versionMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[versionMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerTagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerTagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUiConfListResponse"
            }
          }
        },
        "tags": [
          "uiConf"
        ]
      }
    },
    "/service/uiconf/action/update": {
      "get": {
        "description": "Update an existing UIConf\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "KalturaUiConfAdmin"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Name of the uiConf, this is not a primary key",
            "in": "query",
            "name": "uiConf[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[description]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21
            ],
            "enumLabels": [
              "PLAYER",
              "CONTRIBUTION_WIZARD",
              "SIMPLE_EDITOR",
              "ADVANCED_EDITOR",
              "PLAYLIST",
              "APP_STUDIO",
              "KRECORD",
              "PLAYER_V3",
              "KMC_ACCOUNT",
              "KMC_ANALYTICS",
              "KMC_CONTENT",
              "KMC_DASHBOARD",
              "KMC_LOGIN",
              "PLAYER_SL",
              "CLIENTSIDE_ENCODER",
              "KMC_GENERAL",
              "KMC_ROLES_AND_PERMISSIONS",
              "CLIPPER",
              "KSR",
              "KUPLOAD",
              "WEBCASTING"
            ],
            "in": "query",
            "name": "uiConf[objType]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[width]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[height]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[htmlParams]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[swfUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[confFile]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[confFileFeatures]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[config]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[confVars]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[useCdn]",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "uiConf[tags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[swfUrlVersion]",
            "type": "string"
          },
          {
            "enum": [
              2,
              3
            ],
            "enumLabels": [
              "WIZARD",
              "ADVANCED"
            ],
            "in": "query",
            "name": "uiConf[creationMode]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "uiConf[html5Url]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[partnerTags]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "uiConf[isPublic]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaUiConfAdmin"
            },
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUiConf"
            }
          }
        },
        "tags": [
          "uiConf"
        ]
      }
    },
    "/service/upload/action/getUploadedFileTokenByFileName": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "fileName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUploadResponse"
            }
          }
        },
        "tags": [
          "upload"
        ]
      }
    },
    "/service/upload/action/upload": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "upload"
        ]
      }
    },
    "/service/uploadtoken/action/add": {
      "get": {
        "description": "Adds new upload token to upload a file\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Name of the file for the upload token, can be empty when the upload token is created and will be updated internally after the file is uploaded",
            "in": "query",
            "name": "uploadToken[fileName]",
            "type": "string"
          },
          {
            "description": "File size in bytes, can be empty when the upload token is created and will be updated internally after the file is uploaded",
            "in": "query",
            "name": "uploadToken[fileSize]",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUploadToken"
            }
          }
        },
        "tags": [
          "uploadToken"
        ]
      }
    },
    "/service/uploadtoken/action/delete": {
      "get": {
        "description": "Deletes the upload token by upload token id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "uploadTokenId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "uploadToken"
        ]
      }
    },
    "/service/uploadtoken/action/get": {
      "get": {
        "description": "Get upload token by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "uploadTokenId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUploadToken"
            }
          }
        },
        "tags": [
          "uploadToken"
        ]
      }
    },
    "/service/uploadtoken/action/list": {
      "get": {
        "description": "List upload token by filter with pager support. \n\t When using a user session the service will be restricted to users objects only.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdEqual]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "enumLabels": [
              "PENDING",
              "PARTIAL_UPLOAD",
              "FULL_UPLOAD",
              "CLOSED",
              "TIMED_OUT",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fileNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[fileSizeEqual]",
            "type": "number"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUploadTokenListResponse"
            }
          }
        },
        "tags": [
          "uploadToken"
        ]
      }
    },
    "/service/uploadtoken/action/upload": {
      "get": {
        "description": "Upload a file using the upload token id, returns an error on failure (an exception will be thrown when using one of the Kaltura clients) \n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "uploadTokenId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "resume",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "",
            "in": "query",
            "name": "finalChunk",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "",
            "in": "query",
            "name": "resumeAt",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUploadToken"
            }
          }
        },
        "tags": [
          "uploadToken"
        ]
      }
    },
    "/service/user/action/add": {
      "get": {
        "description": "Adds a new user to an existing account in the Kaltura database.\n\t Input param $id is the unique identifier in the partner's system.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAdminUser"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "user[id]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[screenName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[fullName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[email]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[dateOfBirth]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "user[country]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[state]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[city]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[zip]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[thumbnailUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[description]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[tags]",
            "type": "string"
          },
          {
            "description": "Admin tags can be updated only by using an admin session",
            "in": "query",
            "name": "user[adminTags]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "UNKNOWN",
              "MALE",
              "FEMALE"
            ],
            "in": "query",
            "name": "user[gender]",
            "type": "integer"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "BLOCKED",
              "ACTIVE",
              "DELETED"
            ],
            "in": "query",
            "name": "user[status]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "user[partnerData]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[indexedPartnerDataInt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "user[indexedPartnerDataString]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[password]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[firstName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[lastName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[isAdmin]",
            "type": "boolean"
          },
          {
            "enum": [
              "aa",
              "ab",
              "af",
              "am",
              "ar",
              "as",
              "ay",
              "az",
              "ba",
              "be",
              "bg",
              "bh",
              "bi",
              "bn",
              "bo",
              "br",
              "ca",
              "co",
              "cs",
              "cy",
              "da",
              "de",
              "dz",
              "el",
              "en",
              "eo",
              "es",
              "et",
              "eu",
              "fa",
              "fi",
              "fj",
              "fo",
              "fr",
              "fy",
              "ga",
              "gd",
              "gl",
              "gn",
              "gu",
              "gv",
              "ha",
              "he",
              "hi",
              "hr",
              "hu",
              "hy",
              "ia",
              "id",
              "ie",
              "ik",
              "in",
              "is",
              "it",
              "iu",
              "iw",
              "ja",
              "ji",
              "jv",
              "ka",
              "kk",
              "kl",
              "km",
              "kn",
              "ko",
              "ks",
              "ku",
              "ky",
              "la",
              "li",
              "ln",
              "lo",
              "lt",
              "lv",
              "mg",
              "mi",
              "mk",
              "ml",
              "mn",
              "mo",
              "mr",
              "ms",
              "mt",
              "multilingual",
              "my",
              "na",
              "ne",
              "nl",
              "no",
              "oc",
              "om",
              "or",
              "pa",
              "pl",
              "ps",
              "pt",
              "qu",
              "rm",
              "rn",
              "ro",
              "ru",
              "rw",
              "sa",
              "sd",
              "sg",
              "sh",
              "si",
              "sk",
              "sl",
              "sm",
              "sn",
              "so",
              "sq",
              "sr",
              "ss",
              "st",
              "su",
              "sv",
              "sw",
              "ta",
              "te",
              "tg",
              "th",
              "ti",
              "tk",
              "tl",
              "tn",
              "to",
              "tr",
              "ts",
              "tt",
              "tw",
              "ug",
              "uk",
              "ur",
              "uz",
              "vi",
              "vo",
              "wo",
              "xh",
              "yi",
              "yo",
              "zh",
              "zu"
            ],
            "enumLabels": [
              "AA",
              "AB",
              "AF",
              "AM",
              "AR",
              "AS_",
              "AY",
              "AZ",
              "BA",
              "BE",
              "BG",
              "BH",
              "BI",
              "BN",
              "BO",
              "BR",
              "CA",
              "CO",
              "CS",
              "CY",
              "DA",
              "DE",
              "DZ",
              "EL",
              "EN",
              "EO",
              "ES",
              "ET",
              "EU",
              "FA",
              "FI",
              "FJ",
              "FO",
              "FR",
              "FY",
              "GA",
              "GD",
              "GL",
              "GN",
              "GU",
              "GV",
              "HA",
              "HE",
              "HI",
              "HR",
              "HU",
              "HY",
              "IA",
              "ID",
              "IE",
              "IK",
              "IN",
              "IS",
              "IT",
              "IU",
              "IW",
              "JA",
              "JI",
              "JV",
              "KA",
              "KK",
              "KL",
              "KM",
              "KN",
              "KO",
              "KS",
              "KU",
              "KY",
              "LA",
              "LI",
              "LN",
              "LO",
              "LT",
              "LV",
              "MG",
              "MI",
              "MK",
              "ML",
              "MN",
              "MO",
              "MR",
              "MS",
              "MT",
              "MU",
              "MY",
              "NA",
              "NE",
              "NL",
              "NO",
              "OC",
              "OM",
              "OR_",
              "PA",
              "PL",
              "PS",
              "PT",
              "QU",
              "RM",
              "RN",
              "RO",
              "RU",
              "RW",
              "SA",
              "SD",
              "SG",
              "SH",
              "SI",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SQ",
              "SR",
              "SS",
              "ST",
              "SU",
              "SV",
              "SW",
              "TA",
              "TE",
              "TG",
              "TH",
              "TI",
              "TK",
              "TL",
              "TN",
              "TO",
              "TR",
              "TS",
              "TT",
              "TW",
              "UG",
              "UK",
              "UR",
              "UZ",
              "VI",
              "VO",
              "WO",
              "XH",
              "YI",
              "YO",
              "ZH",
              "ZU"
            ],
            "in": "query",
            "name": "user[language]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[roleIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[allowedPartnerIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[allowedPartnerPackages]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUser"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/addFromBulkUpload": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaBulkUploadCsvJobData",
              "KalturaBulkUploadFilterJobData",
              "KalturaBulkUploadXmlJobData"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Friendly name of the file, used to be recognized later in the logs.",
            "in": "query",
            "name": "bulkUploadData[fileName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bulkUploadData[objectData]"
          },
          {
            "description": "Recipients of the email for bulk upload success/failure",
            "in": "query",
            "name": "bulkUploadData[emailRecipients]",
            "type": "string"
          },
          {
            "description": "Number of objects that finished on error status",
            "in": "query",
            "name": "bulkUploadData[numOfErrorObjects]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "bulkUploadData[columns]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaBulkUploadCsvJobData"
            },
            "type": "array"
          },
          {
            "in": "query",
            "name": "bulkUploadData[filter]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaBulkUploadFilterJobData"
            }
          },
          {
            "in": "query",
            "name": "bulkUploadData[templateObject]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaBulkUploadFilterJobData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUpload"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/checkLoginDataExists": {
      "get": {
        "description": "Action which checks whther user login \n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[loginEmailEqual]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/delete": {
      "get": {
        "description": "Deletes a user from a partner account.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The user's unique identifier in the partner's system",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUser"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/disableLogin": {
      "get": {
        "description": "Disables a user's ability to log into a partner account using an email address and a password.\n\t You may use either a userId or a loginId parameter for this action.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The user's unique identifier in the partner's system",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The user's email address that identifies the user for login",
            "in": "query",
            "name": "loginId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUser"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/enableLogin": {
      "get": {
        "description": "Enables a user to log into a partner account using an email address and a password\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The user's unique identifier in the partner's system",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The user's email address that identifies the user for login",
            "in": "query",
            "name": "loginId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The user's password",
            "in": "query",
            "name": "password",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUser"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/get": {
      "get": {
        "description": "Retrieves a user object for a specified user ID.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The user's unique identifier in the partner's system",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUser"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/getByLoginId": {
      "get": {
        "description": "Retrieves a user object for a user's login ID and partner ID.\n\t A login ID is the email address used by a user to log into the system.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The user's email address that identifies the user for login",
            "in": "query",
            "name": "loginId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUser"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/index": {
      "get": {
        "description": "Index an entry by id.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "shouldUpdate",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/list": {
      "get": {
        "description": "Lists user objects that are associated with an account.\n\t Blocked users are listed unless you use a filter to exclude them.\n\t Deleted users are not listed unless you use a filter to include them.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaAdminUserBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "filter[idOrScreenNameStartsWith]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[loginEnabledEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[roleIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[roleIdsEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[roleIdsIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[firstNameOrLastNameStartsWith]",
            "type": "string"
          },
          {
            "description": "Permission names filter expression",
            "in": "query",
            "name": "filter[permissionNamesMultiLikeOr]",
            "type": "string"
          },
          {
            "description": "Permission names filter expression",
            "in": "query",
            "name": "filter[permissionNamesMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "enum": [
              0,
              1
            ],
            "enumLabels": [
              "USER",
              "GROUP"
            ],
            "in": "query",
            "name": "filter[typeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[typeIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[screenNameLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[screenNameStartsWith]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[emailLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[emailStartsWith]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "BLOCKED",
              "ACTIVE",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[firstNameStartsWith]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[lastNameStartsWith]",
            "type": "string"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[isAdminEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserListResponse"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/login": {
      "get": {
        "description": "Logs a user into a partner account with a partner ID, a partner user ID (puser), and a user password.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The identifier of the partner account",
            "in": "query",
            "name": "partnerId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The user's unique identifier in the partner's system",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The user's password",
            "in": "query",
            "name": "password",
            "required": false,
            "type": "string"
          },
          {
            "description": "The requested time (in seconds) before the generated KS expires (By default, a KS expires after 24 hours).",
            "in": "query",
            "name": "expiry",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Special privileges",
            "in": "query",
            "name": "privileges",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/loginByLoginId": {
      "get": {
        "description": "Logs a user into a partner account with a user login ID and a user password.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The user's email address that identifies the user for login",
            "in": "query",
            "name": "loginId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The user's password",
            "in": "query",
            "name": "password",
            "required": false,
            "type": "string"
          },
          {
            "description": "The identifier of the partner account",
            "in": "query",
            "name": "partnerId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The requested time (in seconds) before the generated KS expires (By default, a KS expires after 24 hours).",
            "in": "query",
            "name": "expiry",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Special privileges",
            "in": "query",
            "name": "privileges",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/notifyBan": {
      "get": {
        "description": "Notifies that a user is banned from an account.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The user's unique identifier in the partner's system",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/resetPassword": {
      "get": {
        "description": "Reset user's password and send the user an email to generate a new one.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The user's email address (login email)",
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/setInitialPassword": {
      "get": {
        "description": "Set initial users password\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The hash key used to identify the user (retrieved by email)",
            "in": "query",
            "name": "hashKey",
            "required": false,
            "type": "string"
          },
          {
            "description": "The new password to set for the user",
            "in": "query",
            "name": "newPassword",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/update": {
      "get": {
        "description": "Updates an existing user object.\n\t You can also use this action to update the userId.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The user's unique identifier in the partner's system",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "KalturaAdminUser"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "user[id]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[screenName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[fullName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[email]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[dateOfBirth]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "user[country]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[state]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[city]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[zip]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[thumbnailUrl]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[description]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[tags]",
            "type": "string"
          },
          {
            "description": "Admin tags can be updated only by using an admin session",
            "in": "query",
            "name": "user[adminTags]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "UNKNOWN",
              "MALE",
              "FEMALE"
            ],
            "in": "query",
            "name": "user[gender]",
            "type": "integer"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "BLOCKED",
              "ACTIVE",
              "DELETED"
            ],
            "in": "query",
            "name": "user[status]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "user[partnerData]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[indexedPartnerDataInt]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "user[indexedPartnerDataString]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[password]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[firstName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[lastName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[isAdmin]",
            "type": "boolean"
          },
          {
            "enum": [
              "aa",
              "ab",
              "af",
              "am",
              "ar",
              "as",
              "ay",
              "az",
              "ba",
              "be",
              "bg",
              "bh",
              "bi",
              "bn",
              "bo",
              "br",
              "ca",
              "co",
              "cs",
              "cy",
              "da",
              "de",
              "dz",
              "el",
              "en",
              "eo",
              "es",
              "et",
              "eu",
              "fa",
              "fi",
              "fj",
              "fo",
              "fr",
              "fy",
              "ga",
              "gd",
              "gl",
              "gn",
              "gu",
              "gv",
              "ha",
              "he",
              "hi",
              "hr",
              "hu",
              "hy",
              "ia",
              "id",
              "ie",
              "ik",
              "in",
              "is",
              "it",
              "iu",
              "iw",
              "ja",
              "ji",
              "jv",
              "ka",
              "kk",
              "kl",
              "km",
              "kn",
              "ko",
              "ks",
              "ku",
              "ky",
              "la",
              "li",
              "ln",
              "lo",
              "lt",
              "lv",
              "mg",
              "mi",
              "mk",
              "ml",
              "mn",
              "mo",
              "mr",
              "ms",
              "mt",
              "multilingual",
              "my",
              "na",
              "ne",
              "nl",
              "no",
              "oc",
              "om",
              "or",
              "pa",
              "pl",
              "ps",
              "pt",
              "qu",
              "rm",
              "rn",
              "ro",
              "ru",
              "rw",
              "sa",
              "sd",
              "sg",
              "sh",
              "si",
              "sk",
              "sl",
              "sm",
              "sn",
              "so",
              "sq",
              "sr",
              "ss",
              "st",
              "su",
              "sv",
              "sw",
              "ta",
              "te",
              "tg",
              "th",
              "ti",
              "tk",
              "tl",
              "tn",
              "to",
              "tr",
              "ts",
              "tt",
              "tw",
              "ug",
              "uk",
              "ur",
              "uz",
              "vi",
              "vo",
              "wo",
              "xh",
              "yi",
              "yo",
              "zh",
              "zu"
            ],
            "enumLabels": [
              "AA",
              "AB",
              "AF",
              "AM",
              "AR",
              "AS_",
              "AY",
              "AZ",
              "BA",
              "BE",
              "BG",
              "BH",
              "BI",
              "BN",
              "BO",
              "BR",
              "CA",
              "CO",
              "CS",
              "CY",
              "DA",
              "DE",
              "DZ",
              "EL",
              "EN",
              "EO",
              "ES",
              "ET",
              "EU",
              "FA",
              "FI",
              "FJ",
              "FO",
              "FR",
              "FY",
              "GA",
              "GD",
              "GL",
              "GN",
              "GU",
              "GV",
              "HA",
              "HE",
              "HI",
              "HR",
              "HU",
              "HY",
              "IA",
              "ID",
              "IE",
              "IK",
              "IN",
              "IS",
              "IT",
              "IU",
              "IW",
              "JA",
              "JI",
              "JV",
              "KA",
              "KK",
              "KL",
              "KM",
              "KN",
              "KO",
              "KS",
              "KU",
              "KY",
              "LA",
              "LI",
              "LN",
              "LO",
              "LT",
              "LV",
              "MG",
              "MI",
              "MK",
              "ML",
              "MN",
              "MO",
              "MR",
              "MS",
              "MT",
              "MU",
              "MY",
              "NA",
              "NE",
              "NL",
              "NO",
              "OC",
              "OM",
              "OR_",
              "PA",
              "PL",
              "PS",
              "PT",
              "QU",
              "RM",
              "RN",
              "RO",
              "RU",
              "RW",
              "SA",
              "SD",
              "SG",
              "SH",
              "SI",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SQ",
              "SR",
              "SS",
              "ST",
              "SU",
              "SV",
              "SW",
              "TA",
              "TE",
              "TG",
              "TH",
              "TI",
              "TK",
              "TL",
              "TN",
              "TO",
              "TR",
              "TS",
              "TT",
              "TW",
              "UG",
              "UK",
              "UR",
              "UZ",
              "VI",
              "VO",
              "WO",
              "XH",
              "YI",
              "YO",
              "ZH",
              "ZU"
            ],
            "in": "query",
            "name": "user[language]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[roleIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[allowedPartnerIds]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user[allowedPartnerPackages]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUser"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/user/action/updateLoginData": {
      "get": {
        "description": "Updates a user's login data: email, password, name.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The user's current email address that identified the user for login",
            "in": "query",
            "name": "oldLoginId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The user's current email address that identified the user for login",
            "in": "query",
            "name": "password",
            "required": false,
            "type": "string"
          },
          {
            "description": "Optional, The user's email address that will identify the user for login",
            "in": "query",
            "name": "newLoginId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Optional, The user's new password",
            "in": "query",
            "name": "newPassword",
            "required": false,
            "type": "string"
          },
          {
            "description": "Optional, The user's new first name",
            "in": "query",
            "name": "newFirstName",
            "required": false,
            "type": "string"
          },
          {
            "description": "Optional, The user's new last name",
            "in": "query",
            "name": "newLastName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/service/userentry/action/add": {
      "get": {
        "description": "Adds a user_entry to the Kaltura DB.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaQuizUserEntry"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "userEntry[entryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "userEntry[userId]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserEntry"
            }
          }
        },
        "tags": [
          "userEntry"
        ]
      }
    },
    "/service/userentry/action/delete": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserEntry"
            }
          }
        },
        "tags": [
          "userEntry"
        ]
      }
    },
    "/service/userentry/action/get": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserEntry"
            }
          }
        },
        "tags": [
          "userEntry"
        ]
      }
    },
    "/service/userentry/action/list": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaQuizUserEntryBaseFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "enum": [
              -1,
              0,
              1
            ],
            "enumLabels": [
              "NULL_VALUE",
              "FALSE_VALUE",
              "TRUE_VALUE"
            ],
            "in": "query",
            "name": "filter[userIdEqualCurrent]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idNotIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[entryIdNotIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[userIdNotIn]",
            "type": "string"
          },
          {
            "enum": [
              "quiz.3",
              "1",
              "2"
            ],
            "enumLabels": [
              "QUIZ_SUBMITTED",
              "ACTIVE",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              "quiz.QUIZ"
            ],
            "enumLabels": [
              "QUIZ"
            ],
            "in": "query",
            "name": "filter[typeEqual]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserEntryListResponse"
            }
          }
        },
        "tags": [
          "userEntry"
        ]
      }
    },
    "/service/userentry/action/submitQuiz": {
      "get": {
        "description": "Submits the quiz so that it's status will be submitted and calculates the score for the quiz\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaQuizUserEntry"
            }
          }
        },
        "tags": [
          "userEntry"
        ]
      }
    },
    "/service/userentry/action/update": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "KalturaQuizUserEntry"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "userEntry[entryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "userEntry[userId]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "userEntry"
        ]
      }
    },
    "/service/userrole/action/add": {
      "get": {
        "description": "Adds a new user role object to the account.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "userRole[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "userRole[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "userRole[description]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "ACTIVE",
              "BLOCKED",
              "DELETED"
            ],
            "in": "query",
            "name": "userRole[status]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "userRole[permissionNames]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "userRole[tags]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserRole"
            }
          }
        },
        "tags": [
          "userRole"
        ]
      }
    },
    "/service/userrole/action/clone": {
      "get": {
        "description": "Creates a new user role object that is a duplicate of an existing role.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The user role's unique identifier",
            "in": "query",
            "name": "userRoleId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserRole"
            }
          }
        },
        "tags": [
          "userRole"
        ]
      }
    },
    "/service/userrole/action/delete": {
      "get": {
        "description": "Deletes an existing user role object.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The user role's unique identifier",
            "in": "query",
            "name": "userRoleId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserRole"
            }
          }
        },
        "tags": [
          "userRole"
        ]
      }
    },
    "/service/userrole/action/get": {
      "get": {
        "description": "Retrieves a user role object using its ID.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The user role's unique identifier",
            "in": "query",
            "name": "userRoleId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserRole"
            }
          }
        },
        "tags": [
          "userRole"
        ]
      }
    },
    "/service/userrole/action/list": {
      "get": {
        "description": "Lists user role objects that are associated with an account.\n\t Blocked user roles are listed unless you use a filter to exclude them.\n\t Deleted user roles are not listed unless you use a filter to include them.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[systemNameIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[descriptionLike]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "ACTIVE",
              "BLOCKED",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[tagsMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserRoleListResponse"
            }
          }
        },
        "tags": [
          "userRole"
        ]
      }
    },
    "/service/userrole/action/update": {
      "get": {
        "description": "Updates an existing user role object.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "The user role's unique identifier",
            "in": "query",
            "name": "userRoleId",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "userRole[name]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "userRole[systemName]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "userRole[description]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "ACTIVE",
              "BLOCKED",
              "DELETED"
            ],
            "in": "query",
            "name": "userRole[status]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "userRole[permissionNames]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "userRole[tags]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserRole"
            }
          }
        },
        "tags": [
          "userRole"
        ]
      }
    },
    "/service/varconsole_varconsole/action/getPartnerUsage": {
      "get": {
        "description": "Function which calulates partner usage of a group of a VAR's sub-publishers\n     ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "enum": [
              "KalturaSystemPartnerFilter",
              "KalturaVarConsolePartnerFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "in": "query",
            "name": "partnerFilter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[idNotIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[nameLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[nameMultiLikeOr]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[nameMultiLikeAnd]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[nameEqual]",
            "type": "string"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "DELETED",
              "ACTIVE",
              "BLOCKED",
              "FULL_BLOCK"
            ],
            "in": "query",
            "name": "partnerFilter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[statusIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerPackageEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerPackageGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerPackageLessThanOrEqual]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "partnerFilter[partnerGroupTypeEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerNameDescriptionWebsiteAdminNameAdminEmailLike]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerParentIdEqual]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partnerFilter[partnerParentIdIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaSystemPartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Eq filter for the partner's group type",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumLabels": [
              "PUBLISHER",
              "VAR_GROUP",
              "GROUP",
              "TEMPLATE"
            ],
            "in": "query",
            "name": "partnerFilter[groupTypeEq]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "integer"
          },
          {
            "description": "In filter for the partner's group type",
            "in": "query",
            "name": "partnerFilter[groupTypeIn]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          },
          {
            "description": "Filter for partner permissions- filter contains comma-separated string of permission names which the returned partners should have.",
            "in": "query",
            "name": "partnerFilter[partnerPermissionsExist]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaVarConsolePartnerFilter"
            },
            "type": "string"
          },
          {
            "enum": [
              "KalturaEndUserReportInputFilter"
            ],
            "in": "query",
            "name": "subclass"
          },
          {
            "description": "Search keywords to filter objects",
            "in": "query",
            "name": "usageFilter[keywords]",
            "type": "string"
          },
          {
            "description": "Search keywords in onjects tags",
            "in": "query",
            "name": "usageFilter[searchInTags]",
            "type": "boolean"
          },
          {
            "description": "Search keywords in onjects admin tags",
            "in": "query",
            "name": "usageFilter[searchInAdminTags]",
            "type": "boolean"
          },
          {
            "description": "Search onjects in specified categories",
            "in": "query",
            "name": "usageFilter[categories]",
            "type": "string"
          },
          {
            "description": "Time zone offset in minutes",
            "in": "query",
            "name": "usageFilter[timeZoneOffset]",
            "type": "integer"
          },
          {
            "description": "Aggregated results according to interval",
            "enum": [
              "days",
              "months"
            ],
            "enumLabels": [
              "DAYS",
              "MONTHS"
            ],
            "in": "query",
            "name": "usageFilter[interval]",
            "type": "string"
          },
          {
            "description": "Start date as Unix timestamp (In seconds)",
            "in": "query",
            "name": "usageFilter[fromDate]",
            "type": "integer"
          },
          {
            "description": "End date as Unix timestamp (In seconds)",
            "in": "query",
            "name": "usageFilter[toDate]",
            "type": "integer"
          },
          {
            "description": "Start day as string (YYYYMMDD)",
            "in": "query",
            "name": "usageFilter[fromDay]",
            "type": "string"
          },
          {
            "description": "End date as string (YYYYMMDD)",
            "in": "query",
            "name": "usageFilter[toDay]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "usageFilter[application]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "usageFilter[userIds]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "usageFilter[playbackContext]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "in": "query",
            "name": "usageFilter[ancestorPlaybackContext]",
            "showCondition": {
              "name": "subclass",
              "value": "KalturaEndUserReportInputFilter"
            },
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartnerUsageListResponse"
            }
          }
        },
        "tags": [
          "varConsole"
        ]
      }
    },
    "/service/varconsole_varconsole/action/updateStatus": {
      "get": {
        "description": "Function to change a sub-publisher's status\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "enumLabels": [
              "DELETED",
              "ACTIVE",
              "BLOCKED",
              "FULL_BLOCK"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "varConsole"
        ]
      }
    },
    "/service/virusscan_virusscanprofile/action/add": {
      "get": {
        "description": "Allows you to add an virus scan profile object and virus scan profile content associated with Kaltura object\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "virusScanProfile[name]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "virusScanProfile[status]",
            "type": "integer"
          },
          {
            "enum": [
              "clamAVScanEngine.ClamAV"
            ],
            "enumLabels": [
              "CLAMAV_SCAN_ENGINE"
            ],
            "in": "query",
            "name": "virusScanProfile[engineType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "virusScanProfile[entryFilter]"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "NONE",
              "DELETE",
              "CLEAN_NONE",
              "CLEAN_DELETE"
            ],
            "in": "query",
            "name": "virusScanProfile[actionIfInfected]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaVirusScanProfile"
            }
          }
        },
        "tags": [
          "virusScanProfile"
        ]
      }
    },
    "/service/virusscan_virusscanprofile/action/delete": {
      "get": {
        "description": "Mark the virus scan profile as deleted\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "virusScanProfileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaVirusScanProfile"
            }
          }
        },
        "tags": [
          "virusScanProfile"
        ]
      }
    },
    "/service/virusscan_virusscanprofile/action/get": {
      "get": {
        "description": "Retrieve an virus scan profile object by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "virusScanProfileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaVirusScanProfile"
            }
          }
        },
        "tags": [
          "virusScanProfile"
        ]
      }
    },
    "/service/virusscan_virusscanprofile/action/list": {
      "get": {
        "description": "List virus scan profile objects by filter and pager\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerIdIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[nameLike]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string"
          },
          {
            "enum": [
              "clamAVScanEngine.ClamAV"
            ],
            "enumLabels": [
              "CLAMAV_SCAN_ENGINE"
            ],
            "in": "query",
            "name": "filter[engineTypeEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[engineTypeIn]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaVirusScanProfileListResponse"
            }
          }
        },
        "tags": [
          "virusScanProfile"
        ]
      }
    },
    "/service/virusscan_virusscanprofile/action/scan": {
      "get": {
        "description": "Scan flavor asset according to virus scan profile\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "flavorAssetId",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "virusScanProfileId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "virusScanProfile"
        ]
      }
    },
    "/service/virusscan_virusscanprofile/action/update": {
      "get": {
        "description": "Update exisitng virus scan profile, it is possible to update the virus scan profile id too\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "virusScanProfileId",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "virusScanProfile[name]",
            "type": "string"
          },
          {
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "DISABLED",
              "ENABLED",
              "DELETED"
            ],
            "in": "query",
            "name": "virusScanProfile[status]",
            "type": "integer"
          },
          {
            "enum": [
              "clamAVScanEngine.ClamAV"
            ],
            "enumLabels": [
              "CLAMAV_SCAN_ENGINE"
            ],
            "in": "query",
            "name": "virusScanProfile[engineType]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "virusScanProfile[entryFilter]"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumLabels": [
              "NONE",
              "DELETE",
              "CLEAN_NONE",
              "CLEAN_DELETE"
            ],
            "in": "query",
            "name": "virusScanProfile[actionIfInfected]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaVirusScanProfile"
            }
          }
        },
        "tags": [
          "virusScanProfile"
        ]
      }
    },
    "/service/widget/action/add": {
      "get": {
        "description": "Add new widget, can be attached to entry or kshow\n\t SourceWidget is ignored.\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "widget[sourceWidgetId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "widget[entryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "widget[uiConfId]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "NONE",
              "TIMEHASH"
            ],
            "in": "query",
            "name": "widget[securityType]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "widget[securityPolicy]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "widget[partnerData]",
            "type": "string"
          },
          {
            "description": "Should enforce entitlement on feed entries",
            "in": "query",
            "name": "widget[enforceEntitlement]",
            "type": "boolean"
          },
          {
            "description": "Set privacy context for search entries that assiged to private and public categories within a category privacy context.",
            "in": "query",
            "name": "widget[privacyContext]",
            "type": "string"
          },
          {
            "description": "Addes the HTML5 script line to the widget's embed code",
            "in": "query",
            "name": "widget[addEmbedHtml5Support]",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaWidget"
            }
          }
        },
        "tags": [
          "widget"
        ]
      }
    },
    "/service/widget/action/clone": {
      "get": {
        "description": "Add widget based on existing widget.\n\t Must provide valid sourceWidgetId\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "widget[sourceWidgetId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "widget[entryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "widget[uiConfId]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "NONE",
              "TIMEHASH"
            ],
            "in": "query",
            "name": "widget[securityType]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "widget[securityPolicy]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "widget[partnerData]",
            "type": "string"
          },
          {
            "description": "Should enforce entitlement on feed entries",
            "in": "query",
            "name": "widget[enforceEntitlement]",
            "type": "boolean"
          },
          {
            "description": "Set privacy context for search entries that assiged to private and public categories within a category privacy context.",
            "in": "query",
            "name": "widget[privacyContext]",
            "type": "string"
          },
          {
            "description": "Addes the HTML5 script line to the widget's embed code",
            "in": "query",
            "name": "widget[addEmbedHtml5Support]",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaWidget"
            }
          }
        },
        "tags": [
          "widget"
        ]
      }
    },
    "/service/widget/action/get": {
      "get": {
        "description": "Get widget by id\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaWidget"
            }
          }
        },
        "tags": [
          "widget"
        ]
      }
    },
    "/service/widget/action/list": {
      "get": {
        "description": "Retrieve a list of available widget depends on the filter given\n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "in": "query",
            "name": "filter[idEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[idIn]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[sourceWidgetIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[rootWidgetIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[partnerIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[entryIdEqual]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter[uiConfIdEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtGreaterThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[updatedAtLessThanOrEqual]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter[partnerDataLike]",
            "type": "string"
          },
          {
            "description": "The number of objects to retrieve. (Default is 30, maximum page size is 500).",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved (Default is 1).",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaWidgetListResponse"
            }
          }
        },
        "tags": [
          "widget"
        ]
      }
    },
    "/service/widget/action/update": {
      "get": {
        "description": "Update exisiting widget\n \t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "widget[sourceWidgetId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "widget[entryId]",
            "type": "string"
          },
          {
            "in": "query",
            "name": "widget[uiConfId]",
            "type": "integer"
          },
          {
            "enum": [
              1,
              2
            ],
            "enumLabels": [
              "NONE",
              "TIMEHASH"
            ],
            "in": "query",
            "name": "widget[securityType]",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "widget[securityPolicy]",
            "type": "integer"
          },
          {
            "description": "Can be used to store various partner related data as a string",
            "in": "query",
            "name": "widget[partnerData]",
            "type": "string"
          },
          {
            "description": "Should enforce entitlement on feed entries",
            "in": "query",
            "name": "widget[enforceEntitlement]",
            "type": "boolean"
          },
          {
            "description": "Set privacy context for search entries that assiged to private and public categories within a category privacy context.",
            "in": "query",
            "name": "widget[privacyContext]",
            "type": "string"
          },
          {
            "description": "Addes the HTML5 script line to the widget's embed code",
            "in": "query",
            "name": "widget[addEmbedHtml5Support]",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaWidget"
            }
          }
        },
        "tags": [
          "widget"
        ]
      }
    },
    "/service/xinternal/action/xAddBulkDownload": {
      "get": {
        "description": "Creates new download job for multiple entry ids (comma separated), an email will be sent when the job is done\n\t This sevice support the following entries: \n\t - MediaEntry\n\t - Video will be converted using the flavor params id\n\t - Audio will be downloaded as MP3\n\t - Image will be downloaded as Jpeg\n\t - MixEntry will be flattened using the flavor params id\n\t - Other entry types are not supported\n\t Returns the admin email that the email message will be sent to \n\t ",
        "parameters": [
          {
            "description": "The format of the response",
            "enum": [
              1,
              2,
              3
            ],
            "enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "in": "query",
            "name": "format",
            "type": "integer",
            "x_df_default": 1
          },
          {
            "description": "Comma separated list of entry ids",
            "in": "query",
            "name": "entryIds",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "flavorParamsId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "xInternal"
        ]
      }
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "ks": {
      "description": "A session ID generated by calling /service/session/action/start",
      "in": "query",
      "name": "ks",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "description": "EmailIngestionProfile service lets you manage email ingestion profile records\n ",
      "name": "EmailIngestionProfile"
    },
    {
      "description": "Add & Manage Access Controls\n ",
      "name": "accessControl"
    },
    {
      "description": "Manage access control profiles\n ",
      "name": "accessControlProfile"
    },
    {
      "description": "Manage details for the administrative user\n ",
      "name": "adminUser"
    },
    {
      "description": "Annotation service - Video Annotation\n ",
      "name": "annotation"
    },
    {
      "description": "Manage application authentication tokens\n ",
      "name": "appToken"
    },
    {
      "description": "Retrieve information and invoke actions on attachment Asset\n ",
      "name": "attachmentAsset"
    },
    {
      "description": "Base Entry Service\n ",
      "name": "baseEntry"
    },
    {
      "description": "Bulk upload service is used to upload & manage bulk uploads\n ",
      "name": "bulk"
    },
    {
      "description": "Bulk upload service is used to upload & manage bulk uploads using CSV files.\n This service manages only entry bulk uploads.\n ",
      "name": "bulkUpload"
    },
    {
      "description": "Retrieve information and invoke actions on caption Asset\n ",
      "name": "captionAsset"
    },
    {
      "description": "Search caption asset items\n ",
      "name": "captionAssetItem"
    },
    {
      "description": "Add & Manage Caption Params\n ",
      "name": "captionParams"
    },
    {
      "description": "Add & Manage Categories\n ",
      "name": "category"
    },
    {
      "description": "Add & Manage CategoryEntry - assign entry to category\n ",
      "name": "categoryEntry"
    },
    {
      "description": "Add & Manage CategoryUser - membership of a user in a category\n ",
      "name": "categoryUser"
    },
    {
      "description": "Add & Manage Conversion Profiles\n ",
      "name": "conversionProfile"
    },
    {
      "description": "Manage the connection between Conversion Profiles and Asset Params\n ",
      "name": "conversionProfileAssetParams"
    },
    {
      "description": "Cue Point service\n ",
      "name": "cuePoint"
    },
    {
      "description": "Data service lets you manage data content (textual content)\n ",
      "name": "data"
    },
    {
      "description": "delivery service is used to control delivery objects\n ",
      "name": "deliveryProfile"
    },
    {
      "description": "Distribution Profile service\n ",
      "name": "distributionProfile"
    },
    {
      "description": "Distribution Provider service\n ",
      "name": "distributionProvider"
    },
    {
      "description": "Document service\n ",
      "name": "document"
    },
    {
      "description": "Document service lets you upload and manage document files\n ",
      "name": "documents"
    },
    {
      "description": "DropFolder service lets you create and manage drop folders\n ",
      "name": "dropFolder"
    },
    {
      "description": "DropFolderFile service lets you create and manage drop folder files\n ",
      "name": "dropFolderFile"
    },
    {
      "description": "Edge Server service\n ",
      "name": "edgeServer"
    },
    {
      "description": "Entry Admin service\n ",
      "name": "entryAdmin"
    },
    {
      "description": "Entry Distribution service\n ",
      "name": "entryDistribution"
    },
    {
      "description": "Event notification template service lets you create and manage event notification templates\n ",
      "name": "eventNotificationTemplate"
    },
    {
      "description": "External media service lets you upload and manage embed codes and external playable content\n ",
      "name": "externalMedia"
    },
    {
      "description": "Manage file assets\n ",
      "name": "fileAsset"
    },
    {
      "description": "Retrieve information and invoke actions on Flavor Asset\n ",
      "name": "flavorAsset"
    },
    {
      "description": "Add & Manage Flavor Params\n ",
      "name": "flavorParams"
    },
    {
      "description": "Flavor Params Output service\n ",
      "name": "flavorParamsOutput"
    },
    {
      "description": "Generic Distribution Provider service\n ",
      "name": "genericDistributionProvider"
    },
    {
      "description": "Generic Distribution Provider Actions service\n ",
      "name": "genericDistributionProviderAction"
    },
    {
      "description": "Add & Manage GroupUser\n ",
      "name": "groupUser"
    },
    {
      "description": "Internal Tools Service\n ",
      "name": "kalturaInternalToolsSystemHelper"
    },
    {
      "description": "Allows user to 'like' or 'unlike' and entry\n ",
      "name": "like"
    },
    {
      "description": "Live Channel service lets you manage live channels\n ",
      "name": "liveChannel"
    },
    {
      "description": "Manage live channel segments\n ",
      "name": "liveChannelSegment"
    },
    {
      "description": "",
      "name": "liveReports"
    },
    {
      "description": "Stats Service\n ",
      "name": "liveStats"
    },
    {
      "description": "Live Stream service lets you manage live stream entries\n ",
      "name": "liveStream"
    },
    {
      "description": "Media service lets you upload and manage media files (images / videos & audio)\n ",
      "name": "media"
    },
    {
      "description": "Media Info service\n ",
      "name": "mediaInfo"
    },
    {
      "description": "Manage media servers\n ",
      "name": "mediaServer"
    },
    {
      "description": "Metadata service\n ",
      "name": "metadata"
    },
    {
      "description": "Metadata Profile service\n ",
      "name": "metadataProfile"
    },
    {
      "description": "A Mix is an XML unique format invented by Kaltura, it allows the user to create a mix of videos and images, in and out points, transitions, text overlays, soundtrack, effects and much more...\n Mixing service lets you create a new mix, manage its metadata and make basic manipulations.   \n ",
      "name": "mixing"
    },
    {
      "description": "Notification Service\n ",
      "name": "notification"
    },
    {
      "description": "partner service allows you to change/manage your partner personal details and settings as well\n ",
      "name": "partner"
    },
    {
      "description": "Permission service lets you create and manage user permissions\n ",
      "name": "permission"
    },
    {
      "description": "PermissionItem service lets you create and manage permission items\n ",
      "name": "permissionItem"
    },
    {
      "description": "Playlist service lets you create,manage and play your playlists\n Playlists could be static (containing a fixed list of entries) or dynamic (baseed on a filter)\n ",
      "name": "playlist"
    },
    {
      "description": "Allows user to handle quizzes\n ",
      "name": "quiz"
    },
    {
      "description": "api for getting reports data by the report type and some inputFilter\n ",
      "name": "report"
    },
    {
      "description": "",
      "name": "reportAdmin"
    },
    {
      "description": "Manage response profiles\n ",
      "name": "responseProfile"
    },
    {
      "description": "Schedule task service lets you create and manage scheduled task profiles\n ",
      "name": "scheduledTaskProfile"
    },
    {
      "description": "Expose the schema definitions for syndication MRSS, bulk upload XML and other schema types. \n ",
      "name": "schema"
    },
    {
      "description": "Search service allows you to search for media in various media providers\n This service is being used mostly by the CW component\n ",
      "name": "search"
    },
    {
      "description": "Session service\n ",
      "name": "session"
    },
    {
      "description": "Short link service\n ",
      "name": "shortLink"
    },
    {
      "description": "Stats Service\n ",
      "name": "stats"
    },
    {
      "description": "Storage Profiles service\n ",
      "name": "storageProfile"
    },
    {
      "description": "Add & Manage Syndication Feeds\n ",
      "name": "syndicationFeed"
    },
    {
      "description": "System service is used for internal system helpers & to retrieve system level information\n ",
      "name": "system"
    },
    {
      "description": "System partner service\n ",
      "name": "systemPartner"
    },
    {
      "description": "Search object tags\n ",
      "name": "tag"
    },
    {
      "description": "Retrieve information and invoke actions on Thumb Asset\n ",
      "name": "thumbAsset"
    },
    {
      "description": "Add & Manage Thumb Params\n ",
      "name": "thumbParams"
    },
    {
      "description": "Thumbnail Params Output service\n ",
      "name": "thumbParamsOutput"
    },
    {
      "description": "UiConf service lets you create and manage your UIConfs for the various flash components\n This service is used by the KMC-ApplicationStudio\n ",
      "name": "uiConf"
    },
    {
      "description": "UiConf Admin service\n ",
      "name": "uiConfAdmin"
    },
    {
      "description": "",
      "name": "upload"
    },
    {
      "description": "",
      "name": "uploadToken"
    },
    {
      "description": "Manage partner users on Kaltura's side\n The userId in kaltura is the unique Id in the partner's system, and the [partnerId,Id] couple are unique key in kaltura's DB\n ",
      "name": "user"
    },
    {
      "description": "",
      "name": "userEntry"
    },
    {
      "description": "UserRole service lets you create and manage user roles\n ",
      "name": "userRole"
    },
    {
      "description": "Utility service for the Multi-publishers console\n ",
      "name": "varConsole"
    },
    {
      "description": "Virus scan profile service\n ",
      "name": "virusScanProfile"
    },
    {
      "description": "widget service for full widget management\n ",
      "name": "widget"
    },
    {
      "description": "Internal Service is used for actions that are used internally in Kaltura applications and might be changed in the future without any notice.\n ",
      "name": "xInternal"
    }
  ]
}