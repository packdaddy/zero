{
  "name": "authentication",
  "title": "Authentication",
  "summary": "Learn how to pass your credentials to Kaltura's API and create a Kaltura Session",
  "description": [
    "This recipe will guide you through the steps necessary to create a Kaltura Session (ks), a temporary authentication token that can provide either user-level or admin-level access to your Kaltura account.,",
    ""
  ],
  "icon": "lock",
  "steps": [
    {
      "title": "Starting a KalturaSession",
      "description": [
        "This recipe shows how to work with Kaltura Sessions (aka `KS`).  To generate a KS, you will need your API secret keys.",
        "To retrieve these secret keys, visit the \"Integration Settings\" tab inside the [Kaltura Management Console](http://kmc.kaltura.com/index.php/kmc/kmc4#account|integration).",
        "To sign up for a Kaltura VPaaS account, visit [vpaas.kaltura.com](https://vpaas.kaltura.com)"
      ],
      "parameters": [
        {
          "name": "partnerId"
        },
        {
          "name": "userId",
          "default": "lucybot@example.com"
        },
        {
          "name": "secret"
        },
        {
          "name": "sessionType",
          "default": 2,
          "hidden": false,
          "enum": [
            2,
            0
          ],
          "enumLabels": [
            "Admin",
            "User"
          ]
        }
      ],
      "apiCall": {
        "path": "/service/session/action/start",
        "method": "get"
      }
    },
    {
      "title": "Checking the KS",
      "description": [
        "You can validate your Kaltura session by calling ```user.get``` without a User ID, which will return the details of the user associated with the current session"
      ],
      "apiCall": {
        "path": "/service/user/action/get",
        "method": "get"
      },
      "ignoreParameters": [
        "format"
      ]
    },
    {
      "title": "Logging in with your Login ID",
      "description": [
        "You can also log in with your Login ID and password by using `user.loginByLoginId`. This will return a new KS.",
        "Note that this KS can only be used to retrieve a list of partnerIds.\nYou can then use one of these partnerIds to get a privileged KS.",
        ""
      ],
      "apiCall": {
        "path": "/service/user/action/loginByLoginId",
        "method": "get"
      },
      "parameters": [
        {
          "name": "loginId"
        },
        {
          "name": "password",
          "x-inputType": "password"
        }
      ]
    },
    {
      "title": "Log In with a Partner ID",
      "description": [
        "After using `user.loginByLoginId`, you can get a list of all your Partner IDs for that account using `partner.listPartnersForUser`.",
        "You can then re-use `user.loginById` with a partnerId to login for as that particular partner."
      ],
      "apiCall": {
        "path": "/service/partner/action/listPartnersForUser",
        "method": "get"
      },
      "parameters": [],
      "ignoreParameters": [
        "format"
      ]
    }
  ],
  "keywords": [],
  "tags": [
    "session",
    "user",
    "partner"
  ],
  "sortOrder": 1000
}