{
  "name": "ajax",
  "version": "1.0.3",
  "main": "ajax.js",
  "description": "Simple ajax function with cache",
  "keywords": [
    "sourcemap",
    "source",
    "map",
    "javascript"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/fresheneesz/ajax"
  },
  "dependencies": {
    "async-future": "0.1.18"
  },
  "devDependencies": {
    "deadunit": "4.1.1",
    "webpack": "",
    "raw-loader": ""
  },
  "readme": "`ajax`\n========\n\nSimple asynchronous ajax function with a cache. Uses [async-futures](https://github.com/fresheneesz/asyncFuture).\n\nExample\n======\n\n```javascript\najax(url).then(function(response) {\n    console.log('Got the file: '+response.text)\n}).done()\n```\n\nInstall\n=======\n\n```\nnpm install https://github.com/fresheneesz/ajax/archive/c0f12d10544a247bfa58b15e9535ee2ffd5787d1.tar.gz\n```\n\nUsage\n=====\n\n```javascript\nvar ajax = require('ajax') // use webpack (recommended) or browserify\n```\n\n`ajax(url)` - Returns a future object containing the following keys:\n* text - the response body of the file\n* headers - an object where the keys are the header names, and the values are their values\n\nThese override cache maintainance functions if you have a separate cache of file sources:\n```javascript\najax.cacheGet(function(url) {\n   // get the url from your own cache\n   // must return the same type of future returned from `ajax(url)`\n})\najax.cacheSet(function(url, futureResponse) {\n   // set the content downloaded from a url for your own cache via the futureResponse\n})\n```\n\nThis sets ajax to synchronous behavior (not recommended). The reason this is here is to allow working around this bug in chrome: https://code.google.com/p/chromium/issues/detail?id=368444\n`ajax.setSynchronous(<synchronous>)` - pass in true to set to synchronous, false to set to async\n\nBrowser Support\n=========\n\nTested in the following browsers:\n* Chrome 31\n* Firefox 26\n* IE 10\n\nHow to Contribute!\n============\n\nAnything helps:\n\n* Creating issues (aka tickets/bugs/etc). Please feel free to use issues to report bugs, request features, and discuss changes.\n* Updating the documentation: ie this readme file. Be bold! Help create amazing documentation!\n* Submitting pull requests.\n\nHow to submit pull requests:\n\n1. Please create an issue and get my input before spending too much time creating a feature. Work with me to ensure your feature or addition is optimal and fits with the purpose of the project.\n2. Fork the repository\n3. clone your forked repo onto your machine and run `npm install` at its root\n4. If you're gonna work on multiple separate things, its best to create a separate branch for each of them\n5. edit!\n6. If it's a code change, please add to the unit tests (in the 'test/' folder) to verify that your change works\n  * Browser tests need to have the test package built and test server running - run test/buildAndServe.js to do this\n7. When you're done, run the unit tests and ensure they all pass\n8. Commit and push your changes\n9. Submit a pull request: https://help.github.com/articles/creating-a-pull-request\n\nChange Log\n=========\n\n* 1.0.3 - catching synchronous error and passing to future\n* 1.0.2 - updating async-future\n* 1.0.1 - adding setSynchronous method\n* 1.0.0 - first release\n\nLicense\n=======\nReleased under the MIT license: http://opensource.org/licenses/MIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/fresheneesz/ajax/issues"
  },
  "_id": "ajax@1.0.3",
  "_shasum": "760e47aa149c432deb6d8b5d27997ab6ec0b547f",
  "_from": "https://github.com/fresheneesz/ajax/archive/28d7ca2a922446ad9d2eae7d1bc615f3dbeb2f57.tar.gz",
  "_resolved": "https://github.com/fresheneesz/ajax/archive/28d7ca2a922446ad9d2eae7d1bc615f3dbeb2f57.tar.gz"
}
